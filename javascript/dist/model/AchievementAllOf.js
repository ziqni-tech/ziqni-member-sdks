/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@ziqni.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';
import Dependancy from './Dependancy';
import Scheduling from './Scheduling';
/**
 * The AchievementAllOf model module.
 * @module model/AchievementAllOf
 * @version 0.0.1
 */

class AchievementAllOf {
  /**
   * Constructs a new <code>AchievementAllOf</code>.
   * @alias module:model/AchievementAllOf
   */
  constructor() {
    AchievementAllOf.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  static initialize(obj) {}
  /**
   * Constructs a <code>AchievementAllOf</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AchievementAllOf} obj Optional instance to populate.
   * @return {module:model/AchievementAllOf} The populated <code>AchievementAllOf</code> instance.
   */


  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AchievementAllOf();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }

      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }

      if (data.hasOwnProperty('termsAndConditions')) {
        obj['termsAndConditions'] = ApiClient.convertToType(data['termsAndConditions'], 'String');
      }

      if (data.hasOwnProperty('constraints')) {
        obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
      }

      if (data.hasOwnProperty('maxNumberOfIssues')) {
        obj['maxNumberOfIssues'] = ApiClient.convertToType(data['maxNumberOfIssues'], 'Number');
      }

      if (data.hasOwnProperty('scheduling')) {
        obj['scheduling'] = Scheduling.constructFromObject(data['scheduling']);
      }

      if (data.hasOwnProperty('dependantOn')) {
        obj['dependantOn'] = Dependancy.constructFromObject(data['dependantOn']);
      }

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }

      if (data.hasOwnProperty('statusCode')) {
        obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'Number');
      }
    }

    return obj;
  }

}
/**
 * @member {String} name
 */


AchievementAllOf.prototype['name'] = undefined;
/**
 * @member {String} description
 */

AchievementAllOf.prototype['description'] = undefined;
/**
 * @member {String} termsAndConditions
 */

AchievementAllOf.prototype['termsAndConditions'] = undefined;
/**
 * Additional constraints, if set means true
 * @member {Array.<String>} constraints
 */

AchievementAllOf.prototype['constraints'] = undefined;
/**
 * Maximum number of issued achievements
 * @member {Number} maxNumberOfIssues
 */

AchievementAllOf.prototype['maxNumberOfIssues'] = undefined;
/**
 * @member {module:model/Scheduling} scheduling
 */

AchievementAllOf.prototype['scheduling'] = undefined;
/**
 * @member {module:model/Dependancy} dependantOn
 */

AchievementAllOf.prototype['dependantOn'] = undefined;
/**
 * Achievement status
 * @member {String} status
 */

AchievementAllOf.prototype['status'] = undefined;
/**
 * @member {Number} statusCode
 */

AchievementAllOf.prototype['statusCode'] = undefined;
export default AchievementAllOf;