/**
 * ZIQNI Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.14
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateRange from './DateRange';
import MessageType from './MessageType';
import QuerySortBy from './QuerySortBy';

/**
 * The MessageFilter model module.
 * @module model/MessageFilter
 * @version 1.0.14
 */
class MessageFilter {
    /**
     * Constructs a new <code>MessageFilter</code>.
     * @alias module:model/MessageFilter
     */
    constructor() { 
        
        MessageFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessageFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessageFilter} obj Optional instance to populate.
     * @return {module:model/MessageFilter} The populated <code>MessageFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessageFilter();

            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('ids')) {
                obj['ids'] = ApiClient.convertToType(data['ids'], ['String']);
            }
            if (data.hasOwnProperty('sortBy')) {
                obj['sortBy'] = ApiClient.convertToType(data['sortBy'], [QuerySortBy]);
            }
            if (data.hasOwnProperty('skip')) {
                obj['skip'] = ApiClient.convertToType(data['skip'], 'Number');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('expiryDateRange')) {
                obj['expiryDateRange'] = DateRange.constructFromObject(data['expiryDateRange']);
            }
            if (data.hasOwnProperty('createdDateRange')) {
                obj['createdDateRange'] = DateRange.constructFromObject(data['createdDateRange']);
            }
            if (data.hasOwnProperty('messageType')) {
                obj['messageType'] = MessageType.constructFromObject(data['messageType']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} tags
 */
MessageFilter.prototype['tags'] = undefined;

/**
 * @member {Array.<String>} ids
 */
MessageFilter.prototype['ids'] = undefined;

/**
 * @member {Array.<module:model/QuerySortBy>} sortBy
 */
MessageFilter.prototype['sortBy'] = undefined;

/**
 * @member {Number} skip
 */
MessageFilter.prototype['skip'] = undefined;

/**
 * @member {Number} limit
 */
MessageFilter.prototype['limit'] = undefined;

/**
 * @member {module:model/DateRange} expiryDateRange
 */
MessageFilter.prototype['expiryDateRange'] = undefined;

/**
 * @member {module:model/DateRange} createdDateRange
 */
MessageFilter.prototype['createdDateRange'] = undefined;

/**
 * @member {module:model/MessageType} messageType
 */
MessageFilter.prototype['messageType'] = undefined;






export default MessageFilter;

