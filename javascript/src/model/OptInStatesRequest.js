/**
 * ZIQNI Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.17
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OptinStatesFilter from './OptinStatesFilter';

/**
 * The OptInStatesRequest model module.
 * @module model/OptInStatesRequest
 * @version 1.0.17
 */
class OptInStatesRequest {
    /**
     * Constructs a new <code>OptInStatesRequest</code>.
     * 
     * @alias module:model/OptInStatesRequest
     * @param optinStatesFilter {module:model/OptinStatesFilter} 
     */
    constructor(optinStatesFilter) { 
        
        OptInStatesRequest.initialize(this, optinStatesFilter);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, optinStatesFilter) { 
        obj['optinStatesFilter'] = optinStatesFilter;
    }

    /**
     * Constructs a <code>OptInStatesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OptInStatesRequest} obj Optional instance to populate.
     * @return {module:model/OptInStatesRequest} The populated <code>OptInStatesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OptInStatesRequest();

            if (data.hasOwnProperty('optinStatesFilter')) {
                obj['optinStatesFilter'] = OptinStatesFilter.constructFromObject(data['optinStatesFilter']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OptInStatesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OptInStatesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OptInStatesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `optinStatesFilter`
        if (data['optinStatesFilter']) { // data not null
          OptinStatesFilter.validateJSON(data['optinStatesFilter']);
        }

        return true;
    }


}

OptInStatesRequest.RequiredProperties = ["optinStatesFilter"];

/**
 * @member {module:model/OptinStatesFilter} optinStatesFilter
 */
OptInStatesRequest.prototype['optinStatesFilter'] = undefined;






export default OptInStatesRequest;

