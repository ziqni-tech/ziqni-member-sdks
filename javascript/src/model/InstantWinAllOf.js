/**
 * ZIQNI Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstantWinTile from './InstantWinTile';

/**
 * The InstantWinAllOf model module.
 * @module model/InstantWinAllOf
 * @version 1.0.19
 */
class InstantWinAllOf {
    /**
     * Constructs a new <code>InstantWinAllOf</code>.
     * @alias module:model/InstantWinAllOf
     * @param instantWinType {Number} Spinner etc
     * @param tiles {Array.<module:model/InstantWinTile>} Tiles are the buiilding blocks of the instant win game
     */
    constructor(instantWinType, tiles) { 
        
        InstantWinAllOf.initialize(this, instantWinType, tiles);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, instantWinType, tiles) { 
        obj['instantWinType'] = instantWinType;
        obj['tiles'] = tiles;
    }

    /**
     * Constructs a <code>InstantWinAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstantWinAllOf} obj Optional instance to populate.
     * @return {module:model/InstantWinAllOf} The populated <code>InstantWinAllOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstantWinAllOf();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('termsAndConditions')) {
                obj['termsAndConditions'] = ApiClient.convertToType(data['termsAndConditions'], 'String');
            }
            if (data.hasOwnProperty('constraints')) {
                obj['constraints'] = ApiClient.convertToType(data['constraints'], ['String']);
            }
            if (data.hasOwnProperty('statusCode')) {
                obj['statusCode'] = ApiClient.convertToType(data['statusCode'], 'Number');
            }
            if (data.hasOwnProperty('instantWinType')) {
                obj['instantWinType'] = ApiClient.convertToType(data['instantWinType'], 'Number');
            }
            if (data.hasOwnProperty('iconLink')) {
                obj['iconLink'] = ApiClient.convertToType(data['iconLink'], 'String');
            }
            if (data.hasOwnProperty('bannerLink')) {
                obj['bannerLink'] = ApiClient.convertToType(data['bannerLink'], 'String');
            }
            if (data.hasOwnProperty('bannerLowResolutionLink')) {
                obj['bannerLowResolutionLink'] = ApiClient.convertToType(data['bannerLowResolutionLink'], 'String');
            }
            if (data.hasOwnProperty('bannerHighResolutionLink')) {
                obj['bannerHighResolutionLink'] = ApiClient.convertToType(data['bannerHighResolutionLink'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('tiles')) {
                obj['tiles'] = ApiClient.convertToType(data['tiles'], [InstantWinTile]);
            }
            if (data.hasOwnProperty('instanceResourceLink')) {
                obj['instanceResourceLink'] = ApiClient.convertToType(data['instanceResourceLink'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The display name
 * @member {String} name
 */
InstantWinAllOf.prototype['name'] = undefined;

/**
 * The description of this game
 * @member {String} description
 */
InstantWinAllOf.prototype['description'] = undefined;

/**
 * The standard terms applied to this game
 * @member {String} termsAndConditions
 */
InstantWinAllOf.prototype['termsAndConditions'] = undefined;

/**
 * Additional constraints, if set means true [optinRequiredForEntrants, hasRules, hasRewards]
 * @member {Array.<String>} constraints
 */
InstantWinAllOf.prototype['constraints'] = undefined;

/**
 * The status of this game
 * @member {Number} statusCode
 */
InstantWinAllOf.prototype['statusCode'] = undefined;

/**
 * Spinner etc
 * @member {Number} instantWinType
 */
InstantWinAllOf.prototype['instantWinType'] = undefined;

/**
 * Attachement id for the corresponding icon image.
 * @member {String} iconLink
 */
InstantWinAllOf.prototype['iconLink'] = undefined;

/**
 * Link to the banner
 * @member {String} bannerLink
 */
InstantWinAllOf.prototype['bannerLink'] = undefined;

/**
 * Link to the bannerLowResolution
 * @member {String} bannerLowResolutionLink
 */
InstantWinAllOf.prototype['bannerLowResolutionLink'] = undefined;

/**
 * Link to the bannerHighResolution
 * @member {String} bannerHighResolutionLink
 */
InstantWinAllOf.prototype['bannerHighResolutionLink'] = undefined;

/**
 * ISO8601 timestamp for when a Instant Win started. All records are stored in UTC time zone
 * @member {Date} startDate
 */
InstantWinAllOf.prototype['startDate'] = undefined;

/**
 * ISO8601 timestamp for when a Instant Win ended. All records are stored in UTC time zone
 * @member {Date} endDate
 */
InstantWinAllOf.prototype['endDate'] = undefined;

/**
 * Tiles are the buiilding blocks of the instant win game
 * @member {Array.<module:model/InstantWinTile>} tiles
 */
InstantWinAllOf.prototype['tiles'] = undefined;

/**
 * Link to the system resources for this instant win. https://<<space-name>>.cdn.ziqni.com/system-resources/instant-wins/<<instant-win-id>>
 * @member {String} instanceResourceLink
 */
InstantWinAllOf.prototype['instanceResourceLink'] = undefined;






export default InstantWinAllOf;

