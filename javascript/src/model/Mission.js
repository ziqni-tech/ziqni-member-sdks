/**
 * ZIQNI Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MissionEntry from './MissionEntry';
import OptinStatus from './OptinStatus';

/**
 * The Mission model module.
 * @module model/Mission
 * @version 1.0.1
 */
class Mission {
    /**
     * Constructs a new <code>Mission</code>.
     * Mission is a specialised view of connected achievements. The first achievement is the container, every dependant achievement is a chained dependency
     * @alias module:model/Mission
     * @param entries {Array.<module:model/MissionEntry>} 
     * @param id {String} 
     * @param availableFrom {Date} 
     * @param isCompleted {Boolean} 
     * @param optInStatus {module:model/OptinStatus} 
     */
    constructor(entries, id, availableFrom, isCompleted, optInStatus) { 
        
        Mission.initialize(this, entries, id, availableFrom, isCompleted, optInStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, entries, id, availableFrom, isCompleted, optInStatus) { 
        obj['entries'] = entries;
        obj['id'] = id;
        obj['availableFrom'] = availableFrom;
        obj['isCompleted'] = isCompleted;
        obj['optInStatus'] = optInStatus;
    }

    /**
     * Constructs a <code>Mission</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Mission} obj Optional instance to populate.
     * @return {module:model/Mission} The populated <code>Mission</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Mission();

            if (data.hasOwnProperty('entries')) {
                obj['entries'] = ApiClient.convertToType(data['entries'], [MissionEntry]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('termsAndConditions')) {
                obj['termsAndConditions'] = ApiClient.convertToType(data['termsAndConditions'], 'String');
            }
            if (data.hasOwnProperty('availableFrom')) {
                obj['availableFrom'] = ApiClient.convertToType(data['availableFrom'], 'Date');
            }
            if (data.hasOwnProperty('availableUntil')) {
                obj['availableUntil'] = ApiClient.convertToType(data['availableUntil'], 'Date');
            }
            if (data.hasOwnProperty('isCompleted')) {
                obj['isCompleted'] = ApiClient.convertToType(data['isCompleted'], 'Boolean');
            }
            if (data.hasOwnProperty('optInStatus')) {
                obj['optInStatus'] = OptinStatus.constructFromObject(data['optInStatus']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/MissionEntry>} entries
 */
Mission.prototype['entries'] = undefined;

/**
 * @member {String} id
 */
Mission.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Mission.prototype['name'] = undefined;

/**
 * @member {String} description
 */
Mission.prototype['description'] = undefined;

/**
 * @member {String} termsAndConditions
 */
Mission.prototype['termsAndConditions'] = undefined;

/**
 * @member {Date} availableFrom
 */
Mission.prototype['availableFrom'] = undefined;

/**
 * @member {Date} availableUntil
 */
Mission.prototype['availableUntil'] = undefined;

/**
 * @member {Boolean} isCompleted
 */
Mission.prototype['isCompleted'] = undefined;

/**
 * @member {module:model/OptinStatus} optInStatus
 */
Mission.prototype['optInStatus'] = undefined;






export default Mission;

