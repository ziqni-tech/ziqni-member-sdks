/**
 * ZIQNI Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CompetitionCountResponse from '../model/CompetitionCountResponse';
import CompetitionRequest from '../model/CompetitionRequest';
import CompetitionResponse from '../model/CompetitionResponse';
import ModelCountRequest from '../model/ModelCountRequest';

/**
* Competitions service.
* @module api/CompetitionsApi
* @version 1.0.12
*/
export default class CompetitionsApi {

    /**
    * Constructs a new CompetitionsApi. 
    * @alias module:api/CompetitionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCompetitions operation.
     * @callback module:api/CompetitionsApi~getCompetitionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompetitionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get competitions by member reference id
     * Returns a list of competitions for the provided member ref id and applied filters.
     * @param {module:model/CompetitionRequest} competitionRequest 
     * @param {module:api/CompetitionsApi~getCompetitionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompetitionResponse}
     */
    getCompetitions(competitionRequest, callback) {
      let postBody = competitionRequest;
      // verify the required parameter 'competitionRequest' is set
      if (competitionRequest === undefined || competitionRequest === null) {
        throw new Error("Missing the required parameter 'competitionRequest' when calling getCompetitions");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CompetitionResponse;
      return this.apiClient.callApi(
        '/competitions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCompetitionsCount operation.
     * @callback module:api/CompetitionsApi~getCompetitionsCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CompetitionCountResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get competitions by member reference id
     * Returns a count of competitions for the provided member ref id and applied filters.
     * @param {module:model/ModelCountRequest} modelCountRequest 
     * @param {module:api/CompetitionsApi~getCompetitionsCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CompetitionCountResponse}
     */
    getCompetitionsCount(modelCountRequest, callback) {
      let postBody = modelCountRequest;
      // verify the required parameter 'modelCountRequest' is set
      if (modelCountRequest === undefined || modelCountRequest === null) {
        throw new Error("Missing the required parameter 'modelCountRequest' when calling getCompetitionsCount");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CompetitionCountResponse;
      return this.apiClient.callApi(
        '/competitions/count', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
