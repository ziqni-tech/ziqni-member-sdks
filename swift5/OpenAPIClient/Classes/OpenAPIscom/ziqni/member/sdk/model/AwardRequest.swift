//
// AwardRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct AwardRequest: Codable, Hashable {

    public var awardFilter: AwardFilter?
    /** The language codes can be found in the settings/transalations section of the back office */
    public var languageKey: String?
    /** The UoM currency key to normalise the value to for presentation. Example; If the reward is in EUR and this value is set to USD then the value will be multiplied by 1.09387699997429 */
    public var currencyKey: String?

    public init(awardFilter: AwardFilter? = nil, languageKey: String? = nil, currencyKey: String? = nil) {
        self.awardFilter = awardFilter
        self.languageKey = languageKey
        self.currencyKey = currencyKey
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case awardFilter
        case languageKey
        case currencyKey
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(awardFilter, forKey: .awardFilter)
        try container.encodeIfPresent(languageKey, forKey: .languageKey)
        try container.encodeIfPresent(currencyKey, forKey: .currencyKey)
    }
}

