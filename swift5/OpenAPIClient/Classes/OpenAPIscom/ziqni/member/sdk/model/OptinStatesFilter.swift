//
// OptinStatesFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct OptinStatesFilter: Codable, Hashable {

    /** Optionally provide entity types to filer by. Valid options are Achievement, Competition, or Contest */
    public var entityTypes: [EntityType]?
    /** Optionally provide a list of identifiers for either Achievements, Competitions, or Contest */
    public var ids: [String]?
    public var statusCodes: RangeQuery?
    /** The number of records to skip. Zero [0] is the defualt value */
    public var skip: Int?
    /** Limit t6he results. The default is 20 if left empty */
    public var limit: Int?

    public init(entityTypes: [EntityType]? = nil, ids: [String]? = nil, statusCodes: RangeQuery? = nil, skip: Int? = nil, limit: Int? = nil) {
        self.entityTypes = entityTypes
        self.ids = ids
        self.statusCodes = statusCodes
        self.skip = skip
        self.limit = limit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case entityTypes
        case ids
        case statusCodes
        case skip
        case limit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(entityTypes, forKey: .entityTypes)
        try container.encodeIfPresent(ids, forKey: .ids)
        try container.encodeIfPresent(statusCodes, forKey: .statusCodes)
        try container.encodeIfPresent(skip, forKey: .skip)
        try container.encodeIfPresent(limit, forKey: .limit)
    }
}

