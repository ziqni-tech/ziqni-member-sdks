//
// EntityGraph.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EntityGraph: Codable, Hashable {

    /** Pairs of nodes that specify a line joining these two nodes are said to form an edge */
    public var edges: [EntityGraphEdge]?
    /** Nodes in this graph that are in state greater than 35 */
    public var nodesInCompletedState: Int?

    public init(edges: [EntityGraphEdge]? = nil, nodesInCompletedState: Int? = nil) {
        self.edges = edges
        self.nodesInCompletedState = nodesInCompletedState
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case edges
        case nodesInCompletedState
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(edges, forKey: .edges)
        try container.encodeIfPresent(nodesInCompletedState, forKey: .nodesInCompletedState)
    }
}

