/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ProxyRequest,
    ProxyRequestFromJSON,
    ProxyRequestToJSON,
    ProxyResponse,
    ProxyResponseFromJSON,
    ProxyResponseToJSON,
} from '../models';

export interface ProxyOperationRequest {
    proxyRequest: ProxyRequest;
}

/**
 * 
 */
export class ProxyApi extends runtime.BaseAPI {

    /**
     * Perform proxy operations.
     * Proxy
     */
    async proxyRaw(requestParameters: ProxyOperationRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<ProxyResponse>> {
        if (requestParameters.proxyRequest === null || requestParameters.proxyRequest === undefined) {
            throw new runtime.RequiredError('proxyRequest','Required parameter requestParameters.proxyRequest was null or undefined when calling proxy.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/proxy`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ProxyRequestToJSON(requestParameters.proxyRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ProxyResponseFromJSON(jsonValue));
    }

    /**
     * Perform proxy operations.
     * Proxy
     */
    async proxy(requestParameters: ProxyOperationRequest, initOverrides?: RequestInit): Promise<ProxyResponse> {
        const response = await this.proxyRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
