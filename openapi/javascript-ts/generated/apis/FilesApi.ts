/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    FileRequest,
    FileRequestFromJSON,
    FileRequestToJSON,
    FileResponse,
    FileResponseFromJSON,
    FileResponseToJSON,
} from '../models';

export interface GetFilesRequest {
    fileRequest: FileRequest;
}

/**
 * 
 */
export class FilesApi extends runtime.BaseAPI {

    /**
     * This operation supports retrieval of file objects for one or many entities.
     * Get files.
     */
    async getFilesRaw(requestParameters: GetFilesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FileResponse>> {
        if (requestParameters.fileRequest === null || requestParameters.fileRequest === undefined) {
            throw new runtime.RequiredError('fileRequest','Required parameter requestParameters.fileRequest was null or undefined when calling getFiles.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/files`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: FileRequestToJSON(requestParameters.fileRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FileResponseFromJSON(jsonValue));
    }

    /**
     * This operation supports retrieval of file objects for one or many entities.
     * Get files.
     */
    async getFiles(requestParameters: GetFilesRequest, initOverrides?: RequestInit): Promise<FileResponse> {
        const response = await this.getFilesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
