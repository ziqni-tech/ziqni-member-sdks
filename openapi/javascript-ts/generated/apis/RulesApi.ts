/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    RuleRequest,
    RuleRequestFromJSON,
    RuleRequestToJSON,
    RuleResponse,
    RuleResponseFromJSON,
    RuleResponseToJSON,
} from '../models';

export interface GetRulesRequest {
    ruleRequest: RuleRequest;
}

/**
 * 
 */
export class RulesApi extends runtime.BaseAPI {

    /**
     * This operation support retrieval of rules for one or many entities.
     * Get rules
     */
    async getRulesRaw(requestParameters: GetRulesRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<RuleResponse>> {
        if (requestParameters.ruleRequest === null || requestParameters.ruleRequest === undefined) {
            throw new runtime.RequiredError('ruleRequest','Required parameter requestParameters.ruleRequest was null or undefined when calling getRules.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("OAuth2", ["ViewRules"]);
        }

        const response = await this.request({
            path: `/rules`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RuleRequestToJSON(requestParameters.ruleRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => RuleResponseFromJSON(jsonValue));
    }

    /**
     * This operation support retrieval of rules for one or many entities.
     * Get rules
     */
    async getRules(requestParameters: GetRulesRequest, initOverrides?: RequestInit): Promise<RuleResponse> {
        const response = await this.getRulesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
