/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenRequest
 */
export interface TokenRequest {
    /**
     * The API key to use to generate this token.
     * @type {string}
     * @memberof TokenRequest
     */
    apiKey: string;
    /**
     * Default is FALSE, if set to TRUE then the meberId will be assumed to be client provided reference id, if set to false then the memberId will be assumed to be a ZIQNI generated identifier.
     * @type {boolean}
     * @memberof TokenRequest
     */
    isReferenceId?: boolean;
    /**
     * Allowed origins for the generated token. Leave empty to permit all origins, Alternative provide up to 3 allowed origin URIs like https://my-space.api.ziqni.io
     * @type {Array<string>}
     * @memberof TokenRequest
     */
    origins?: Array<string>;
    /**
     * The identifier used to find the member information. if this value is set to "__PUBLIC__" and isReferenceId is set to "FALSE" then a genral use, non-member specific token will be issued
     * @type {string}
     * @memberof TokenRequest
     */
    member: string;
    /**
     * The number of minutes this token will be valid for. If left blank the token will only be valid for 30 minutes
     * @type {number}
     * @memberof TokenRequest
     */
    expires?: number;
}

export function TokenRequestFromJSON(json: any): TokenRequest {
    return TokenRequestFromJSONTyped(json, false);
}

export function TokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'apiKey': json['apiKey'],
        'isReferenceId': !exists(json, 'isReferenceId') ? undefined : json['isReferenceId'],
        'origins': !exists(json, 'origins') ? undefined : json['origins'],
        'member': json['member'],
        'expires': !exists(json, 'expires') ? undefined : json['expires'],
    };
}

export function TokenRequestToJSON(value?: TokenRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'apiKey': value.apiKey,
        'isReferenceId': value.isReferenceId,
        'origins': value.origins,
        'member': value.member,
        'expires': value.expires,
    };
}

