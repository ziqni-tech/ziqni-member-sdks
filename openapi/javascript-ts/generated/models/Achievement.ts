/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AchievementAllOf,
    AchievementAllOfFromJSON,
    AchievementAllOfFromJSONTyped,
    AchievementAllOfToJSON,
    Dependancy,
    DependancyFromJSON,
    DependancyFromJSONTyped,
    DependancyToJSON,
    ModelDefault,
    ModelDefaultFromJSON,
    ModelDefaultFromJSONTyped,
    ModelDefaultToJSON,
    OptionalModelFields,
    OptionalModelFieldsFromJSON,
    OptionalModelFieldsFromJSONTyped,
    OptionalModelFieldsToJSON,
    Scheduling,
    SchedulingFromJSON,
    SchedulingFromJSONTyped,
    SchedulingToJSON,
} from './';

/**
 * 
 * @export
 * @interface Achievement
 */
export interface Achievement {
    /**
     * 
     * @type {string}
     * @memberof Achievement
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Achievement
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Achievement
     */
    termsAndConditions?: string;
    /**
     * Additional constraints, if set means true
     * @type {Array<string>}
     * @memberof Achievement
     */
    constraints?: Array<string>;
    /**
     * Maximum number of issued achievements
     * @type {number}
     * @memberof Achievement
     */
    maxNumberOfIssues?: number;
    /**
     * 
     * @type {Scheduling}
     * @memberof Achievement
     */
    scheduling?: Scheduling;
    /**
     * 
     * @type {Dependancy}
     * @memberof Achievement
     */
    dependantOn?: Dependancy;
    /**
     * Achievement status
     * @type {string}
     * @memberof Achievement
     */
    status?: string;
    /**
     * 
     * @type {number}
     * @memberof Achievement
     */
    statusCode?: number;
    /**
     * Ziqni id of the model
     * @type {string}
     * @memberof Achievement
     */
    id: string;
    /**
     * This is the space name which is linked to the account
     * @type {string}
     * @memberof Achievement
     */
    spaceName?: string;
    /**
     * ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
     * @type {Date}
     * @memberof Achievement
     */
    created?: Date;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Achievement
     */
    customFields?: { [key: string]: object; };
    /**
     * A list of id's used to tag models
     * @type {Array<string>}
     * @memberof Achievement
     */
    tags?: Array<string>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Achievement
     */
    metadata?: { [key: string]: string; };
}

export function AchievementFromJSON(json: any): Achievement {
    return AchievementFromJSONTyped(json, false);
}

export function AchievementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Achievement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'termsAndConditions': !exists(json, 'termsAndConditions') ? undefined : json['termsAndConditions'],
        'constraints': !exists(json, 'constraints') ? undefined : json['constraints'],
        'maxNumberOfIssues': !exists(json, 'maxNumberOfIssues') ? undefined : json['maxNumberOfIssues'],
        'scheduling': !exists(json, 'scheduling') ? undefined : SchedulingFromJSON(json['scheduling']),
        'dependantOn': !exists(json, 'dependantOn') ? undefined : DependancyFromJSON(json['dependantOn']),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'statusCode': !exists(json, 'statusCode') ? undefined : json['statusCode'],
        'id': json['id'],
        'spaceName': !exists(json, 'spaceName') ? undefined : json['spaceName'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'customFields': !exists(json, 'customFields') ? undefined : json['customFields'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
    };
}

export function AchievementToJSON(value?: Achievement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'termsAndConditions': value.termsAndConditions,
        'constraints': value.constraints,
        'maxNumberOfIssues': value.maxNumberOfIssues,
        'scheduling': SchedulingToJSON(value.scheduling),
        'dependantOn': DependancyToJSON(value.dependantOn),
        'status': value.status,
        'statusCode': value.statusCode,
        'id': value.id,
        'spaceName': value.spaceName,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'customFields': value.customFields,
        'tags': value.tags,
        'metadata': value.metadata,
    };
}

