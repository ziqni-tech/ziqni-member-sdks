/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MemberType,
    MemberTypeFromJSON,
    MemberTypeFromJSONTyped,
    MemberTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface MemberAllOf
 */
export interface MemberAllOf {
    /**
     * The name of the member that is used on leader boards and public displays
     * @type {string}
     * @memberof MemberAllOf
     */
    name?: string;
    /**
     * The reference to this member in your system
     * @type {string}
     * @memberof MemberAllOf
     */
    memberRefId?: string;
    /**
     * 
     * @type {MemberType}
     * @memberof MemberAllOf
     */
    memberType?: MemberType;
    /**
     * A social group like Guilds
     * @type {Array<string>}
     * @memberof MemberAllOf
     */
    teamMembers?: Array<string>;
    /**
     * Additional constraints
     * @type {Array<string>}
     * @memberof MemberAllOf
     */
    constraints?: Array<string>;
    /**
     * To what time zone teh emmber belongs to
     * @type {string}
     * @memberof MemberAllOf
     */
    timeZoneOffset?: string;
}

export function MemberAllOfFromJSON(json: any): MemberAllOf {
    return MemberAllOfFromJSONTyped(json, false);
}

export function MemberAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MemberAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'memberRefId': !exists(json, 'memberRefId') ? undefined : json['memberRefId'],
        'memberType': !exists(json, 'memberType') ? undefined : MemberTypeFromJSON(json['memberType']),
        'teamMembers': !exists(json, 'teamMembers') ? undefined : json['teamMembers'],
        'constraints': !exists(json, 'constraints') ? undefined : json['constraints'],
        'timeZoneOffset': !exists(json, 'timeZoneOffset') ? undefined : json['timeZoneOffset'],
    };
}

export function MemberAllOfToJSON(value?: MemberAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'memberRefId': value.memberRefId,
        'memberType': MemberTypeToJSON(value.memberType),
        'teamMembers': value.teamMembers,
        'constraints': value.constraints,
        'timeZoneOffset': value.timeZoneOffset,
    };
}

