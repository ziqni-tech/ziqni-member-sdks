/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScoringStrategy
 */
export interface ScoringStrategy {
    /**
     * The scoring strategies types "SumBest" value
     * @type {number}
     * @memberof ScoringStrategy
     */
    limitUpdatesTo?: number;
    /**
     * The scoring strategies types "LimitedTo" value
     * @type {number}
     * @memberof ScoringStrategy
     */
    sumBestXOf?: number;
    /**
     * The scoring strategies types "FirstTo" value
     * @type {number}
     * @memberof ScoringStrategy
     */
    lastUpdateTimeStamp?: number;
    /**
     * Not supported at the moment
     * @type {number}
     * @memberof ScoringStrategy
     */
    recordTimeWhenSumReaches?: number;
}

export function ScoringStrategyFromJSON(json: any): ScoringStrategy {
    return ScoringStrategyFromJSONTyped(json, false);
}

export function ScoringStrategyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScoringStrategy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'limitUpdatesTo': !exists(json, 'limitUpdatesTo') ? undefined : json['limitUpdatesTo'],
        'sumBestXOf': !exists(json, 'sumBestXOf') ? undefined : json['sumBestXOf'],
        'lastUpdateTimeStamp': !exists(json, 'lastUpdateTimeStamp') ? undefined : json['lastUpdateTimeStamp'],
        'recordTimeWhenSumReaches': !exists(json, 'recordTimeWhenSumReaches') ? undefined : json['recordTimeWhenSumReaches'],
    };
}

export function ScoringStrategyToJSON(value?: ScoringStrategy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'limitUpdatesTo': value.limitUpdatesTo,
        'sumBestXOf': value.sumBestXOf,
        'lastUpdateTimeStamp': value.lastUpdateTimeStamp,
        'recordTimeWhenSumReaches': value.recordTimeWhenSumReaches,
    };
}

