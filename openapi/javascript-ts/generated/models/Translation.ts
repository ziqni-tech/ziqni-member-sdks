/* tslint:disable */
/* eslint-disable */
/**
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    TranslationEntry,
    TranslationEntryFromJSON,
    TranslationEntryFromJSONTyped,
    TranslationEntryToJSON,
} from './';

/**
 * 
 * @export
 * @interface Translation
 */
export interface Translation {
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    accountId?: string;
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    entityId?: string;
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    entityType?: string;
    /**
     * 
     * @type {number}
     * @memberof Translation
     */
    version?: number;
    /**
     * date-time
     * @type {Date}
     * @memberof Translation
     */
    created?: Date;
    /**
     * 
     * @type {Array<TranslationEntry>}
     * @memberof Translation
     */
    translations?: Array<TranslationEntry>;
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    languageId?: string;
    /**
     * 
     * @type {string}
     * @memberof Translation
     */
    languageKey?: string;
}

export function TranslationFromJSON(json: any): Translation {
    return TranslationFromJSONTyped(json, false);
}

export function TranslationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Translation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'entityId': !exists(json, 'entityId') ? undefined : json['entityId'],
        'entityType': !exists(json, 'entityType') ? undefined : json['entityType'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'translations': !exists(json, 'translations') ? undefined : ((json['translations'] as Array<any>).map(TranslationEntryFromJSON)),
        'languageId': !exists(json, 'languageId') ? undefined : json['languageId'],
        'languageKey': !exists(json, 'languageKey') ? undefined : json['languageKey'],
    };
}

export function TranslationToJSON(value?: Translation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'accountId': value.accountId,
        'entityId': value.entityId,
        'entityType': value.entityType,
        'version': value.version,
        'created': value.created === undefined ? undefined : (value.created.toISOString()),
        'translations': value.translations === undefined ? undefined : ((value.translations as Array<any>).map(TranslationEntryToJSON)),
        'languageId': value.languageId,
        'languageKey': value.languageKey,
    };
}

