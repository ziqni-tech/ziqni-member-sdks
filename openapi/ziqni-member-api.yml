openapi: 3.0.2
info:
    title: ZIQNI Member API
    version: 1.0.1
    description: >-
        The ZIQNI Member-API is the primary resource used to build services and widgets for your members
        [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the
        system is decribed using OpenApi schema for convenience.
servers:
    -
        url: 'https://member-api.ziqni.com'
        description: Live
paths:
    /member-info:
        summary: Member information
        description: The endpoint provides information about the member.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MemberRequest'
                required: true
            tags:
                - members
            responses:
                '200':
                    $ref: '#/components/responses/MemberResponseBody'
                '400':
                    $ref: '#/components/responses/MemberResponseBody'
                '500':
                    $ref: '#/components/responses/MemberResponseBody'
            security:
                -
                    OAuth2:
                        - ViewMembers
            operationId: getMember
            summary: Get member information by member reference id
            description: Returns member information for the provided member reference id
            x-ws-only: true
    /rewards:
        summary: Reward operations
        description: This endpoint is used to perform reward operations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EntityRequest'
                required: true
            tags:
                - rewards
            responses:
                '200':
                    $ref: '#/components/responses/RewardResponseBody'
                '400':
                    $ref: '#/components/responses/RewardResponseBody'
                '500':
                    $ref: '#/components/responses/RewardResponseBody'
            security:
                -
                    OAuth2:
                        - ViewRewards
            operationId: getRewards
            summary: Get rewards
            description: This operation support retrieval of rewards for one or many entitites.
            x-ws-only: true
    /rules:
        summary: Rules operations
        description: This endpoint is used to perform rules operations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EntityRequest'
                required: true
            tags:
                - rules
            responses:
                '200':
                    $ref: '#/components/responses/RuleResponseBody'
                '400':
                    $ref: '#/components/responses/RuleResponseBody'
                '500':
                    $ref: '#/components/responses/RuleResponseBody'
            security:
                -
                    OAuth2:
                        - ViewRules
            operationId: getRules
            summary: Get rules
            description: This operation support retrieval of rules for one or many entities.
            x-ws-only: true
    /achievements:
        summary: Member achievements operation
        description: This endpoint supports member's achievements operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AchievementRequest'
                required: true
            tags:
                - achievements
            responses:
                '200':
                    $ref: '#/components/responses/AchievementResponseBody'
                '400':
                    $ref: '#/components/responses/AchievementResponseBody'
                '500':
                    $ref: '#/components/responses/AchievementResponseBody'
            security:
                -
                    OAuth2:
                        - ViewAchievements
            operationId: getAchievements
            summary: Get achievements by member reference id
            description: Returns a list of achievements for the provided member ref id and applied filters.
            x-ws-only: true
    /awards:
        summary: Award operations
        description: This endpoint is used to perform award operations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AwardRequest'
                required: true
            tags:
                - awards
            responses:
                '200':
                    $ref: '#/components/responses/AwardResponseBody'
                '400':
                    $ref: '#/components/responses/AwardResponseBody'
                '500':
                    $ref: '#/components/responses/AwardResponseBody'
            security:
                -
                    OAuth2:
                        - ViewAwards
            operationId: getAwards
            summary: Get awards.
            description: This operation supports retrieval of awards for one or many entities.
            x-ws-only: true
    /awards-claim:
        summary: Award operations
        description: This endpoint is used to perform award operations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClaimAwardRequest'
                required: true
            tags:
                - awards
            responses:
                '200':
                    $ref: '#/components/responses/AwardResponseBody'
                '400':
                    $ref: '#/components/responses/AwardResponseBody'
                '500':
                    $ref: '#/components/responses/AwardResponseBody'
            security:
                -
                    OAuth2:
                        - ClaimAwards
            operationId: claimAwards
            summary: Claim awards.
            description: This operation enables a member to claim awards.
            x-ws-only: true
    /competitions:
        summary: Member competitions operation
        description: This endpoint supports member's competitions operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CompetitionRequest'
                required: true
            tags:
                - competitions
            responses:
                '200':
                    $ref: '#/components/responses/CompetitionResponseBody'
                '400':
                    $ref: '#/components/responses/CompetitionResponseBody'
                '500':
                    $ref: '#/components/responses/CompetitionResponseBody'
            security:
                -
                    OAuth2:
                        - ViewCompetitions
            operationId: getCompetitions
            summary: Get competitions by member reference id
            description: Returns a list of competitions for the provided member ref id and applied filters.
            x-ws-only: true
    /contests:
        summary: Member contests operation
        description: This endpoint supports member's contests operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ContestRequest'
                required: true
            tags:
                - contests
            responses:
                '200':
                    $ref: '#/components/responses/ContestResponseBody'
                '400':
                    $ref: '#/components/responses/ContestResponseBody'
                '500':
                    $ref: '#/components/responses/ContestResponseBody'
            security:
                -
                    OAuth2:
                        - ViewContests
            operationId: getContests
            summary: Get contests by member reference Id
            description: Returns a list of contests for the provided member ref id and applied filters.
            x-ws-only: true
    /files:
        summary: Files operations
        description: This endpoint is used to perform files operations.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/FileRequest'
                required: true
            tags:
                - files
            responses:
                '200':
                    $ref: '#/components/responses/FileResponseBody'
                '400':
                    $ref: '#/components/responses/FileResponseBody'
                '500':
                    $ref: '#/components/responses/FileResponseBody'
            operationId: getFiles
            summary: Get files.
            description: This operation supports retrieval of file objects for one or many entities.
            x-ws-only: true
    /manage-optin:
        summary: Member optin operation
        description: This endpoint supports member's optin operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ManageOptinRequest'
                required: true
            tags:
                - opt-in
            responses:
                '200':
                    $ref: '#/components/responses/OptInResponseBody'
                '400':
                    $ref: '#/components/responses/OptInResponseBody'
                '500':
                    $ref: '#/components/responses/OptInResponseBody'
            security:
                -
                    OAuth2:
                        - ViewMembers
            operationId: manageOptin
            summary: Get member optin information
            description: Returns a list of member optin information
            x-ws-only: true
    /leaderboard:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LeaderboardSubscriptionRequest'
            tags:
                - leaderboard
            responses:
                '200':
                    $ref: '#/components/responses/LeaderboardResponseBody'
            operationId: subscribeToLeaderboard
    /messages:
        summary: Member messages operation
        description: This endpoint supports member's messages operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/MessageRequest'
                required: true
            tags:
                - messages
            responses:
                '200':
                    $ref: '#/components/responses/MessageResponseBody'
                '400':
                    $ref: '#/components/responses/MessageResponseBody'
                '500':
                    $ref: '#/components/responses/MessageResponseBody'
            security:
                -
                    OAuth2:
                        - ViewMessages
            operationId: getMessages
            summary: Get messages by member reference id
            description: Returns a list of messages for the provided member ref id and applied filters.
            x-ws-only: true
    /optin-states:
        summary: Member optin operation
        description: This endpoint supports member's optin operation.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OptInStatesRequest'
                required: true
            tags:
                - opt-in
            responses:
                '200':
                    $ref: '#/components/responses/OptInResponseBody'
                '400':
                    $ref: '#/components/responses/OptInResponseBody'
                '500':
                    $ref: '#/components/responses/OptInResponseBody'
            security:
                -
                    OAuth2:
                        - ViewMembers
            operationId: optInStates
            summary: Get member optin status information
            description: Returns a list of member optin status information
            x-ws-only: true
    /heartbeat:
        post:
            callbacks:
                heartbeatCallback:
                    '{$request.body#/entityType}':
                        post:
                            requestBody:
                                description: subscription payload
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/Heartbeat'
                            responses:
                                '202':
                                    description: >
                                        Your server implementation should return this HTTP status code if the
                                        data was received successfully
            tags:
                - heartbeat
            responses:
                '200':
                    description: On receipt
            operationId: heartbeat
    /callbacks:
        description: For websockets use this queue "/queue/callbacks" to receive push messages.
        get:
            callbacks:
                entityChanged:
                    '{$request.body#/entityType}':
                        post:
                            requestBody:
                                description: subscription payload
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/EntityChanged'
                            responses:
                                '202':
                                    description: >
                                        Your implementation should only return return this HTTP status code if
                                        it is using the HTTP protocol and only if the data was received
                                        successfully
                entityStateChanged:
                    '{$request.body#/entityType}':
                        post:
                            requestBody:
                                description: subscription payload
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/EntityStateChanged'
                            responses:
                                '200':
                                    description: >
                                        Your implementation should only return return this HTTP status code if
                                        it is using the HTTP protocol and only if the data was received
                                        successfully
                proxy:
                    '{$request.body#/entityType}':
                        post:
                            requestBody:
                                description: A message proxied to this consumer
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/ProxyMessage'
                            responses:
                                '200':
                                    description: >
                                        Your implementation should only return return this HTTP status code if
                                        it is using the HTTP protocol and only if the data was received
                                        successfully
                notification:
                    '{$request.body#/id}':
                        post:
                            requestBody:
                                description: New notification
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/Message'
                            responses:
                                '200':
                                    description: >
                                        Your implementation should only return return this HTTP status code if
                                        it is using the HTTP protocol and only if the data was received
                                        successfully
                leaderboardUpdate:
                    '{$request.body#/id}':
                        post:
                            requestBody:
                                description: Receive updates to the subscribed leaderboards
                                content:
                                    application/json:
                                        schema:
                                            $ref: '#/components/schemas/Leaderboard'
                            responses:
                                '200':
                                    description: >
                                        Your implementation should only return return this HTTP status code if
                                        it is using the HTTP protocol and only if the data was received
                                        successfully
            tags:
                - callbacks
            responses:
                '202':
                    $ref: '#/components/responses/CallbackResponseBody'
                '500':
                    $ref: '#/components/responses/CallbackResponseBody'
            operationId: listCallbacks
            summary: Describe the system callbacks and there constraints
            description: subscribes a client to receive out-of-band data
    /graphs:
        summary: Structures the connections data as a graph.
        description: >-
            The ZIQNI graph data structure consists of a finite (and possibly mutable) set of vertices (also
            called nodes or points), together with a set of ordered pairs for a directed graph. These pairs
            are known as edges (also called links or lines), and for a directed graph are also known as edges
            but also sometimes arrows or arcs whicj are joined using the dependant on must or should within
            achievements.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/EntityGraphRequest'
                required: true
            tags:
                - graphs
            responses:
                '200':
                    $ref: '#/components/responses/EntityGraphResponseBody'
                '400':
                    $ref: '#/components/responses/EntityGraphResponseBody'
                '500':
                    $ref: '#/components/responses/EntityGraphResponseBody'
            security:
                -
                    OAuth2:
                        - ViewMissions
            operationId: getGraph
            summary: Get achievements by member reference id
            description: Returns a list of graphs based on the entity type.
            x-ws-only: true
components:
    schemas:
        ResponseMeta:
            description: 'Response metadata   '
            required:
                - totalRecordsFound
                - skip
                - limit
            type: object
            properties:
                totalRecordsFound:
                    format: int32
                    description: ''
                    type: integer
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                objectType:
                    description: ''
                    type: string
                resultCount:
                    format: int32
                    description: ''
                    type: integer
            example:
                totalRecordsFound: 82
                skip: 22
                limit: 12
                objectType: some text
                resultCount: 12
        Error:
            description: ''
            required:
                - status
            type: object
            properties:
                message:
                    description: ''
                    type: string
                code:
                    format: int32
                    description: ''
                    type: integer
                status:
                    format: int32
                    description: ''
                    type: integer
            example:
                message: 'No account found for space name - [test]'
                code: 1007
                status: 404
        QueryMultipleFields:
            description: ''
            type: object
            properties:
                queryFields:
                    description: Multiple fields to be included in search for the given value.
                    type: array
                    items:
                        type: string
                queryValue:
                    description: The value to search for across given fields.
                    type: string
            example:
                queryFields:
                    - name
                    - description
                queryValue: ziqni
        RangeQuery:
            description: ''
            type: object
            properties:
                gt:
                    description: Greater than value
                    type: string
                lt:
                    description: Less than value
                    type: string
                constraints:
                    description: Additional constraints
                    type: array
                    items:
                        type: string
            example:
                gt: '1.0'
                lt: '3'
                constraints:
                    - includeBounds
        QuerySortBy:
            required:
                - queryField
                - order
            type: object
            properties:
                queryField:
                    description: The key of the parameter that is being searched
                    type: string
                    example: competitionId
                order:
                    $ref: '#/components/schemas/SortOrder'
        SortOrder:
            description: Specify the sort order.
            enum:
                - Asc
                - Desc
            type: string
        AchievementResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Achievement'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 74
                    skip: 7
                    limit: 2
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        id: ziqniId
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 20
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 54
                            every:
                                - 96
                                - 80
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 4
                        status: some text
                        statusCode: 23
                    -
                        id: ziqniId
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 24
                        scheduling:
                            scheduleType: Once
                            scheduleOccurrencesLimit: 76
                            every:
                                - 11
                                - 38
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 65
                        status: some text
                        statusCode: 39
                errors:
                    -
                        message: some text
                        code: 1
                        status: 92
                    -
                        message: some text
                        code: 0
                        status: 28
        CompetitionResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Competition'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 11
                    skip: 77
                    limit: 58
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        id: ziqniId
                        competitionType: Leaderboard
                        numberOfRounds: 95
                        numberOfGroupStages: 46
                        maxNumberOfEntrants: 7
                        minNumberOfEntrants: 74
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        entrantMemberType: some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 6
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        status: Starting
                        statusCode: 91
                        contests:
                            -
                                competitionId: some text
                                row: 56
                                name: some text
                                round: 89
                                groupStage: 54
                                entrantsFromContest:
                                    - some text
                                    - some text
                                status: Deleted
                                statusCode: 72
                                scheduledStartDate: '2018-02-10T09:30Z'
                                scheduledEndDate: '2018-02-10T09:30Z'
                                actualStartDate: '2018-02-10T09:30Z'
                                actualEndDate: '2018-02-10T09:30Z'
                                tags:
                                    - some text
                                    - some text
                                rewards:
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 60.22
                                        rewardType: some text
                                        rewardTypeId: some text
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 84.71
                                        rewardType: some text
                                        rewardTypeId: some text
                            -
                                competitionId: some text
                                row: 84
                                name: some text
                                round: 73
                                groupStage: 83
                                entrantsFromContest:
                                    - some text
                                    - some text
                                status: Finalised
                                statusCode: 33
                                scheduledStartDate: '2018-02-10T09:30Z'
                                scheduledEndDate: '2018-02-10T09:30Z'
                                actualStartDate: '2018-02-10T09:30Z'
                                actualEndDate: '2018-02-10T09:30Z'
                                tags:
                                    - some text
                                    - some text
                                rewards:
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 24.39
                                        rewardType: some text
                                        rewardTypeId: some text
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 61.73
                                        rewardType: some text
                                        rewardTypeId: some text
                        constraints:
                            - some text
                            - some text
                        products:
                            -
                                name: some text
                                productRefId: some text
                                tags:
                                    - some text
                                    - some text
                            -
                                name: some text
                                productRefId: some text
                                tags:
                                    - some text
                                    - some text
                    -
                        id: ziqniId
                        competitionType: Leaderboard
                        numberOfRounds: 96
                        numberOfGroupStages: 57
                        maxNumberOfEntrants: 68
                        minNumberOfEntrants: 89
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        entrantMemberType: some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 63
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        status: Starting
                        statusCode: 91
                        contests:
                            -
                                competitionId: some text
                                row: 65
                                name: some text
                                round: 54
                                groupStage: 15
                                entrantsFromContest:
                                    - some text
                                    - some text
                                status: Active
                                statusCode: 98
                                scheduledStartDate: '2018-02-10T09:30Z'
                                scheduledEndDate: '2018-02-10T09:30Z'
                                actualStartDate: '2018-02-10T09:30Z'
                                actualEndDate: '2018-02-10T09:30Z'
                                tags:
                                    - some text
                                    - some text
                                rewards:
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 49.18
                                        rewardType: some text
                                        rewardTypeId: some text
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 78.24
                                        rewardType: some text
                                        rewardTypeId: some text
                            -
                                competitionId: some text
                                row: 0
                                name: some text
                                round: 57
                                groupStage: 43
                                entrantsFromContest:
                                    - some text
                                    - some text
                                status: Deleted
                                statusCode: 65
                                scheduledStartDate: '2018-02-10T09:30Z'
                                scheduledEndDate: '2018-02-10T09:30Z'
                                actualStartDate: '2018-02-10T09:30Z'
                                actualEndDate: '2018-02-10T09:30Z'
                                tags:
                                    - some text
                                    - some text
                                rewards:
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 56.72
                                        rewardType: some text
                                        rewardTypeId: some text
                                    -
                                        rewardRank: some text
                                        name: some text
                                        rewardValue: 0.58
                                        rewardType: some text
                                        rewardTypeId: some text
                        constraints:
                            - some text
                            - some text
                        products:
                            -
                                name: some text
                                productRefId: some text
                                tags:
                                    - some text
                                    - some text
                            -
                                name: some text
                                productRefId: some text
                                tags:
                                    - some text
                                    - some text
                errors:
                    -
                        message: some text
                        code: 41
                        status: 18
                    -
                        message: some text
                        code: 25
                        status: 98
        CompetitionType:
            description: ''
            enum:
                - Leaderboard
            type: string
        ContestResponse:
            description: This is a Contest Response
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Contest'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 22
                    skip: 15
                    limit: 93
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        id: ziqniId
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        competitionId: some text
                        row: 1
                        round: 17
                        roundType: TargetBased
                        groupStage: 75
                        groupStageLabel: some text
                        entrantsFromContest:
                            - some text
                            - some text
                        maxNumberOfEntrants: 40
                        minNumberOfEntrants: 8
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        strategies:
                            strategyType: SumBest
                            rankingStrategy:
                                constraints:
                                    - some text
                                    - some text
                            scoringStrategy:
                                limitUpdatesTo: 33
                                sumBestXOf: 37
                                lastUpdateTimeStamp: 8
                                recordTimeWhenSumReaches: 51.1
                        status: Finalised
                        statusCode: 84
                        constraints:
                            - some text
                            - some text
                    -
                        id: ziqniId
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        competitionId: some text
                        row: 29
                        round: 88
                        roundType: TimeBound
                        groupStage: 15
                        groupStageLabel: some text
                        entrantsFromContest:
                            - some text
                            - some text
                        maxNumberOfEntrants: 81
                        minNumberOfEntrants: 83
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        strategies:
                            strategyType: SumBest
                            rankingStrategy:
                                constraints:
                                    - some text
                                    - some text
                            scoringStrategy:
                                limitUpdatesTo: 10
                                sumBestXOf: 3
                                lastUpdateTimeStamp: 69
                                recordTimeWhenSumReaches: 24.64
                        status: NotStarted
                        statusCode: 8
                        constraints:
                            - some text
                            - some text
                errors:
                    -
                        message: some text
                        code: 56
                        status: 84
                    -
                        message: some text
                        code: 13
                        status: 6
        AchievementFilter:
            description: ''
            type: object
            properties:
                productIds:
                    description: ''
                    type: array
                    items:
                        type: string
                tags:
                    description: ''
                    type: array
                    items:
                        type: string
                startDate:
                    $ref: '#/components/schemas/DateRange'
                    description: startDate
                endDate:
                    $ref: '#/components/schemas/DateRange'
                    description: ''
                ids:
                    description: ''
                    type: array
                    items:
                        type: string
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                statusCode:
                    $ref: '#/components/schemas/NumberRange'
                    description: Achievement status code
                    example: ' Unknown = 0; Draft = 5; Preparing = 10; Ready = 15; Starting = 20; Active = 25; Finishing = 30; Finished = 35; Template = 100; Cancelling = 110; Cancelled = 115; Deleting = 120; Deleted = 125'
                constraints:
                    description: Specify the constraints that need to be applied to the filter.
                    type: array
                    items:
                        type: string
                    example: |-
                        - hasTranslations
                        - hasRewards
                        - hasRules
                        - optinRequired
            example:
                productIds:
                    - some text
                    - some text
                tags:
                    - some text
                    - some text
                startDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                endDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                ids:
                    - some text
                    - some text
                status:
                    - some text
                    - some text
                sortBy:
                    -
                        queryField: some text
                        order: Asc
                    -
                        queryField: some text
                        order: Desc
                skip: 0
                limit: 72
                statusCode:
                    - 60
                    - 45
        Scheduling:
            required:
                - scheduleType
                - scheduleOccurrencesLimit
                - every
                - startDate
                - constraints
            type: object
            properties:
                scheduleType:
                    $ref: '#/components/schemas/ScheduleType'
                scheduleOccurrencesLimit:
                    format: int32
                    description: A value indicating how many times it will be issued
                    type: integer
                    example: '1'
                every:
                    type: array
                    items:
                        format: int32
                        description: >
                            A value for the parameter of the scheduleType that indicates the Daily, Weekly,
                            Monthly repetition exampleDaily: "Range = 1 to 7" exampleWeekly: "Range = 1 to 52"
                            exampleMonthly: "Range = 1 to 12"
                        type: integer
                startDate:
                    format: date-time
                    description: The start date and time of a schedule. ISO8601 timestamp
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                endDate:
                    format: date-time
                    description: The end date and time of a schedule. ISO8601 timestamp
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                constraints:
                    description: Additional constraints
                    type: array
                    items:
                        type: string
                    example: '- onlyAggregateOnActiveDays'
        ScheduleType:
            description: The type of schedule
            enum:
                - Once
                - Repeatedly
                - Daily
                - Weekly
                - Monthly
            type: string
        Dependancy:
            type: object
            properties:
                entityType:
                    description: A model that will have dependancies implemented
                    type: string
                    example: Members
                dependantOn:
                    $ref: '#/components/schemas/DependantOn'
            example:
                entityType: some text
                dependantOn:
                    must:
                        - some text
                        - some text
                    mustNot:
                        - some text
                        - some text
                    should:
                        - some text
                        - some text
                    shouldMatchAtLeast: 71
        DependantOn:
            type: object
            properties:
                must:
                    description: >-
                        A rule indicating that it has to be included. Players that are in the EU group with a
                        MUST rule - that means only players that have that group can participate
                    type: array
                    items:
                        type: string
                    example: '- EU - DE'
                mustNot:
                    description: >-
                        A rule indicating that it will not be included. Players that are in the EU group with
                        a MUST-NOT rule - that means that players that have that group can NOT participate
                    type: array
                    items:
                        type: string
                    example: '- CH'
                should:
                    description: >-
                        A rule indicating that some of them have to be included. Dependancy on
                        shouldMatchAtLeast parameter. Players that are in the EU and DE groups with a SHOULD
                        rule and a shouldMatchAtLeast with a value of 1 - that means that players that have 1
                        of the groups can participate
                    type: array
                    items:
                        type: string
                    example: '- FR - UK'
                shouldMatchAtLeast:
                    format: int32
                    description: Dependant on should. Triggered when 2 or more should parameters selected
                    type: integer
                    example: '1'
            example:
                must:
                    - some text
                    - some text
                mustNot:
                    - some text
                    - some text
                should:
                    - some text
                    - some text
                shouldMatchAtLeast: 10
        ProductReduced:
            description: ''
            type: object
            properties:
                name:
                    description: The name of the product
                    type: string
                    example: Hockey madness
                productRefId:
                    description: >-
                        The reference to this product in your system. The reference identifier can not be
                        changed after the product has been created
                    type: string
                    example: hockey-madness
                tags:
                    description: A list of Strings used to tag products with taxonomy terms
                    type: array
                    items:
                        type: string
            example:
                name: some text
                productRefId: some text
                tags:
                    - some text
                    - some text
        ContestReduced:
            description: ''
            type: object
            properties:
                competitionId:
                    description: A unique identifier of a Competition
                    type: string
                    example: Dc4swmQBVd51K6gPQqFx
                row:
                    format: int32
                    description: The row number for displaying the Contest in a table
                    type: integer
                    example: '2'
                name:
                    description: A name for the Contest. Can be translated
                    type: string
                    example: Fish and Chips
                round:
                    format: int32
                    description: To what round does the contest belong
                    type: integer
                    example: '2'
                groupStage:
                    format: int32
                    description: >-
                        Is used for more complex Competitions e.g. multi round competitions where round 1
                        group stage matched round 2
                    type: integer
                    example: '2'
                entrantsFromContest:
                    description: >-
                        A list of Ziqni contest identifiers to allow contests chaining. When a Progression
                        competition is active and you have a 2 round competition the first round has to
                        reference the second round then this parameter becomes mandatory instead of Optional.
                    type: array
                    items:
                        type: string
                    example: '- Dc4swmQBVd51K6gPQqFx - sc3jsrfLewVdt6KugPqFx'
                status:
                    $ref: '#/components/schemas/ContestStatus'
                statusCode:
                    description: The code of the contest
                    type: integer
                    readOnly: true
                    example: '3'
                scheduledStartDate:
                    format: date-time
                    description: >-
                        ISO8601 timestamp for when a Contest should start. All records are stored in UTC time
                        zone
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                scheduledEndDate:
                    format: date-time
                    description: >-
                        ISO8601 timestamp for when a Contest should end. All records are stored in UTC time
                        zone
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                actualStartDate:
                    format: date-time
                    description: ISO8601 timestamp for when a Contest started. All records are stored in UTC time zone
                    type: string
                    readOnly: true
                    example: '2019-09-25T15:47:00.000+0000'
                actualEndDate:
                    format: date-time
                    description: ISO8601 timestamp for when a Contest ended. All records are stored in UTC time zone
                    type: string
                    readOnly: true
                    example: '2019-09-25T15:47:00.000+0000'
                tags:
                    description: A list of id's used to tag
                    type: array
                    items:
                        type: string
                    example: '- Dc4swmQBVd51K6gPQqFx - Dc4swmQBVd51K6gPQqF2'
                rewards:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/RewardReduced'
            example:
                competitionId: some text
                row: 0
                name: some text
                round: 90
                groupStage: 77
                entrantsFromContest:
                    - some text
                    - some text
                status: NotStarted
                statusCode: 82
                scheduledStartDate: '2018-02-10T09:30Z'
                scheduledEndDate: '2018-02-10T09:30Z'
                actualStartDate: '2018-02-10T09:30Z'
                actualEndDate: '2018-02-10T09:30Z'
                tags:
                    - some text
                    - some text
                rewards:
                    -
                        rewardRank: some text
                        name: some text
                        rewardValue: 51.26
                        rewardType: some text
                        rewardTypeId: some text
                    -
                        rewardRank: some text
                        name: some text
                        rewardValue: 13.92
                        rewardType: some text
                        rewardTypeId: some text
        RewardReduced:
            description: ''
            type: object
            properties:
                rewardRank:
                    description: If used in the context of contest this will associate with the rank of the leaderboard
                    type: string
                    example: '1'
                name:
                    description: The name of a reward
                    type: string
                    example: Welcome badge
                rewardValue:
                    format: double
                    description: Numerical value of the reward that will be issued based on the reward type
                    type: number
                    example: '1'
                rewardType:
                    description: Reward Type key
                    type: string
                    example: free-spins
                rewardTypeId:
                    description: A unique id of the Reward Type
                    type: string
                    example: Dc4swmQBVd51K6gPQqFx
        MemberType:
            description: Determines a member type
            enum:
                - Individual
            type: string
        RewardResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Reward'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 59
                    skip: 93
                    limit: 53
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 44
                        achievementLiveStatus: Live
                        scheduling:
                            scheduleType: Once
                            scheduleOccurrencesLimit: 63
                            every:
                                - 2
                                - 29
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 8
                    -
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 62
                        achievementLiveStatus: Draft
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 15
                            every:
                                - 36
                                - 65
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 18
                errors:
                    -
                        message: some text
                        code: 61
                        status: 75
                    -
                        message: some text
                        code: 88
                        status: 70
        MessageResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Message'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 56
                    skip: 59
                    limit: 22
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        id: ziqniId
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 53
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 21
                            every:
                                - 5
                                - 21
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 30
                    -
                        id: ziqniId
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 56
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 81
                            every:
                                - 71
                                - 96
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 9
                errors:
                    -
                        message: some text
                        code: 39
                        status: 20
                    -
                        message: some text
                        code: 24
                        status: 48
        Strategy:
            description: ''
            type: object
            properties:
                strategyType:
                    $ref: '#/components/schemas/StrategyType'
                rankingStrategy:
                    $ref: '#/components/schemas/RankingStrategy'
                scoringStrategy:
                    $ref: '#/components/schemas/ScoringStrategy'
        StrategyType:
            description: >
                The scoring strategy type. SUMMARY: * "TotalCumulative": The basic strategy where all the
                points sum up and are shown in the Leaderboard. Depending on the Rules, all the points are
                Cumulative. * "SumBest": This strategy requires a value to indicate how many highest points
                will be calculated and shown on the leaderboard * "LimitedTo": This strategy requires a value
                to indicate how many events will be summed up and shown in the leaderboard. * "FirstTo": This
                strategy requires a value to indicate how many points have to be received to complete the
                mission.
            enum:
                - TotalCumulative
                - SumBest
                - LimitedTo
                - FirstTo
            type: string
        RankingStrategy:
            description: ''
            type: object
            properties:
                constraints:
                    description: >-
                        scoreDesc - The Ranking that can be Ascending or Descending based on timeDesc.
                        timeDesc - The Ranking that can be Ascending or Descending based on scoreDesc.
                        scoreFirst - The Ranking that can be score first or time first ignoreTime - The
                        Ranking when time is ignored ignoreScore - The Ranking when score is ignored
                    type: array
                    items:
                        type: string
                    example: |-
                        - scoreDesc 
                        - timeDesc
                        - scoreFirst
                        - ignoreTime
                        - ignoreScore
        ScoringStrategy:
            description: ''
            type: object
            properties:
                limitUpdatesTo:
                    format: int32
                    description: The scoring strategies types "SumBest" value
                    type: integer
                    example: '2'
                sumBestXOf:
                    format: int32
                    description: The scoring strategies types "LimitedTo" value
                    type: integer
                    example: '5'
                lastUpdateTimeStamp:
                    format: int64
                    description: The scoring strategies types "FirstTo" value
                    type: integer
                    example: '1000'
                recordTimeWhenSumReaches:
                    format: double
                    description: Not supported at the moment
                    type: number
                    example: '1'
        RoundType:
            description: The type of rounds in a contest
            enum:
                - TimeBound
                - TargetBased
            type: string
        EntityType:
            description: Entity the item is associated to.
            enum:
                - Member
                - Product
                - Achievement
                - Repository
                - FileObject
                - Language
                - MemberMessage
                - Reward
                - MemberAward
                - Award
                - Message
                - RewardType
                - ActionType
                - UnitOfMeasure
                - Competition
                - Contest
                - SqsConnection
                - KafkaConnection
                - RabbitMqConnection
                - Events
                - Webhook
                - Attachment
                - RuleSet
            type: string
        RewardTypeReduced:
            description: ''
            type: object
            properties:
                key:
                    description: A unique key that represents the reward type
                    type: string
                    example: free-spin-reward
        RuleExpression:
            description: >-
                A conditional expressions is an element that declares either a rule expression, condition or
                routine to be evaluated or executed
            required:
                - type
            type: object
            properties:
                type:
                    description: condition or expression or routine
                    type: string
                mustMatchAll:
                    description: All expressions in the condition must either evaluate to TRUE or FALSE if set to TRUE
                    type: boolean
                mustEvaluateTo:
                    description: All the expressions of this condition must either evaluate to TRUE or FALSE
                    type: boolean
                scope:
                    description: The scope of the operand used in the expression
                    type: string
                operand:
                    description: The order the rules have to be executed in.
                    type: string
                operator:
                    description: '[ *.* ] or [ .* ] or [ == ] or [ > ] or [ >= ] or [ <=]  or [ < ] or [ <> ]'
                    type: string
                value:
                    description: The value associated with the expression
                    type: string
                rules:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleExpression'
                then:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleRoutine'
                lineNumber:
                    format: int32
                    description: ''
                    type: integer
        RuleRoutine:
            description: ''
            type: object
            properties:
                routine:
                    description: >-
                        A routine to execute if the conditional expressions in the matching group evaluted to
                        true
                    type: string
                arguments:
                    description: The arguments of the routine.
                    type: array
                    items:
                        $ref: '#/components/schemas/RuleArgument'
                lineNumber:
                    format: int32
                    description: ''
                    type: integer
        RuleArgument:
            description: ''
            required:
                - argument
            type: object
            properties:
                argument:
                    description: ''
                    type: string
                    x-es-type: Keyword
                value:
                    description: ''
                    type: string
                    x-es-type: Keyword
                type:
                    description: ''
                    type: string
                    x-es-type: Keyword
                order:
                    format: int32
                    description: ''
                    type: integer
        Rule:
            description: ''
            type: object
            properties:
                entityId:
                    description: The id of the context object this rule refers to
                    type: string
                action:
                    description: 'The action this rule describes, like start.contest, or points.awarded'
                    type: string
                context:
                    description: 'The context of this rule like achievement, competition, or contest '
                    type: string
                rules:
                    $ref: '#/components/schemas/RuleExpression'
                    description: The conditional expressions that make up this rule
                id:
                    description: Unique system identifier of a Main Rule
                    type: string
                    readOnly: true
                    example: Dc4swmQBVd51K6gPQqFx
                entityType:
                    description: ''
                    type: string
        RuleRequest:
            description: ''
            required:
                - entityIds
            type: object
            properties:
                entityIds:
                    description: ''
                    type: array
                    items:
                        type: string
        RuleResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 59
                    skip: 93
                    limit: 53
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 44
                        achievementLiveStatus: Live
                        scheduling:
                            scheduleType: Once
                            scheduleOccurrencesLimit: 63
                            every:
                                - 2
                                - 29
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 8
                    -
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 62
                        achievementLiveStatus: Draft
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 15
                            every:
                                - 36
                                - 65
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 18
                errors:
                    -
                        message: some text
                        code: 61
                        status: 75
                    -
                        message: some text
                        code: 88
                        status: 70
        MemberRequest:
            description: ''
            required:
                - includeCustomFields
            type: object
            properties:
                includeFields:
                    description: 'ALL, or else the name of the top level fields you want to include'
                    type: array
                    items:
                        type: string
                includeCustomFields:
                    description: Only include custom fields that have these keys
                    type: array
                    items:
                        type: string
                includeMetaDataFields:
                    description: Only include metadata that have these keys
                    type: array
                    items:
                        type: string
            example:
                includeFields:
                    - some text
                    - some text
                includeCustomFields:
                    - some text
                    - some text
                includeMetaDataFields:
                    - some text
                    - some text
        MemberResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    $ref: '#/components/schemas/Member'
                    description: ''
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    time: '2021-10-03T19:13:41.171Z'
                data:
                    jsonClass: Player
                    accountId: <account-id>
                    memberType: Individual
                    name: my first name
                    memberRefId: my-first-member-ref-id
                    groups:
                        - group1
                        - group2
                    created: '2021-09-08T15:39:53.891+0000'
                    id: <member-id>
                errors:
                    -
                        message: 'No account found for space name - [test]'
                        code: 1007
                        status: 404
        MemberSession:
            description: ''
            type: object
        MemberSessionResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/MemberSession'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 56
                    skip: 59
                    limit: 22
                    time: '2018-02-10T09:30Z'
                data:
                    -
                        id: ziqniId
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 53
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 21
                            every:
                                - 5
                                - 21
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 30
                    -
                        id: ziqniId
                        icon: some text
                        jsonClass: some text
                        name: some text
                        description: some text
                        termsAndConditions: some text
                        constraints:
                            - some text
                            - some text
                        maxNumberOfIssues: 56
                        scheduling:
                            scheduleType: Weekly
                            scheduleOccurrencesLimit: 81
                            every:
                                - 71
                                - 96
                            startDate: '2018-02-10T09:30Z'
                            endDate: '2018-02-10T09:30Z'
                            constraints:
                                - some text
                                - some text
                        dependantOn:
                            entityType: some text
                            dependantOn:
                                must:
                                    - some text
                                    - some text
                                mustNot:
                                    - some text
                                    - some text
                                should:
                                    - some text
                                    - some text
                                shouldMatchAtLeast: 9
                errors:
                    -
                        message: some text
                        code: 39
                        status: 20
                    -
                        message: some text
                        code: 24
                        status: 48
        MemberSessionRequest:
            description: ''
            type: object
            properties:
                id:
                    description: ''
            example:
                memberRefId: some text
        OptionalModelFields:
            description: ''
            type: object
            properties:
                customFields:
                    type: object
                    additionalProperties: true
                tags:
                    description: A list of id's used to tag models
                    type: array
                    items:
                        type: string
                metadata:
                    type: object
                    additionalProperties:
                        type: string
            example:
                customFields:
                    k1: v1
                    k2: 1
                tags:
                    - tag1
                    - tag2
                metadata:
                    m1: v1
                    m2: 1
        EventRefType:
            description: Defines an even type attached to the message
            enum:
                - Competition
                - Contest
                - Achievement
                - User
                - MemberMessage
            type: string
        MessageType:
            description: The type of message of the member
            enum:
                - Achievement
                - Ticket
                - Reward
                - Text
                - Notification
                - InboxItem
                - NotificationInboxItem
            type: string
        MessageStatus:
            description: The status of the message
            enum:
                - New
                - Read
                - CollaborationRequest
                - Actioned
                - Claimed
                - Expired
                - Canceled
                - Deprecated
            type: string
        AwardResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Award'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 35
                    skip: 85
                    limit: 1
                    objectType: some text
                data:
                    - {}
                    - {}
                errors:
                    -
                        message: some text
                        code: 15
                        status: 69
                    -
                        message: some text
                        code: 61
                        status: 67
        FileRequest:
            description: ''
            required:
                - memberRefId
            type: object
            properties:
                memberRefId:
                    description: ''
                    type: string
        FileResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/File'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 75
                    skip: 51
                    limit: 0
                    objectType: some text
                data:
                    - {}
                    - {}
                errors:
                    -
                        message: some text
                        code: 19
                        status: 14
                    -
                        message: some text
                        code: 72
                        status: 71
        File:
            description: This is the File model
            allOf:
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
                    type: object
                    properties:
                        eventRefType:
                            $ref: '#/components/schemas/EventRefType'
                        eventRefId:
                            description: The reference ID of the event object
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        messageType:
                            $ref: '#/components/schemas/MessageType'
                        subject:
                            description: The title of the message
                            type: string
                            example: Hello and welcome
                        body:
                            description: The context of the message
                            type: string
                            example: Here is a message to welcome you on board!
                        prize:
                            description: Unique system identifier of an Award
                            type: string
                            readOnly: true
                            example: Dc4swmQBVd51K6gPQqFx
                        status:
                            $ref: '#/components/schemas/MessageStatus'
                        expiry:
                            format: date-time
                            description: The time that the message will disappear after. ISO8601 timestamp
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        memberId:
                            description: The reference ID of the event object
                            type: array
                            items:
                                type: string
                            example: '- Dc4swmQBVd51K6gPQqFx'
                        translatableFields:
                            description: Message translatable fields
                            type: array
                            items:
                                type: string
                            readOnly: true
                            example: '- subject - body'
        ModelDefault:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: Ziqni id of the model
                    type: string
                spaceName:
                    description: This is the space name which is linked to the account
                    type: string
                created:
                    format: date-time
                    description: >-
                        ISO8601 timestamp for when a Model was created. All records are stored in UTC time
                        zone
                    type: string
            example:
                id: some text
        OptinAction:
            description: ''
            enum:
                - join
                - leave
            type: string
        Member:
            description: This is the Member model
            allOf:
                -
                    type: object
                    properties:
                        name:
                            description: The name of the member that is used on leader boards and public displays
                            type: string
                            example: Player 1
                        memberRefId:
                            description: The reference to this member in your system
                            type: string
                            example: Player-1
                        memberType:
                            $ref: '#/components/schemas/MemberType'
                        teamMembers:
                            description: A social group like Guilds
                            type: array
                            items:
                                type: string
                        constraints:
                            description: Additional constraints
                            type: array
                            items:
                                type: string
                        timeZoneOffset:
                            description: To what time zone teh emmber belongs to
                            type: string
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
        UnsubscribeRequest:
            description: ''
            required:
                - sunscriptionId
            type: object
            properties:
                sunscriptionId:
                    description: ''
                    type: string
        ManageOptinRequest:
            description: ''
            required:
                - action
            type: object
            properties:
                entityId:
                    description: The system identifier for the entity
                    type: string
                entityType:
                    description: 'Achievement, Competition, or Contest '
                    type: string
                    example: rx62ooMBNpSnvvK2PMr7
                action:
                    $ref: '#/components/schemas/OptinAction'
                    description: 'join, or leave'
            example:
                memberRefId: some text
                entityId: some text
                entityType: some text
                action: some text
        LeaderboardSubscriptionRequest:
            description: ''
            required:
                - entityId
                - action
            type: object
            properties:
                leaderboardFilter:
                    $ref: '#/components/schemas/LeaderboardFilter'
                    description: Used when subscribing to a leaderboard feed
                entityId:
                    description: 'Either the competition, contest, tournament or match identifier'
                    type: string
                action:
                    description: Either subscribe or unsubscribe from the data feed
                    enum:
                        - Subscribe
                        - Unsubscribe
                    type: string
        LeaderboardFilter:
            description: ''
            required:
                - topRanksToInclude
            type: object
            properties:
                topRanksToInclude:
                    format: int32
                    description: >-
                        Include rank from zero [0] none, then one [1] to the rank specified here. The maximum
                        allowed is 50
                    maximum: 50
                    minimum: 1
                    type: integer
                ranksAboveToInclude:
                    format: int32
                    description: Include ranks above member position. The maximum allowed is 20
                    maximum: 20
                    minimum: 0
                    type: integer
                ranksBelowToInclude:
                    format: int32
                    description: Include ranks below member position. The maximum allowed is 20
                    maximum: 20
                    minimum: 0
                    type: integer
        DateRange:
            description: ''
            type: object
            properties:
                before:
                    format: date-time
                    description: ''
                    type: string
                after:
                    format: date-time
                    description: ''
                    type: string
        NumberRange:
            description: ''
            type: object
            properties:
                moreThan:
                    format: int64
                    description: ''
                    type: integer
                lessThan:
                    format: int64
                    description: ''
                    type: integer
        FieldType:
            description: The data type of custom field
            enum:
                - Text
                - TextArray
                - Number
                - NumberArray
            type: string
            example: '"String"'
            x-enum-varnames:
                - Text
                - TextArray
                - Number
                - NumberArray
        ContestFilter:
            description: Filter to trim results from list of Contets
            type: object
            properties:
                productIds:
                    description: ''
                    type: array
                    items:
                        type: string
                tags:
                    description: ''
                    type: array
                    items:
                        type: string
                startDate:
                    $ref: '#/components/schemas/DateRange'
                    description: startDate
                endDate:
                    $ref: '#/components/schemas/DateRange'
                    description: ''
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                ids:
                    description: ''
                    type: array
                    items:
                        type: string
                competitionIds:
                    description: ''
                    type: array
                    items:
                        type: string
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                statusCode:
                    $ref: '#/components/schemas/NumberRange'
                    description: Contest status code
                    example: ' Unknown = 0; Draft = 5; Preparing = 10; Ready = 15; Starting = 20; Active = 25; Finishing = 30; Finished = 35; Template = 100; Cancelling = 110; Cancelled = 115; Deleting = 120; Deleted = 125'
                constraints:
                    description: Specify the constraints that need to be applied to the filter.
                    type: array
                    items:
                        type: string
                    example: |-
                        - hasTranslations
                        - hasRewards
                        - hasRules
                        - optinRequired
            example:
                productIds:
                    - some text
                    - some text
                tags:
                    - some text
                    - some text
                startDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                endDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                sortBy:
                    queryField: some text
                    order: Asc
                competitionIds:
                    - some text
                    - some text
                skip: 55
                limit: 61
        CompetitionFilter:
            description: ''
            type: object
            properties:
                tags:
                    description: ''
                    type: array
                    items:
                        type: string
                startDate:
                    $ref: '#/components/schemas/DateRange'
                    description: startDate
                endDate:
                    $ref: '#/components/schemas/DateRange'
                    description: ''
                productIds:
                    description: ''
                    type: array
                    items:
                        type: string
                statusCode:
                    $ref: '#/components/schemas/NumberRange'
                    description: Competition status code
                    example: ' Unknown = 0; Draft = 5; Preparing = 10; Ready = 15; Starting = 20; Active = 25; Finishing = 30; Finished = 35; Template = 100; Cancelling = 110; Cancelled = 115; Deleting = 120; Deleted = 125'
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                ids:
                    description: ''
                    type: array
                    items:
                        type: string
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                constraints:
                    description: Specify the constraints that need to be applied to the filter.
                    type: array
                    items:
                        type: string
                    example: |-
                        - hasTranslations
                        - hasRewards
                        - hasRules
                        - optinRequired
            example:
                tags:
                    - some text
                    - some text
                startDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                endDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                productIds:
                    - some text
                    - some text
                status:
                    - Finished
                    - Deleted
                competitionType:
                    - Leaderboard
                    - Leaderboard
                sortBy:
                    -
                        queryField: some text
                        order: Asc
                    -
                        queryField: some text
                        order: Desc
                ids:
                    - some text
                    - some text
                skip: 81
                limit: 79
        Competition:
            description: ''
            type: object
            allOf:
                -
                    type: object
                    properties:
                        competitionType:
                            $ref: '#/components/schemas/CompetitionType'
                        numberOfRounds:
                            format: int32
                            description: Number of rounds to be played in a competition
                            type: integer
                        numberOfGroupStages:
                            description: Number of group stages
                            type: integer
                        maxNumberOfEntrants:
                            format: int32
                            description: Maximum number of partiipants allowed in a competition
                            type: integer
                            example: '9999'
                        minNumberOfEntrants:
                            format: int32
                            description: Maximum number of partiipants allowed in a competition
                            type: integer
                            example: '0'
                        name:
                            description: ''
                            type: string
                        description:
                            description: ''
                            type: string
                        termsAndConditions:
                            description: ''
                            type: string
                        entrantMemberType:
                            type: string
                        scheduledStartDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition should start. All records are stored
                                in UTC time zone
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        scheduledEndDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition should end. All records are stored in
                                UTC time zone
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        actualStartDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition started. All records are stored in
                                UTC time zone
                            type: string
                            readOnly: true
                            example: '2019-09-25T15:47:00.000+0000'
                        actualEndDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition ended. All records are stored in UTC
                                time zone
                            type: string
                            readOnly: true
                            example: '2019-09-25T15:47:00.000+0000'
                        status:
                            $ref: '#/components/schemas/CompetitionStatus'
                        statusCode:
                            description: The code of the competition
                            type: integer
                            readOnly: true
                            example: '5'
                        constraints:
                            description: Additional constraints
                            uniqueItems: true
                            type: array
                            items:
                                type: string
                            example: |-
                                - hasTranslations
                                - hasRewards
                                - isPublic
                                - optinRequiredForEntrants
                        products:
                            description: ''
                            type: array
                            items:
                                $ref: '#/components/schemas/ProductReduced'
                        memberTagsFilter:
                            $ref: '#/components/schemas/DependantOn'
                            description: ''
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
            example:
                id: ziqniId
                competitionType: Leaderboard
                numberOfRounds: 70
                numberOfGroupStages: 98
                maxNumberOfEntrants: 70
                minNumberOfEntrants: 25
                jsonClass: some text
                name: some text
                description: some text
                termsAndConditions: some text
                entrantMemberType: some text
                dependantOn:
                    entityType: some text
                    dependantOn:
                        must:
                            - some text
                            - some text
                        mustNot:
                            - some text
                            - some text
                        should:
                            - some text
                            - some text
                        shouldMatchAtLeast: 8
                scheduledStartDate: '2018-02-10T09:30Z'
                scheduledEndDate: '2018-02-10T09:30Z'
                actualStartDate: '2018-02-10T09:30Z'
                actualEndDate: '2018-02-10T09:30Z'
                status: Ready
                statusCode: 22
                contests:
                    -
                        competitionId: some text
                        row: 80
                        name: some text
                        round: 63
                        groupStage: 4
                        entrantsFromContest:
                            - some text
                            - some text
                        status: Cancelled
                        statusCode: 11
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        tags:
                            - some text
                            - some text
                        rewards:
                            -
                                rewardRank: some text
                                name: some text
                                rewardValue: 16.29
                                rewardType: some text
                                rewardTypeId: some text
                            -
                                rewardRank: some text
                                name: some text
                                rewardValue: 63.01
                                rewardType: some text
                                rewardTypeId: some text
                    -
                        competitionId: some text
                        row: 5
                        name: some text
                        round: 62
                        groupStage: 35
                        entrantsFromContest:
                            - some text
                            - some text
                        status: Finished
                        statusCode: 8
                        scheduledStartDate: '2018-02-10T09:30Z'
                        scheduledEndDate: '2018-02-10T09:30Z'
                        actualStartDate: '2018-02-10T09:30Z'
                        actualEndDate: '2018-02-10T09:30Z'
                        tags:
                            - some text
                            - some text
                        rewards:
                            -
                                rewardRank: some text
                                name: some text
                                rewardValue: 94.38
                                rewardType: some text
                                rewardTypeId: some text
                            -
                                rewardRank: some text
                                name: some text
                                rewardValue: 4.66
                                rewardType: some text
                                rewardTypeId: some text
                constraints:
                    - some text
                    - some text
                products:
                    -
                        name: some text
                        productRefId: some text
                        tags:
                            - some text
                            - some text
                    -
                        name: some text
                        productRefId: some text
                        tags:
                            - some text
                            - some text
        Contest:
            description: This is a contest model
            type: object
            allOf:
                -
                    type: object
                    properties:
                        name:
                            description: ''
                            type: string
                        description:
                            description: ''
                            type: string
                        termsAndConditions:
                            description: ''
                            type: string
                        competitionId:
                            description: A unique identifier of a Competition
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        round:
                            format: int32
                            description: To what round does the contest belong
                            type: integer
                            example: '2'
                        roundType:
                            $ref: '#/components/schemas/RoundType'
                        groupStage:
                            format: int32
                            description: >-
                                Is used for more complex Competitions e.g. multi round competitions where
                                round 1 group stage matched round 2
                            type: integer
                            example: '2'
                        groupStageLabel:
                            description: The name of the group stages
                            type: string
                            example: Semi-finals
                        maxNumberOfEntrants:
                            format: int32
                            description: Maximum number of entrants for the contest
                            type: integer
                            example: '9999'
                        minNumberOfEntrants:
                            format: int32
                            description: Minimum number of entrants for the contest
                            type: integer
                            example: '0'
                        scheduledStartDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Contest should start. All records are stored in
                                UTC time zone
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        scheduledEndDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Contest should end. All records are stored in UTC
                                time zone
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        actualStartDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition started. All records are stored in
                                UTC time zone
                            type: string
                            readOnly: true
                            example: '2019-09-25T15:47:00.000+0000'
                        actualEndDate:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when a Competition ended. All records are stored in UTC
                                time zone
                            type: string
                            readOnly: true
                            example: '2019-09-25T15:47:00.000+0000'
                        strategies:
                            $ref: '#/components/schemas/Strategy'
                        status:
                            $ref: '#/components/schemas/ContestStatus'
                        statusCode:
                            description: The code of the contest
                            type: integer
                            readOnly: true
                            example: '3'
                        memberTagsFilter:
                            $ref: '#/components/schemas/DependantOn'
                            description: ''
                        constraints:
                            description: Additional constraints
                            type: array
                            items:
                                type: string
                            example: |-
                                - hasTranslations
                                - hasRewards
                                - hasRules
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
            example:
                jsonClass: some text
                name: some text
                description: some text
                termsAndConditions: some text
                competitionId: some text
                row: 6
                round: 11
                roundType: TargetBased
                groupStage: 90
                groupStageLabel: some text
                entrantsFromContest:
                    - some text
                    - some text
                maxNumberOfEntrants: 25
                minNumberOfEntrants: 91
                scheduledStartDate: '2018-02-10T09:30Z'
                scheduledEndDate: '2018-02-10T09:30Z'
                actualStartDate: '2018-02-10T09:30Z'
                actualEndDate: '2018-02-10T09:30Z'
                strategies:
                    strategyType: SumBest
                    rankingStrategy:
                        constraints:
                            - some text
                            - some text
                    scoringStrategy:
                        limitUpdatesTo: 83
                        sumBestXOf: 0
                        lastUpdateTimeStamp: 7
                        recordTimeWhenSumReaches: 9.61
                status: Finalised
                statusCode: 46
                constraints:
                    - some text
                    - some text
        EntityFilter:
            description: ''
            type: object
            properties:
                entityType:
                    description: 'Achievement, Contest or Competition'
                    type: string
                entityIds:
                    description: ''
                    type: array
                    items:
                        type: string
        AchievementRequest:
            description: ''
            type: object
            properties:
                achievementFilter:
                    $ref: '#/components/schemas/AchievementFilter'
                    description: ''
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
            example:
                achievementFilter:
                    productIds:
                        - some text
                        - some text
                    tags:
                        - some text
                        - some text
                    startDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    endDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    ids:
                        - some text
                        - some text
                    status:
                        - some text
                        - some text
                    sortBy:
                        -
                            queryField: some text
                            order: Asc
                        -
                            queryField: some text
                            order: Asc
                    skip: 3
                    limit: 58
                    statusCode:
                        moreThan: 12
                        lessThan: 54
                    constraints:
                        - some text
                        - some text
                languageKey: some text
        AwardRequest:
            description: ''
            type: object
            properties:
                awardFilter:
                    $ref: '#/components/schemas/AwardFilter'
                    description: ''
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
            example:
                memberRefId: some text
                awardFilter:
                    productIds:
                        - some text
                        - some text
                    tags:
                        - some text
                        - some text
                    startDate:
                        gt: some text
                        lt: some text
                        constraints:
                            - some text
                            - some text
                    endDate:
                        gt: some text
                        lt: some text
                        constraints:
                            - some text
                            - some text
                    ids:
                        - some text
                        - some text
                    status:
                        - some text
                        - some text
                    sortBy:
                        -
                            queryField: some text
                            order: Desc
                        -
                            queryField: some text
                            order: Desc
                    skip: 24
                    limit: 67
                    statusCode:
                        - 11
                        - 9
        ClaimAwardRequest:
            description: ''
            required:
                - awardId
            type: object
            properties:
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                awardIds:
                    description: ''
                    type: array
                    items:
                        type: string
        CompetitionRequest:
            description: ''
            type: object
            properties:
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                competitionFilter:
                    $ref: '#/components/schemas/CompetitionFilter'
                    description: ''
            example:
                languageKey: some text
                competitionFilter:
                    tags:
                        - some text
                        - some text
                    startDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    endDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    productIds:
                        - some text
                        - some text
                    statusCode:
                        moreThan: 89
                        lessThan: 49
                    status:
                        - Active
                        - Active
                    sortBy:
                        -
                            queryField: some text
                            order: Asc
                        -
                            queryField: some text
                            order: Asc
                    ids:
                        - some text
                        - some text
                    skip: 94
                    limit: 89
                    constraints:
                        - some text
                        - some text
        ContestRequest:
            description: This is a request to get Contest
            type: object
            properties:
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                contestFilter:
                    $ref: '#/components/schemas/ContestFilter'
                    description: ''
            example:
                languageKey: some text
                contestFilter:
                    productIds:
                        - some text
                        - some text
                    tags:
                        - some text
                        - some text
                    startDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    endDate:
                        before: '2018-02-10T09:30Z'
                        after: '2018-02-10T09:30Z'
                    sortBy:
                        -
                            queryField: some text
                            order: Desc
                        -
                            queryField: some text
                            order: Desc
                    ids:
                        - some text
                        - some text
                    competitionIds:
                        - some text
                        - some text
                    status:
                        - some text
                        - some text
                    skip: 94
                    limit: 27
                    statusCode:
                        moreThan: 73
                        lessThan: 46
                    constraints:
                        - some text
                        - some text
        MessageRequest:
            description: ''
            type: object
            properties:
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                messageFilter:
                    $ref: '#/components/schemas/MessageFilter'
                    description: ''
            example:
                memberRefId: some text
        RewardRequest:
            description: ''
            required:
                - entityIds
            type: object
            properties:
                entityIds:
                    description: ''
                    type: array
                    items:
                        type: string
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
        EntityRequest:
            description: ''
            type: object
            properties:
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                entityFilter:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityFilter'
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
            example:
                languageKey: some text
                entityFilter:
                    -
                        entityType: some text
                        entityIds:
                            - some text
                            - some text
                    -
                        entityType: some text
                        entityIds:
                            - some text
                            - some text
                sortBy:
                    -
                        queryField: some text
                        order: Asc
                    -
                        queryField: some text
                        order: Desc
                skip: 29
                limit: 3
        Product:
            description: ''
            type: object
        Transformer:
            description: ''
            type: object
        Connection:
            description: ''
            type: object
        EntityChanged:
            description: ''
            required: []
            type: object
            properties:
                entityId:
                    description: ''
                    type: string
                entityType:
                    description: ''
                    type: string
                changedAt:
                    format: date-time
                    description: ''
                    type: string
                typeOffChange:
                    format: int32
                    description: ''
                    type: integer
                changedBy:
                    description: ''
                    type: string
                displayName:
                    description: ''
                    type: string
                accountId:
                    description: ''
                    type: string
                sequenceNumber:
                    format: int64
                    description: ''
                    type: integer
                entityRefId:
                    description: ''
                    type: string
                entityParentId:
                    description: ''
                    type: string
                metadata:
                    type: object
                    additionalProperties: true
        EntityStateChanged:
            description: ''
            required:
                - state
            type: object
            properties:
                entityId:
                    description: ''
                    type: string
                entityType:
                    description: ''
                    type: string
                changedAt:
                    format: date-time
                    description: ''
                    type: string
                changedBy:
                    description: ''
                    type: string
                typeOffChange:
                    format: int32
                    description: ''
                    type: integer
                displayName:
                    description: ''
                    type: string
                accountId:
                    description: ''
                    type: string
                sequenceNumber:
                    format: int64
                    description: ''
                    type: integer
                entityRefId:
                    description: ''
                    type: string
                entityParentId:
                    description: ''
                    type: string
                metadata:
                    type: object
                previousState:
                    format: int32
                    description: ''
                    type: integer
                currentState:
                    format: int32
                    description: ''
                    type: integer
        MetaInfo:
            required:
                - objectType
                - resultCount
                - errorCount
            type: object
            properties:
                objectType:
                    type: string
                totalRecords:
                    description: The count of all results
                    type: integer
                    example: '10'
                resultCount:
                    description: The count of successful results
                    type: integer
                    example: '10'
                errorCount:
                    description: The count of errors
                    type: integer
                    example: '1'
            example:
                objectType: some text
                totalRecords: 26
                resultCount: 3
                errorCount: 2
        MetaBasic:
            allOf:
                -
                    $ref: '#/components/schemas/MetaInfo'
        Reward:
            description: ''
            type: object
            properties:
                entityType:
                    $ref: '#/components/schemas/EntityType'
                entityId:
                    description: A unique identifier of an achievement or contest. Dependant on entityType
                    type: string
                    example: Dc4swmQBVd51K6gPQqFx
                name:
                    description: The name of a reward
                    type: string
                    example: Welcome badge
                description:
                    description: The description of a Reward
                    type: string
                    example: A badge to welcome a new player
                rewardRank:
                    description: If used in the context of contest this will associate with the rank of the leaderboard
                    type: string
                    example: '1,2 3 ...10'
                rewardValue:
                    format: double
                    description: Numerical value of the reward that will be issued based on the reward type
                    type: number
                    example: '1'
                rewardType:
                    $ref: '#/components/schemas/RewardTypeReduced'
                icon:
                    description: An Icon id that has been pre uploaded to the system to display for reward
                    type: string
                    example: Dc4swmQBVd51K6gPQqFx
                issueLimit:
                    format: int32
                    description: how many of thsese rewards are
                    type: integer
                    example: '2'
                delay:
                    format: int32
                    description: Delay of issuing a reward in minutes
                    type: integer
                    example: '2'
                pointInTime:
                    format: date-time
                    description: >-
                        ISO8601 timestamp for when a Reward is available until a specific point in time. All
                        records are stored in UTC time zone
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                period:
                    format: int32
                    description: Reward available for a period of time from issuing in minutes
                    type: integer
                    example: '2'
                id:
                    description: Unique system identifier of a Main Rule
                    type: string
                    readOnly: true
                    example: Dc4swmQBVd51K6gPQqFx
                constraints:
                    description: Additional constraints
                    type: array
                    items:
                        type: string
                    example: '- notifyMember - isMemberAcknowledgmentRequired'
            example:
                entityType: FileObject
                entityId: some text
                name: some text
                description: some text
                rewardRank: some text
                rewardValue: 7.85
                rewardType:
                    key: some text
                icon: some text
                issueLimit: 60
                delay: 19
                pointInTime: '2018-02-10T09:30Z'
                period: 32
                constraints:
                    - some text
                    - some text
        Message:
            description: ''
            type: object
            allOf:
                -
                    required:
                        - id
                    type: object
                    properties:
                        eventRefType:
                            $ref: '#/components/schemas/EventRefType'
                        eventRefId:
                            description: The reference ID of the event object
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        messageType:
                            $ref: '#/components/schemas/MessageType'
                        subject:
                            description: The title of the message
                            type: string
                            example: Hello and welcome
                        body:
                            description: The context of the message
                            type: string
                            example: Here is a message to welcome you on board!
                        status:
                            $ref: '#/components/schemas/MessageStatus'
                        expiry:
                            format: date-time
                            description: The time that the message will disappear after. ISO8601 timestamp
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        memberIds:
                            description: The reference ID of the event object
                            type: array
                            items:
                                type: string
                            example: '- Dc4swmQBVd51K6gPQqFx'
                        memberTags:
                            description: ''
                            type: array
                            items:
                                type: string
                        id:
                            description: ''
                            type: string
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
        OptInResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/OptinStatus'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
        ProxyMessage:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    type: object
            example:
                meta:
                    time: '2021-10-03T19:13:41.171Z'
                data:
                    jsonClass: Competition
                    accountId: <account-id>
                    memberType: Individual
                    name: my first name
                    memberRefId: my-first-member-ref-id
                    groups:
                        - group1
                        - group2
                    created: '2021-09-08T15:39:53.891+0000'
                    id: <member-id>
                errors:
                    -
                        message: 'No account found for space name - [test]'
                        code: 1007
                        status: 404
        CallbackEntry:
            description: ''
            required:
                - name
                - constraints
            type: object
            properties:
                name:
                    description: ''
                    type: string
                constraints:
                    description: ''
                    type: array
                    items:
                        type: string
        CallbacksResponse:
            description: ''
            required:
                - callback
            type: object
            properties:
                callback:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/CallbackEntry'
        CompetitionStatus:
            description: The status of competition
            enum:
                - Unknown
                - Deleting
                - Deleted
                - Draft
                - Template
                - Preparing
                - Ready
                - Starting
                - Active
                - Finishing
                - Finished
                - Cancelling
                - Cancelled
                - Finalising
                - Finalised
            type: string
            readOnly: true
        OptInStatesRequest:
            description: ''
            required:
                - optinStatesFilter
            type: object
            properties:
                optinStatesFilter:
                    $ref: '#/components/schemas/OptinStatesFilter'
                    description: ''
        OptinStatesFilter:
            description: ''
            required: []
            type: object
            properties:
                entityTypes:
                    description: >-
                        Optionally provide entity types to filer by. Valid options are Achievement,
                        Competition, or Contest
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityType'
                ids:
                    description: >-
                        Optionally provide a list of identifiers for either Achievements, Competitions, or
                        Contest
                    type: array
                    items:
                        type: string
                statusCodes:
                    $ref: '#/components/schemas/RangeQuery'
                    description: Optionally provide a range of status codes to return
                skip:
                    format: int32
                    description: 'The number of records to skip. Zero [0] is the defualt value'
                    type: integer
                limit:
                    format: int32
                    description: Limit t6he results. The default is 20 if left empty
                    type: integer
        Heartbeat:
            description: ''
            type: object
        ContestStatus:
            description: The status of contest
            enum:
                - Unknown
                - Deleting
                - Deleted
                - Draft
                - Template
                - Preparing
                - Ready
                - Starting
                - Active
                - Finishing
                - Finished
                - Cancelling
                - Cancelled
                - Finalising
                - Finalised
            type: string
            readOnly: true
        LeaderboardEntry:
            required:
                - name
                - rank
                - points
                - memberId
                - memberRefId
                - members
            type: object
            properties:
                rank:
                    description: The rank of the player
                    type: integer
                    example: '1'
                score:
                    format: double
                    description: >-
                        The multiplier to apply to source values received for this product action helper
                        events
                    type: number
                    example: '100'
                bestScores:
                    description: >-
                        The multiplier to apply to source values received for this product action helper
                        events
                    type: array
                    items:
                        format: double
                        type: number
                    example: '100'
                members:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/LeaderboardMember'
        Leaderboard:
            required:
                - memberId
                - memberRefId
                - name
                - points
                - rank
                - constraints
                - timestamp
            properties:
                leaderboardEntries:
                    type: array
                    items:
                        $ref: '#/components/schemas/LeaderboardEntry'
                constraints:
                    description: Additional constraints
                    type: array
                    items:
                        type: string
                    example: '- goalReached'
                sequence:
                    description: how many changes were made to the leaderboard
                    type: integer
                    example: '1'
                id:
                    description: >-
                        A unique system generated identifier of the competition or contest this leaderboard
                        relates to
                    type: string
                    example: sc1samQmVr61KgaPQq7x
                created:
                    format: date-time
                    description: >-
                        ISO8601 timestamp for when a Model was created. All records are stored in UTC time
                        zone
                    type: string
                    example: '2019-09-25T15:47:00.000+0000'
                accountId:
                    description: This is the space name which is linked to the account
                    type: string
                    example: Your_account_id
        LeaderboardResponse:
            description: ''
            required:
                - data
                - meta
                - errors
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
                data:
                    $ref: '#/components/schemas/Leaderboard'
                    description: ''
        MessageFilter:
            description: ''
            type: object
            properties:
                tags:
                    description: ''
                    type: array
                    items:
                        type: string
                ids:
                    description: ''
                    type: array
                    items:
                        type: string
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                messageType:
                    $ref: '#/components/schemas/MessageType'
                    description: ''
                    example: |4-
                            - Achievement
                            - Ticket
                            - Reward
                            - Text
                            - Notification
                            - InboxItem
                            - NotificationInboxItem
            example:
                productIds:
                    - some text
                    - some text
                tags:
                    - some text
                    - some text
                startDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                endDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                ids:
                    - some text
                    - some text
                status:
                    - some text
                    - some text
                sortBy:
                    -
                        queryField: some text
                        order: Asc
                    -
                        queryField: some text
                        order: Desc
                skip: 0
                limit: 72
                statusCode:
                    - 60
                    - 45
        Award:
            description: ''
            type: object
            allOf:
                -
                    type: object
                    properties:
                        memberId:
                            description: A unique identifier of a Member
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        rewardId:
                            description: A unique identifier of a Reward
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        rewardType:
                            $ref: '#/components/schemas/RewardTypeReduced'
                            description: The type of reward issued
                        rewardRank:
                            description: >-
                                If used in the context of contest this will associate with the rank of the
                                leaderboard
                            type: string
                            example: '1'
                        rewardValue:
                            format: double
                            description: Numerical value of the reward that will be issued based on the reward type
                            type: number
                            example: '1'
                        delay:
                            format: int32
                            description: Delay of issuing a reward in minutes
                            type: integer
                            example: '2'
                        entityType:
                            $ref: '#/components/schemas/EntityType'
                            description: 'Competition, Contest, or Achievement'
                        entityId:
                            description: >-
                                The Id of the contest or achievement related to this Award. Dependant on
                                entityType
                            type: string
                            example: Dc4swmQBVd51K6gPQqFx
                        pointInTime:
                            format: date-time
                            description: >-
                                ISO8601 timestamp for when an Award is available until a specific point in
                                time. All records are stored in UTC time zone. * There can only be one time
                                definition used for claim period either "pointInTime" or "period"
                            type: string
                            example: '2019-09-25T15:47:00.000+0000'
                        period:
                            format: int32
                            description: >-
                                Claimable duration in minutes, this value will set the controls until when the
                                award is claimable. * There can only be one time definition used for claim
                                period either "pointInTime" or "period"
                            type: integer
                            example: '2'
                        tags:
                            description: A list of Strings of groups that the reward belongs to.
                            type: array
                            items:
                                type: string
                        metadata:
                            description: The metadata associated with this award
                            type: object
                            additionalProperties:
                                type: string
                        statusCode:
                            description: The code of the award
                            type: integer
                            readOnly: true
                            example: |-
                                0=Unknown 
                                10=Preparing
                                15=NotClaimed
                                35=Claimed
                                115=Expired
                        constraints:
                            description: 'Additional constraints, if the value is present it means the'
                            type: array
                            items:
                                type: string
                            example: |-
                                - memberAcknowledgmentRequired
                                - claimed
                        claimed:
                            description: ' Award is claimed.'
                            type: boolean
                            example: '2019-09-25T15:47:00.000+0000'
                        status:
                            $ref: '#/components/schemas/AwardStatus'
                            description: ''
                            example: |-
                                0=Unknown 
                                10=Preparing
                                15=NotClaimed
                                35=Claimed
                                115=Expired
                        name:
                            description: name from reward
                            type: string
                        description:
                            description: ''
                            type: string
                        memberRefId:
                            description: ''
                            type: string
                -
                    $ref: '#/components/schemas/ModelDefault'
        AwardStatus:
            description: The status of award
            enum:
                - Unknown
                - Preparing
                - NotClaimed
                - Claimed
                - Expired
            type: string
            readOnly: true
        AwardFilter:
            description: ''
            type: object
            properties:
                productIds:
                    description: ''
                    type: array
                    items:
                        type: string
                tags:
                    description: ''
                    type: array
                    items:
                        type: string
                ids:
                    description: ''
                    type: array
                    items:
                        type: string
                statusCode:
                    $ref: '#/components/schemas/NumberRange'
                    description: Award status code
                    example: |-
                        0=Unknown 
                        10=Preparing
                        15=NotClaimed
                        35=Claimed
                        115=Expired
                sortBy:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/QuerySortBy'
                skip:
                    format: int32
                    description: ''
                    type: integer
                limit:
                    format: int32
                    description: ''
                    type: integer
                constraints:
                    description: ''
                    type: array
                    items:
                        type: string
                entityIds:
                    description: 'Achievement, Contest or Competition'
                    type: array
                    items:
                        type: string
            example:
                productIds:
                    - some text
                    - some text
                tags:
                    - some text
                    - some text
                startDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                endDate:
                    gt: some text
                    lt: some text
                    constraints:
                        - some text
                        - some text
                ids:
                    - some text
                    - some text
                status:
                    - some text
                    - some text
                sortBy:
                    -
                        queryField: some text
                        order: Asc
                    -
                        queryField: some text
                        order: Desc
                skip: 0
                limit: 72
                statusCode:
                    - 60
                    - 45
        LeaderboardMember:
            required:
                - name
                - rank
                - points
                - memberId
                - memberRefId
            type: object
            properties:
                name:
                    description: The name of the player
                    type: string
                    example: Player 1
                memberId:
                    description: Unique system identifier of a Member
                    type: string
                    example: Dc4swmQBVd51K6gPQqFx
                memberRefId:
                    description: The reference to this member in your system
                    type: string
                    example: Player-1
                rankChangeFrom:
                    format: int32
                    description: 'Previous rank held, null if no changes are recorded'
                    type: integer
                rankChangeType:
                    format: int32
                    description: '[-1] for rank-down, like 5 to 8. [0] for no change, [1] for rank-up like 9 to 3'
                    type: integer
                params:
                    description: The user defined values used in the rules builder
                    type: object
                    additionalProperties:
                        type: number
                goalReached:
                    description: Has the player met the minimum requirements to qualify for a ranked position
                    type: boolean
        OptinStatus:
            description: ''
            required:
                - entityType
                - statusCode
                - status
                - entityType
                - entityId
                - statusCode
                - status
            type: object
            properties:
                entityType:
                    description: ''
                    type: string
                entityId:
                    description: ''
                    type: string
                statusCode:
                    description: >-
                        Processing = 0, NotEntered = 5, Entering = 10, Entrant = 15, Preparing = 20, Running =
                        25, Completing = 30, Completed = 35
                    type: integer
                status:
                    description: |-
                        Processing = 0, NotEntered = 5, Entering = 10, Entrant = 15,\
                                    \ Preparing = 20, Running = 25, Completing = 30, Completed = 35
                    type: string
                percentageComplete:
                    description: 'What percentage has been completed so far, this is a number between 0 and 100'
                    type: number
        EntityGraphResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    $ref: '#/components/schemas/EntityGraphResult'
                    description: ''
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
        EntityGraphNode:
            description: |-
                Mission is a specialised view of connected achievements.
                The first achievement is the container, every dependant achievement is a chained dependency
            required:
                - entries
                - entityId
                - optInStatus
            type: object
            properties:
                name:
                    description: ''
                    type: string
                optInStatus:
                    $ref: '#/components/schemas/OptinStatus'
                    description: ''
                constraints:
                    description: 'isCompleted, etc'
                    type: array
                    items:
                        type: string
                entityType:
                    description: ''
                    type: string
                entityId:
                    description: ''
                    type: string
                entityStatusCode:
                    description: ''
                    type: integer
                entityStatus:
                    description: ''
                    type: string
                includes:
                    description: ''
                    type: object
                    additionalProperties:
                        type: object
        EntityGraphTraversal:
            description: The status of award
            enum:
                - DEPTH_FIRST
                - BREADTH_FIRST
            type: string
            readOnly: true
        EntityGraphResult:
            description: ''
            required:
                - nodes
                - links
            type: object
            properties:
                nodes:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityGraphNode'
                graphs:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityGraph'
        EntityGraphRequest:
            description: ''
            required:
                - ids
                - entityType
            type: object
            properties:
                ids:
                    description: The identifier of the node to create a connected graph for
                    type: array
                    items:
                        type: string
                constraints:
                    description: Specify the constraints that need to be applied to the filter.
                    type: array
                    items:
                        type: string
                traversal:
                    $ref: '#/components/schemas/EntityGraphTraversal'
                    description: >-
                        Depth first [DFT] or breadth first [BFT] traversal. is a traversal technique in which
                        all the nodes of the same level are explored first, and then we move to the next
                        level. DFS is also a traversal technique in which traversal is started from the root
                        node and explore the nodes as far as possible until we reach the node that has no
                        unvisited adjacent nodes.
                languageKey:
                    description: >-
                        The language codes can be found in the settings/transalations section of the back
                        office
                    type: string
                includes:
                    description: >-
                        What objects to include from the entity in this response. For achievement the
                        following can be included; description, memberTagsFilter, scheduling, and
                        termsAndConditions
                    type: array
                    items:
                        type: string
                entityType:
                    $ref: '#/components/schemas/EntityType'
                    description: ''
        EntityGraphEdgeType:
            description: The type of link
            enum:
                - ROOT
                - MUST
                - SHOULD
                - MUST_NOT
                - UNKNOWN
                - BROKEN
            type: string
            readOnly: true
        EntityGraphEdge:
            description: ''
            required:
                - ordering
            type: object
            properties:
                ordering:
                    description: ''
                    type: integer
                constraints:
                    description: ''
                    type: array
                    items:
                        type: string
                tailEntityId:
                    description: 'X the tail of the edge '
                    type: string
                headEntityId:
                    description: Y the head of the edge.
                    type: string
                graphEdgeType:
                    $ref: '#/components/schemas/EntityGraphEdgeType'
                    description: ''
        EntityGraph:
            description: ''
            required:
                - links
            type: object
            properties:
                edges:
                    description: Pairs of nodes that specify a line joining these two nodes are said to form an edge
                    type: array
                    items:
                        $ref: '#/components/schemas/EntityGraphEdge'
                nodesInCompletedState:
                    format: int32
                    description: Nodes in this graph that are in state greater than 35
                    type: integer
        FileObjectResponse:
            description: '        '
            required: []
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/ResponseMeta'
                    description: ''
                data:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/FileObject'
                errors:
                    description: ''
                    type: array
                    items:
                        $ref: '#/components/schemas/Error'
            example:
                meta:
                    totalRecordsFound: 75
                    skip: 51
                    limit: 0
                    objectType: some text
                data:
                    - {}
                    - {}
                errors:
                    -
                        message: some text
                        code: 19
                        status: 14
                    -
                        message: some text
                        code: 72
                        status: 71
        FileObject:
            allOf:
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
                -
                    required:
                        - repositoryId
                        - name
                        - mimeType
                        - path
                        - parentFolderPath
                    type: object
                    properties:
                        repositoryId:
                            description: The repository identifier this file belongs too
                            type: string
                            example: sample
                        name:
                            description: Name of the original file uploaded
                            type: string
                            example: First-upload-file-sample.png
                        mimeType:
                            description: >-
                                Mime type of the file. Valid mime types - text/csv or
                                application/vmd.ms-excelor or application/x-directory for directories
                            type: string
                            example: application/vnd.png
                        path:
                            description: The name of the attachment within the bucket
                            type: string
                            example: /achievement-icons/images.png
                        parentFolderPath:
                            description: The folder name containing the attachment within the bucket
                            type: string
                            example: /achievement-icons
                        uri:
                            description: The uniform resource identifier where the file can be viewed/downloaded
                            type: string
                            example: 'https://resource/location/file.ext'
                        size:
                            format: int64
                            description: The size of the file
                            type: integer
                            example: '123456'
                        constraints:
                            description: 'Additional constraints, if the value is present it means the'
                            type: array
                            items:
                                type: string
        Achievement:
            description: ''
            type: object
            allOf:
                -
                    type: object
                    properties:
                        name:
                            description: ''
                            type: string
                        description:
                            description: ''
                            type: string
                        termsAndConditions:
                            description: ''
                            type: string
                        constraints:
                            description: >-
                                Additional constraints, if set means true [optinRequiredForEntrants, hasRules,
                                hasRewards]
                            type: array
                            items:
                                type: string
                            example: |-
                                - deprecated
                                - notifyMember
                                - isHidden
                                - optinRequiredForEntrants
                                - expired
                        maxNumberOfIssues:
                            format: int32
                            description: Maximum number of issued achievements
                            type: integer
                        scheduling:
                            $ref: '#/components/schemas/Scheduling'
                        status:
                            description: Achievement status
                            type: string
                        statusCode:
                            format: int32
                            description: ''
                            type: integer
                        memberTagsFilter:
                            $ref: '#/components/schemas/DependantOn'
                            description: ''
                        achievementDependencies:
                            $ref: '#/components/schemas/DependantOn'
                        productTagsFilter:
                            $ref: '#/components/schemas/DependantOn'
                            description: ''
                -
                    $ref: '#/components/schemas/ModelDefault'
                -
                    $ref: '#/components/schemas/OptionalModelFields'
            example:
                id: ziqniId
                name: some text
                description: some text
                termsAndConditions: some text
                constraints:
                    - some text
                    - some text
                maxNumberOfIssues: 37
                scheduling:
                    scheduleType: Weekly
                    scheduleOccurrencesLimit: 4
                    every:
                        - 73
                        - 79
                    startDate: '2018-02-10T09:30Z'
                    endDate: '2018-02-10T09:30Z'
                    constraints:
                        - some text
                        - some text
                dependantOn:
                    entityType: some text
                    dependantOn:
                        must:
                            - some text
                            - some text
                        mustNot:
                            - some text
                            - some text
                        should:
                            - some text
                            - some text
                        shouldMatchAtLeast: 75
                status: some text
                statusCode: 80
    responses:
        AchievementResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AchievementResponse'
            description: ''
        CompetitionResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CompetitionResponse'
            description: ''
        ContestResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ContestResponse'
                    examples:
                        Example:
                            value:
                                meta:
                                    totalRecordsFound: 22
                                    skip: 15
                                    limit: 93
                                    time: '2018-02-10T09:30Z'
                                data:
                                    -
                                        id: ziqniId
                                        jsonClass: some text
                                        name: some text
                                        description: some text
                                        termsAndConditions: some text
                                        competitionId: some text
                                        row: 1
                                        round: 17
                                        roundType: TargetBased
                                        groupStage: 75
                                        groupStageLabel: some text
                                        entrantsFromContest:
                                            - some text
                                            - some text
                                        maxNumberOfEntrants: 40
                                        minNumberOfEntrants: 8
                                        scheduledStartDate: '2018-02-10T09:30Z'
                                        scheduledEndDate: '2018-02-10T09:30Z'
                                        actualStartDate: '2018-02-10T09:30Z'
                                        actualEndDate: '2018-02-10T09:30Z'
                                        strategies:
                                            strategyType: SumBest
                                            rankingStrategy:
                                                constraints:
                                                    - some text
                                                    - some text
                                            scoringStrategy:
                                                limitUpdatesTo: 33
                                                sumBestXOf: 37
                                                lastUpdateTimeStamp: 8
                                                recordTimeWhenSumReaches: 51.1
                                        status: Finalised
                                        statusCode: 84
                                        constraints:
                                            - some text
                                            - some text
                                    -
                                        id: ziqniId
                                        jsonClass: some text
                                        name: some text
                                        description: some text
                                        termsAndConditions: some text
                                        competitionId: some text
                                        row: 29
                                        round: 88
                                        roundType: TimeBound
                                        groupStage: 15
                                        groupStageLabel: some text
                                        entrantsFromContest:
                                            - some text
                                            - some text
                                        maxNumberOfEntrants: 81
                                        minNumberOfEntrants: 83
                                        scheduledStartDate: '2018-02-10T09:30Z'
                                        scheduledEndDate: '2018-02-10T09:30Z'
                                        actualStartDate: '2018-02-10T09:30Z'
                                        actualEndDate: '2018-02-10T09:30Z'
                                        strategies:
                                            strategyType: SumBest
                                            rankingStrategy:
                                                constraints:
                                                    - some text
                                                    - some text
                                            scoringStrategy:
                                                limitUpdatesTo: 10
                                                sumBestXOf: 3
                                                lastUpdateTimeStamp: 69
                                                recordTimeWhenSumReaches: 24.64
                                        status: NotStarted
                                        statusCode: 8
                                        constraints:
                                            - some text
                                            - some text
                                errors:
                                    -
                                        message: some text
                                        code: 56
                                        status: 84
                                    -
                                        message: some text
                                        code: 13
                                        status: 6
            description: ''
        RewardResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RewardResponse'
            description: ''
        MessageResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MessageResponse'
            description: ''
        RuleResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RuleResponse'
            description: ''
        MemberResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MemberResponse'
            description: ''
        AwardResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AwardResponse'
            description: ''
        FileResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FileObjectResponse'
            description: ''
        LeaderboardResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LeaderboardResponse'
            description: ''
        OptInResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OptInResponse'
            description: ''
        CallbackResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CallbacksResponse'
            description: ''
        CallbacksResponseBody:
            description: ''
        LeaderboardsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LeaderboardResponse'
            description: ''
        EntityGraphResponseBody:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/EntityGraphResponse'
            description: ''
    securitySchemes:
        OAuth2:
            flows:
                authorizationCode:
                    authorizationUrl: 'https://iam.ziqni.io/oauth/authorize'
                    tokenUrl: 'https://iam.ziqni.io/oauth/token'
                    scopes:
                        ViewContests: Grants read access
                        ViewCompetitions: Grants read access
                        ViewAchievements: Grants read access
                        ViewRewards: Grants read access
                        ViewMessages: Grants read access
                        ViewAwards: Grants read access
                        ViewRules: Grants read access
                        ViewMembers: Grants read access
            type: oauth2
tags:
    -
        name: competitions
        description: Perform POST operations on Competitions
    -
        name: achievements
        description: Perform POST operations on Achievements
    -
        name: contests
        description: Perform POST operations on Contests
    -
        name: messages
        description: Perform POST operations on Messages
    -
        name: rewards
        description: Perform POST operations on Rewards
    -
        name: rules
        description: Perform POST operations on Rules
    -
        name: proxy
        description: Perform POST operations on Proxy
    -
        name: members
        description: Perform POST operations on Members
    -
        name: awards
        description: Perform POST operations on Awards
    -
        name: files
        description: Perform POST operations on Files
