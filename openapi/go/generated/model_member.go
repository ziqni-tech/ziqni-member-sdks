/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Member This is the Member model
type Member struct {
	// The name of the member that is used on leader boards and public displays
	Name *string `json:"name,omitempty"`
	// The reference to this member in your system
	MemberRefId *string `json:"memberRefId,omitempty"`
	MemberType *MemberType `json:"memberType,omitempty"`
	// A social group like Guilds
	TeamMembers []string `json:"teamMembers,omitempty"`
	// Additional constraints
	Constraints []string `json:"constraints,omitempty"`
	// To what time zone teh emmber belongs to
	TimeZoneOffset *string `json:"timeZoneOffset,omitempty"`
	// Ziqni id of the model
	Id string `json:"id"`
	// This is the space name which is linked to the account
	SpaceName *string `json:"spaceName,omitempty"`
	// ISO8601 timestamp for when a Model was created. All records are stored in UTC time zone
	Created *time.Time `json:"created,omitempty"`
	CustomFields map[string]interface{} `json:"customFields,omitempty"`
	// A list of id's used to tag models
	Tags []string `json:"tags,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewMember instantiates a new Member object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMember(id string) *Member {
	this := Member{}
	this.Id = id
	return &this
}

// NewMemberWithDefaults instantiates a new Member object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberWithDefaults() *Member {
	this := Member{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Member) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Member) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Member) SetName(v string) {
	o.Name = &v
}

// GetMemberRefId returns the MemberRefId field value if set, zero value otherwise.
func (o *Member) GetMemberRefId() string {
	if o == nil || o.MemberRefId == nil {
		var ret string
		return ret
	}
	return *o.MemberRefId
}

// GetMemberRefIdOk returns a tuple with the MemberRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMemberRefIdOk() (*string, bool) {
	if o == nil || o.MemberRefId == nil {
		return nil, false
	}
	return o.MemberRefId, true
}

// HasMemberRefId returns a boolean if a field has been set.
func (o *Member) HasMemberRefId() bool {
	if o != nil && o.MemberRefId != nil {
		return true
	}

	return false
}

// SetMemberRefId gets a reference to the given string and assigns it to the MemberRefId field.
func (o *Member) SetMemberRefId(v string) {
	o.MemberRefId = &v
}

// GetMemberType returns the MemberType field value if set, zero value otherwise.
func (o *Member) GetMemberType() MemberType {
	if o == nil || o.MemberType == nil {
		var ret MemberType
		return ret
	}
	return *o.MemberType
}

// GetMemberTypeOk returns a tuple with the MemberType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMemberTypeOk() (*MemberType, bool) {
	if o == nil || o.MemberType == nil {
		return nil, false
	}
	return o.MemberType, true
}

// HasMemberType returns a boolean if a field has been set.
func (o *Member) HasMemberType() bool {
	if o != nil && o.MemberType != nil {
		return true
	}

	return false
}

// SetMemberType gets a reference to the given MemberType and assigns it to the MemberType field.
func (o *Member) SetMemberType(v MemberType) {
	o.MemberType = &v
}

// GetTeamMembers returns the TeamMembers field value if set, zero value otherwise.
func (o *Member) GetTeamMembers() []string {
	if o == nil || o.TeamMembers == nil {
		var ret []string
		return ret
	}
	return o.TeamMembers
}

// GetTeamMembersOk returns a tuple with the TeamMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTeamMembersOk() ([]string, bool) {
	if o == nil || o.TeamMembers == nil {
		return nil, false
	}
	return o.TeamMembers, true
}

// HasTeamMembers returns a boolean if a field has been set.
func (o *Member) HasTeamMembers() bool {
	if o != nil && o.TeamMembers != nil {
		return true
	}

	return false
}

// SetTeamMembers gets a reference to the given []string and assigns it to the TeamMembers field.
func (o *Member) SetTeamMembers(v []string) {
	o.TeamMembers = v
}

// GetConstraints returns the Constraints field value if set, zero value otherwise.
func (o *Member) GetConstraints() []string {
	if o == nil || o.Constraints == nil {
		var ret []string
		return ret
	}
	return o.Constraints
}

// GetConstraintsOk returns a tuple with the Constraints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetConstraintsOk() ([]string, bool) {
	if o == nil || o.Constraints == nil {
		return nil, false
	}
	return o.Constraints, true
}

// HasConstraints returns a boolean if a field has been set.
func (o *Member) HasConstraints() bool {
	if o != nil && o.Constraints != nil {
		return true
	}

	return false
}

// SetConstraints gets a reference to the given []string and assigns it to the Constraints field.
func (o *Member) SetConstraints(v []string) {
	o.Constraints = v
}

// GetTimeZoneOffset returns the TimeZoneOffset field value if set, zero value otherwise.
func (o *Member) GetTimeZoneOffset() string {
	if o == nil || o.TimeZoneOffset == nil {
		var ret string
		return ret
	}
	return *o.TimeZoneOffset
}

// GetTimeZoneOffsetOk returns a tuple with the TimeZoneOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTimeZoneOffsetOk() (*string, bool) {
	if o == nil || o.TimeZoneOffset == nil {
		return nil, false
	}
	return o.TimeZoneOffset, true
}

// HasTimeZoneOffset returns a boolean if a field has been set.
func (o *Member) HasTimeZoneOffset() bool {
	if o != nil && o.TimeZoneOffset != nil {
		return true
	}

	return false
}

// SetTimeZoneOffset gets a reference to the given string and assigns it to the TimeZoneOffset field.
func (o *Member) SetTimeZoneOffset(v string) {
	o.TimeZoneOffset = &v
}

// GetId returns the Id field value
func (o *Member) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Member) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Member) SetId(v string) {
	o.Id = v
}

// GetSpaceName returns the SpaceName field value if set, zero value otherwise.
func (o *Member) GetSpaceName() string {
	if o == nil || o.SpaceName == nil {
		var ret string
		return ret
	}
	return *o.SpaceName
}

// GetSpaceNameOk returns a tuple with the SpaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetSpaceNameOk() (*string, bool) {
	if o == nil || o.SpaceName == nil {
		return nil, false
	}
	return o.SpaceName, true
}

// HasSpaceName returns a boolean if a field has been set.
func (o *Member) HasSpaceName() bool {
	if o != nil && o.SpaceName != nil {
		return true
	}

	return false
}

// SetSpaceName gets a reference to the given string and assigns it to the SpaceName field.
func (o *Member) SetSpaceName(v string) {
	o.SpaceName = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *Member) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *Member) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *Member) SetCreated(v time.Time) {
	o.Created = &v
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *Member) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *Member) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *Member) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Member) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Member) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Member) SetTags(v []string) {
	o.Tags = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *Member) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Member) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *Member) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *Member) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o Member) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MemberRefId != nil {
		toSerialize["memberRefId"] = o.MemberRefId
	}
	if o.MemberType != nil {
		toSerialize["memberType"] = o.MemberType
	}
	if o.TeamMembers != nil {
		toSerialize["teamMembers"] = o.TeamMembers
	}
	if o.Constraints != nil {
		toSerialize["constraints"] = o.Constraints
	}
	if o.TimeZoneOffset != nil {
		toSerialize["timeZoneOffset"] = o.TimeZoneOffset
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.SpaceName != nil {
		toSerialize["spaceName"] = o.SpaceName
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.CustomFields != nil {
		toSerialize["customFields"] = o.CustomFields
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableMember struct {
	value *Member
	isSet bool
}

func (v NullableMember) Get() *Member {
	return v.value
}

func (v *NullableMember) Set(val *Member) {
	v.value = val
	v.isSet = true
}

func (v NullableMember) IsSet() bool {
	return v.isSet
}

func (v *NullableMember) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMember(val *Member) *NullableMember {
	return &NullableMember{value: val, isSet: true}
}

func (v NullableMember) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMember) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


