/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OptionalModelFields 
type OptionalModelFields struct {
	CustomFields map[string]interface{} `json:"customFields,omitempty"`
	// A list of id's used to tag models
	Tags []string `json:"tags,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
}

// NewOptionalModelFields instantiates a new OptionalModelFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionalModelFields() *OptionalModelFields {
	this := OptionalModelFields{}
	return &this
}

// NewOptionalModelFieldsWithDefaults instantiates a new OptionalModelFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionalModelFieldsWithDefaults() *OptionalModelFields {
	this := OptionalModelFields{}
	return &this
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *OptionalModelFields) GetCustomFields() map[string]interface{} {
	if o == nil || o.CustomFields == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionalModelFields) GetCustomFieldsOk() (map[string]interface{}, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *OptionalModelFields) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given map[string]interface{} and assigns it to the CustomFields field.
func (o *OptionalModelFields) SetCustomFields(v map[string]interface{}) {
	o.CustomFields = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OptionalModelFields) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionalModelFields) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OptionalModelFields) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *OptionalModelFields) SetTags(v []string) {
	o.Tags = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OptionalModelFields) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionalModelFields) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OptionalModelFields) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *OptionalModelFields) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

func (o OptionalModelFields) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomFields != nil {
		toSerialize["customFields"] = o.CustomFields
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableOptionalModelFields struct {
	value *OptionalModelFields
	isSet bool
}

func (v NullableOptionalModelFields) Get() *OptionalModelFields {
	return v.value
}

func (v *NullableOptionalModelFields) Set(val *OptionalModelFields) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionalModelFields) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionalModelFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionalModelFields(val *OptionalModelFields) *NullableOptionalModelFields {
	return &NullableOptionalModelFields{value: val, isSet: true}
}

func (v NullableOptionalModelFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionalModelFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


