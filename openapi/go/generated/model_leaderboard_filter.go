/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LeaderboardFilter 
type LeaderboardFilter struct {
	// Include rank from one [1] to the rank specified here. The maximum allowed is 50
	TopRanksToInclude int32 `json:"topRanksToInclude"`
	// Include ranks above member position. The maximum allowed is 20
	RanksAboveToInclude *int32 `json:"ranksAboveToInclude,omitempty"`
	// Include ranks below member position. The maximum allowed is 20
	RanksBelowToInclude *int32 `json:"ranksBelowToInclude,omitempty"`
}

// NewLeaderboardFilter instantiates a new LeaderboardFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLeaderboardFilter(topRanksToInclude int32) *LeaderboardFilter {
	this := LeaderboardFilter{}
	this.TopRanksToInclude = topRanksToInclude
	return &this
}

// NewLeaderboardFilterWithDefaults instantiates a new LeaderboardFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLeaderboardFilterWithDefaults() *LeaderboardFilter {
	this := LeaderboardFilter{}
	return &this
}

// GetTopRanksToInclude returns the TopRanksToInclude field value
func (o *LeaderboardFilter) GetTopRanksToInclude() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TopRanksToInclude
}

// GetTopRanksToIncludeOk returns a tuple with the TopRanksToInclude field value
// and a boolean to check if the value has been set.
func (o *LeaderboardFilter) GetTopRanksToIncludeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TopRanksToInclude, true
}

// SetTopRanksToInclude sets field value
func (o *LeaderboardFilter) SetTopRanksToInclude(v int32) {
	o.TopRanksToInclude = v
}

// GetRanksAboveToInclude returns the RanksAboveToInclude field value if set, zero value otherwise.
func (o *LeaderboardFilter) GetRanksAboveToInclude() int32 {
	if o == nil || o.RanksAboveToInclude == nil {
		var ret int32
		return ret
	}
	return *o.RanksAboveToInclude
}

// GetRanksAboveToIncludeOk returns a tuple with the RanksAboveToInclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardFilter) GetRanksAboveToIncludeOk() (*int32, bool) {
	if o == nil || o.RanksAboveToInclude == nil {
		return nil, false
	}
	return o.RanksAboveToInclude, true
}

// HasRanksAboveToInclude returns a boolean if a field has been set.
func (o *LeaderboardFilter) HasRanksAboveToInclude() bool {
	if o != nil && o.RanksAboveToInclude != nil {
		return true
	}

	return false
}

// SetRanksAboveToInclude gets a reference to the given int32 and assigns it to the RanksAboveToInclude field.
func (o *LeaderboardFilter) SetRanksAboveToInclude(v int32) {
	o.RanksAboveToInclude = &v
}

// GetRanksBelowToInclude returns the RanksBelowToInclude field value if set, zero value otherwise.
func (o *LeaderboardFilter) GetRanksBelowToInclude() int32 {
	if o == nil || o.RanksBelowToInclude == nil {
		var ret int32
		return ret
	}
	return *o.RanksBelowToInclude
}

// GetRanksBelowToIncludeOk returns a tuple with the RanksBelowToInclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LeaderboardFilter) GetRanksBelowToIncludeOk() (*int32, bool) {
	if o == nil || o.RanksBelowToInclude == nil {
		return nil, false
	}
	return o.RanksBelowToInclude, true
}

// HasRanksBelowToInclude returns a boolean if a field has been set.
func (o *LeaderboardFilter) HasRanksBelowToInclude() bool {
	if o != nil && o.RanksBelowToInclude != nil {
		return true
	}

	return false
}

// SetRanksBelowToInclude gets a reference to the given int32 and assigns it to the RanksBelowToInclude field.
func (o *LeaderboardFilter) SetRanksBelowToInclude(v int32) {
	o.RanksBelowToInclude = &v
}

func (o LeaderboardFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["topRanksToInclude"] = o.TopRanksToInclude
	}
	if o.RanksAboveToInclude != nil {
		toSerialize["ranksAboveToInclude"] = o.RanksAboveToInclude
	}
	if o.RanksBelowToInclude != nil {
		toSerialize["ranksBelowToInclude"] = o.RanksBelowToInclude
	}
	return json.Marshal(toSerialize)
}

type NullableLeaderboardFilter struct {
	value *LeaderboardFilter
	isSet bool
}

func (v NullableLeaderboardFilter) Get() *LeaderboardFilter {
	return v.value
}

func (v *NullableLeaderboardFilter) Set(val *LeaderboardFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableLeaderboardFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableLeaderboardFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLeaderboardFilter(val *LeaderboardFilter) *NullableLeaderboardFilter {
	return &NullableLeaderboardFilter{value: val, isSet: true}
}

func (v NullableLeaderboardFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLeaderboardFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


