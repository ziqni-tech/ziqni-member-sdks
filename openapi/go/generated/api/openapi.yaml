openapi: 3.0.2
info:
  description: "The ZIQNI Member-API is the primary resource used to build services\
    \ and widgets for your members [customers, players, patients, etc]. The service\
    \ is Stomp websokets with SOCK.js even though the system is decribed using OpenApi\
    \ schema for convenience."
  title: ZIQNI Member API
  version: 1.0.0
servers:
- description: Live
  url: https://member-api.ziqni.com
tags:
- description: Perform POST operations on Competitions
  name: competitions
- description: Perform POST operations on Achievements
  name: achievements
- description: Perform POST operations on Contests
  name: contests
- description: Perform POST operations on Messages
  name: messages
- description: Perform POST operations on Rewards
  name: rewards
- description: Perform POST operations on Rules
  name: rules
- description: Perform POST operations on Proxy
  name: proxy
- description: Perform POST operations on Members
  name: members
- description: Perform POST operations on Awards
  name: awards
- description: Perform POST operations on Files
  name: files
paths:
  /member-info:
    description: The endpoint provides information about the member.
    post:
      description: Returns member information for the provided member reference id
      operationId: getMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
      security:
      - OAuth2:
        - ViewMembers
      summary: Get member information by member reference id
      tags:
      - members
      x-ws-only: true
    summary: Member information
  /rewards:
    description: This endpoint is used to perform reward operations.
    post:
      description: This operation support retrieval of rewards for one or many entitites.
      operationId: getRewards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RewardResponse'
          description: ""
      security:
      - OAuth2:
        - ViewRewards
      summary: Get rewards
      tags:
      - rewards
      x-ws-only: true
    summary: Reward operations
  /rules:
    description: This endpoint is used to perform rules operations.
    post:
      description: This operation support retrieval of rules for one or many entities.
      operationId: getRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleResponse'
          description: ""
      security:
      - OAuth2:
        - ViewRules
      summary: Get rules
      tags:
      - rules
      x-ws-only: true
    summary: Rules operations
  /achievements:
    description: This endpoint supports member's achievements operation.
    post:
      description: Returns a list of achievements for the provided member ref id and
        applied filters.
      operationId: getAchievements
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AchievementRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementResponse'
          description: ""
      security:
      - OAuth2:
        - ViewAchievements
      summary: Get achievements by member reference id
      tags:
      - achievements
      x-ws-only: true
    summary: Member achievements operation
  /awards:
    description: This endpoint is used to perform award operations.
    post:
      description: This operation supports retrieval of awards for one or many entities.
      operationId: getAwards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AwardRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
      security:
      - OAuth2:
        - ViewAwards
      summary: Get awards.
      tags:
      - awards
      x-ws-only: true
    summary: Award operations
  /awards-claim:
    description: This endpoint is used to perform award operations.
    post:
      description: This operation enables a member to claim awards.
      operationId: claimAwards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimAwardRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardResponse'
          description: ""
      security:
      - OAuth2:
        - ClaimAwards
      summary: Claim awards.
      tags:
      - awards
      x-ws-only: true
    summary: Award operations
  /competitions:
    description: This endpoint supports member's competitions operation.
    post:
      description: Returns a list of competitions for the provided member ref id and
        applied filters.
      operationId: getCompetitions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompetitionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionResponse'
          description: ""
      security:
      - OAuth2:
        - ViewCompetitions
      summary: Get competitions by member reference id
      tags:
      - competitions
      x-ws-only: true
    summary: Member competitions operation
  /contests:
    description: This endpoint supports member's contests operation.
    post:
      description: Returns a list of contests for the provided member ref id and applied
        filters.
      operationId: getContests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Example:
                  value:
                    meta:
                      totalRecordsFound: 22
                      skip: 15
                      limit: 93
                      time: 2018-02-10T09:30Z
                    data:
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 1
                      round: 17
                      roundType: TargetBased
                      groupStage: 75
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 40
                      minNumberOfEntrants: 8
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 33
                          sumBestXOf: 37
                          lastUpdateTimeStamp: 8
                          recordTimeWhenSumReaches: 51.1
                      status: Finalised
                      statusCode: 84
                      constraints:
                      - some text
                      - some text
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 29
                      round: 88
                      roundType: TimeBound
                      groupStage: 15
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 81
                      minNumberOfEntrants: 83
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 10
                          sumBestXOf: 3
                          lastUpdateTimeStamp: 69
                          recordTimeWhenSumReaches: 24.64
                      status: NotStarted
                      statusCode: 8
                      constraints:
                      - some text
                      - some text
                    errors:
                    - message: some text
                      code: 56
                      status: 84
                    - message: some text
                      code: 13
                      status: 6
              schema:
                $ref: '#/components/schemas/ContestResponse'
          description: ""
        "400":
          content:
            application/json:
              examples:
                Example:
                  value:
                    meta:
                      totalRecordsFound: 22
                      skip: 15
                      limit: 93
                      time: 2018-02-10T09:30Z
                    data:
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 1
                      round: 17
                      roundType: TargetBased
                      groupStage: 75
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 40
                      minNumberOfEntrants: 8
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 33
                          sumBestXOf: 37
                          lastUpdateTimeStamp: 8
                          recordTimeWhenSumReaches: 51.1
                      status: Finalised
                      statusCode: 84
                      constraints:
                      - some text
                      - some text
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 29
                      round: 88
                      roundType: TimeBound
                      groupStage: 15
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 81
                      minNumberOfEntrants: 83
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 10
                          sumBestXOf: 3
                          lastUpdateTimeStamp: 69
                          recordTimeWhenSumReaches: 24.64
                      status: NotStarted
                      statusCode: 8
                      constraints:
                      - some text
                      - some text
                    errors:
                    - message: some text
                      code: 56
                      status: 84
                    - message: some text
                      code: 13
                      status: 6
              schema:
                $ref: '#/components/schemas/ContestResponse'
          description: ""
        "500":
          content:
            application/json:
              examples:
                Example:
                  value:
                    meta:
                      totalRecordsFound: 22
                      skip: 15
                      limit: 93
                      time: 2018-02-10T09:30Z
                    data:
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 1
                      round: 17
                      roundType: TargetBased
                      groupStage: 75
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 40
                      minNumberOfEntrants: 8
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 33
                          sumBestXOf: 37
                          lastUpdateTimeStamp: 8
                          recordTimeWhenSumReaches: 51.1
                      status: Finalised
                      statusCode: 84
                      constraints:
                      - some text
                      - some text
                    - id: ziqniId
                      jsonClass: some text
                      name: some text
                      description: some text
                      termsAndConditions: some text
                      competitionId: some text
                      row: 29
                      round: 88
                      roundType: TimeBound
                      groupStage: 15
                      groupStageLabel: some text
                      entrantsFromContest:
                      - some text
                      - some text
                      maxNumberOfEntrants: 81
                      minNumberOfEntrants: 83
                      scheduledStartDate: 2018-02-10T09:30Z
                      scheduledEndDate: 2018-02-10T09:30Z
                      actualStartDate: 2018-02-10T09:30Z
                      actualEndDate: 2018-02-10T09:30Z
                      strategies:
                        strategyType: SumBest
                        rankingStrategy:
                          constraints:
                          - some text
                          - some text
                        scoringStrategy:
                          limitUpdatesTo: 10
                          sumBestXOf: 3
                          lastUpdateTimeStamp: 69
                          recordTimeWhenSumReaches: 24.64
                      status: NotStarted
                      statusCode: 8
                      constraints:
                      - some text
                      - some text
                    errors:
                    - message: some text
                      code: 56
                      status: 84
                    - message: some text
                      code: 13
                      status: 6
              schema:
                $ref: '#/components/schemas/ContestResponse'
          description: ""
      security:
      - OAuth2:
        - ViewContests
      summary: Get contests by member reference Id
      tags:
      - contests
      x-ws-only: true
    summary: Member contests operation
  /files:
    description: This endpoint is used to perform files operations.
    post:
      description: This operation supports retrieval of file objects for one or many
        entities.
      operationId: getFiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: ""
      summary: Get files.
      tags:
      - files
      x-ws-only: true
    summary: Files operations
  /manage-optin:
    description: This endpoint supports member's optin operation.
    post:
      description: Returns a list of member optin information
      operationId: manageOptin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageOptinRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
          description: ""
      security:
      - OAuth2:
        - ViewMembers
      summary: Get member optin information
      tags:
      - members
      x-ws-only: true
    summary: Member optin operation
  /leaderboard:
    post:
      callbacks:
        leaderboardUpdate:
          '{$request.body#/id}':
            post:
              operationId: leaderboardUpdate_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Message'
                description: New message
              responses:
                "202":
                  description: |
                    Your implementation should only return return this HTTP status code if it is using the http protocol and only if the data was received successfully
              x-callback-request: true
      operationId: subscribeToLeaderboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaderboardSubscriptionRequest'
      responses:
        "200":
          content:
            application/json: {}
          description: ""
  /messages:
    description: This endpoint supports member's messages operation.
    post:
      callbacks:
        newMessage:
          '{$request.body#/id}':
            post:
              operationId: newMessage_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Message'
                description: New message
              responses:
                "200":
                  description: |
                    Your implementation should only return return this HTTP status code if it is using the http protocol and only if the data was received successfully
              x-callback-request: true
      description: Returns a list of messages for the provided member ref id and applied
        filters.
      operationId: getMessages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: ""
      security:
      - OAuth2:
        - ViewMessages
      summary: Get messages by member reference id
      tags:
      - messages
      x-ws-only: true
    summary: Member messages operation
  /entity-changes:
    post:
      callbacks:
        entityChanged:
          '{$request.body#/entityType}':
            post:
              operationId: entityChanged_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/EntityChanged'
                description: subscription payload
              responses:
                "202":
                  description: |
                    Your server implementation should return this HTTP status code if the data was received successfully
                "204":
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UnsubscribeRequest'
                  description: |
                    Your server should return this HTTP status code if no longer interested in further updates
              x-callback-request: true
        entityStateChanged:
          '{$request.body#/entityType}':
            post:
              operationId: entityStateChanged_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/EntityStateChanged'
                description: subscription payload
              responses:
                "200":
                  description: |
                    Your server implementation can optionally return this HTTP status code if the data was received successfully
                "204":
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/UnsubscribeRequest'
                  description: |
                    Your server should return this HTTP status code if no longer interested in further updates
              x-callback-request: true
      description: subscribes a client to receive out-of-band data
      operationId: subscribeToEntityChanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityChangeSubscriptionRequest'
        description: subscription payload
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityChangeSubscriptionResponse'
          description: ""
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityChangeSubscriptionResponse'
          description: ""
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityChangeSubscriptionResponse'
          description: ""
      tags:
      - entity-changes
components:
  responses:
    AchievementResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AchievementResponse'
      description: ""
    CompetitionResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompetitionResponse'
      description: ""
    ContestResponseBody:
      content:
        application/json:
          examples:
            Example:
              value:
                meta:
                  totalRecordsFound: 22
                  skip: 15
                  limit: 93
                  time: 2018-02-10T09:30Z
                data:
                - id: ziqniId
                  jsonClass: some text
                  name: some text
                  description: some text
                  termsAndConditions: some text
                  competitionId: some text
                  row: 1
                  round: 17
                  roundType: TargetBased
                  groupStage: 75
                  groupStageLabel: some text
                  entrantsFromContest:
                  - some text
                  - some text
                  maxNumberOfEntrants: 40
                  minNumberOfEntrants: 8
                  scheduledStartDate: 2018-02-10T09:30Z
                  scheduledEndDate: 2018-02-10T09:30Z
                  actualStartDate: 2018-02-10T09:30Z
                  actualEndDate: 2018-02-10T09:30Z
                  strategies:
                    strategyType: SumBest
                    rankingStrategy:
                      constraints:
                      - some text
                      - some text
                    scoringStrategy:
                      limitUpdatesTo: 33
                      sumBestXOf: 37
                      lastUpdateTimeStamp: 8
                      recordTimeWhenSumReaches: 51.1
                  status: Finalised
                  statusCode: 84
                  constraints:
                  - some text
                  - some text
                - id: ziqniId
                  jsonClass: some text
                  name: some text
                  description: some text
                  termsAndConditions: some text
                  competitionId: some text
                  row: 29
                  round: 88
                  roundType: TimeBound
                  groupStage: 15
                  groupStageLabel: some text
                  entrantsFromContest:
                  - some text
                  - some text
                  maxNumberOfEntrants: 81
                  minNumberOfEntrants: 83
                  scheduledStartDate: 2018-02-10T09:30Z
                  scheduledEndDate: 2018-02-10T09:30Z
                  actualStartDate: 2018-02-10T09:30Z
                  actualEndDate: 2018-02-10T09:30Z
                  strategies:
                    strategyType: SumBest
                    rankingStrategy:
                      constraints:
                      - some text
                      - some text
                    scoringStrategy:
                      limitUpdatesTo: 10
                      sumBestXOf: 3
                      lastUpdateTimeStamp: 69
                      recordTimeWhenSumReaches: 24.64
                  status: NotStarted
                  statusCode: 8
                  constraints:
                  - some text
                  - some text
                errors:
                - message: some text
                  code: 56
                  status: 84
                - message: some text
                  code: 13
                  status: 6
          schema:
            $ref: '#/components/schemas/ContestResponse'
      description: ""
    RewardResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RewardResponse'
      description: ""
    MessageResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageResponse'
      description: ""
    RuleResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RuleResponse'
      description: ""
    MemberResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemberResponse'
      description: ""
    AwardResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AwardResponse'
      description: ""
    FileResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FileResponse'
      description: ""
    EntityChangeSubscriptionResponseBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntityChangeSubscriptionResponse'
      description: ""
    LeaderboardResponseBody:
      content:
        application/json: {}
      description: ""
  schemas:
    ResponseMeta:
      description: 'Response metadata   '
      example:
        totalRecordsFound: 70
        skip: 45
        limit: 8
        objectType: some text
      properties:
        totalRecordsFound:
          description: ""
          format: int32
          type: integer
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
        objectType:
          description: ""
          type: string
      required:
      - limit
      - skip
      - totalRecordsFound
      type: object
    Error:
      description: ""
      example:
        message: "No account found for space name - [test]"
        code: 1007
        status: 404
      properties:
        message:
          description: ""
          type: string
        code:
          description: ""
          format: int32
          type: integer
        status:
          description: ""
          format: int32
          type: integer
      required:
      - status
      type: object
    QueryMultipleFields:
      description: ""
      example:
        queryFields:
        - name
        - description
        queryValue: ziqni
      properties:
        queryFields:
          description: Multiple fields to be included in search for the given value.
          items:
            type: string
          type: array
        queryValue:
          description: The value to search for across given fields.
          type: string
      type: object
    RangeQuery:
      description: ""
      example:
        gt: "1.0"
        lt: "3"
        constraints:
        - includeBounds
      properties:
        gt:
          description: Greater than value
          type: string
        lt:
          description: Less than value
          type: string
        constraints:
          description: Additional constraints
          items:
            type: string
          type: array
      type: object
    QuerySortBy:
      example:
        queryField: competitionId
        order: null
      properties:
        queryField:
          description: The key of the parameter that is being searched
          example: competitionId
          type: string
        order:
          $ref: '#/components/schemas/SortOrder'
      required:
      - order
      - queryField
      type: object
    SortOrder:
      description: Specify the sort order.
      enum:
      - Asc
      - Desc
      type: string
    AchievementResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 74
          skip: 7
          limit: 2
          time: 2018-02-10T09:30Z
        data:
        - id: ziqniId
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 20
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 54
            every:
            - 96
            - 80
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 4
          status: some text
          statusCode: 23
        - id: ziqniId
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 24
          scheduling:
            scheduleType: Once
            scheduleOccurrencesLimit: 76
            every:
            - 11
            - 38
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 65
          status: some text
          statusCode: 39
        errors:
        - message: some text
          code: 1
          status: 92
        - message: some text
          code: 0
          status: 28
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Achievement'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    CompetitionResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 11
          skip: 77
          limit: 58
          time: 2018-02-10T09:30Z
        data:
        - id: ziqniId
          competitionType: Leaderboard
          numberOfRounds: 95
          numberOfGroupStages: 46
          maxNumberOfEntrants: 7
          minNumberOfEntrants: 74
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          entrantMemberType: some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 6
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          status: Starting
          statusCode: 91
          contests:
          - competitionId: some text
            row: 56
            name: some text
            round: 89
            groupStage: 54
            entrantsFromContest:
            - some text
            - some text
            status: Deleted
            statusCode: 72
            scheduledStartDate: 2018-02-10T09:30Z
            scheduledEndDate: 2018-02-10T09:30Z
            actualStartDate: 2018-02-10T09:30Z
            actualEndDate: 2018-02-10T09:30Z
            tags:
            - some text
            - some text
            rewards:
            - rewardRank: some text
              name: some text
              rewardValue: 60.22
              rewardType: some text
              rewardTypeId: some text
            - rewardRank: some text
              name: some text
              rewardValue: 84.71
              rewardType: some text
              rewardTypeId: some text
          - competitionId: some text
            row: 84
            name: some text
            round: 73
            groupStage: 83
            entrantsFromContest:
            - some text
            - some text
            status: Finalised
            statusCode: 33
            scheduledStartDate: 2018-02-10T09:30Z
            scheduledEndDate: 2018-02-10T09:30Z
            actualStartDate: 2018-02-10T09:30Z
            actualEndDate: 2018-02-10T09:30Z
            tags:
            - some text
            - some text
            rewards:
            - rewardRank: some text
              name: some text
              rewardValue: 24.39
              rewardType: some text
              rewardTypeId: some text
            - rewardRank: some text
              name: some text
              rewardValue: 61.73
              rewardType: some text
              rewardTypeId: some text
          constraints:
          - some text
          - some text
          products:
          - name: some text
            productRefId: some text
            tags:
            - some text
            - some text
          - name: some text
            productRefId: some text
            tags:
            - some text
            - some text
        - id: ziqniId
          competitionType: Leaderboard
          numberOfRounds: 96
          numberOfGroupStages: 57
          maxNumberOfEntrants: 68
          minNumberOfEntrants: 89
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          entrantMemberType: some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 63
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          status: Starting
          statusCode: 91
          contests:
          - competitionId: some text
            row: 65
            name: some text
            round: 54
            groupStage: 15
            entrantsFromContest:
            - some text
            - some text
            status: Active
            statusCode: 98
            scheduledStartDate: 2018-02-10T09:30Z
            scheduledEndDate: 2018-02-10T09:30Z
            actualStartDate: 2018-02-10T09:30Z
            actualEndDate: 2018-02-10T09:30Z
            tags:
            - some text
            - some text
            rewards:
            - rewardRank: some text
              name: some text
              rewardValue: 49.18
              rewardType: some text
              rewardTypeId: some text
            - rewardRank: some text
              name: some text
              rewardValue: 78.24
              rewardType: some text
              rewardTypeId: some text
          - competitionId: some text
            row: 0
            name: some text
            round: 57
            groupStage: 43
            entrantsFromContest:
            - some text
            - some text
            status: Deleted
            statusCode: 65
            scheduledStartDate: 2018-02-10T09:30Z
            scheduledEndDate: 2018-02-10T09:30Z
            actualStartDate: 2018-02-10T09:30Z
            actualEndDate: 2018-02-10T09:30Z
            tags:
            - some text
            - some text
            rewards:
            - rewardRank: some text
              name: some text
              rewardValue: 56.72
              rewardType: some text
              rewardTypeId: some text
            - rewardRank: some text
              name: some text
              rewardValue: 0.58
              rewardType: some text
              rewardTypeId: some text
          constraints:
          - some text
          - some text
          products:
          - name: some text
            productRefId: some text
            tags:
            - some text
            - some text
          - name: some text
            productRefId: some text
            tags:
            - some text
            - some text
        errors:
        - message: some text
          code: 41
          status: 18
        - message: some text
          code: 25
          status: 98
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Competition'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    CompetitionStatus:
      description: ""
      enum:
      - Unknown
      - Deleting
      - Deleted
      - Draft
      - Template
      - Preparing
      - Ready
      - Starting
      - Active
      - Finishing
      - Finished
      - Cancelling
      - Cancelled
      type: string
    CompetitionType:
      description: ""
      enum:
      - Leaderboard
      type: string
    ContestResponse:
      description: This is a Contest Response
      example:
        meta:
          totalRecordsFound: 22
          skip: 15
          limit: 93
          time: 2018-02-10T09:30Z
        data:
        - id: ziqniId
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          competitionId: some text
          row: 1
          round: 17
          roundType: TargetBased
          groupStage: 75
          groupStageLabel: some text
          entrantsFromContest:
          - some text
          - some text
          maxNumberOfEntrants: 40
          minNumberOfEntrants: 8
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          strategies:
            strategyType: SumBest
            rankingStrategy:
              constraints:
              - some text
              - some text
            scoringStrategy:
              limitUpdatesTo: 33
              sumBestXOf: 37
              lastUpdateTimeStamp: 8
              recordTimeWhenSumReaches: 51.1
          status: Finalised
          statusCode: 84
          constraints:
          - some text
          - some text
        - id: ziqniId
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          competitionId: some text
          row: 29
          round: 88
          roundType: TimeBound
          groupStage: 15
          groupStageLabel: some text
          entrantsFromContest:
          - some text
          - some text
          maxNumberOfEntrants: 81
          minNumberOfEntrants: 83
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          strategies:
            strategyType: SumBest
            rankingStrategy:
              constraints:
              - some text
              - some text
            scoringStrategy:
              limitUpdatesTo: 10
              sumBestXOf: 3
              lastUpdateTimeStamp: 69
              recordTimeWhenSumReaches: 24.64
          status: NotStarted
          statusCode: 8
          constraints:
          - some text
          - some text
        errors:
        - message: some text
          code: 56
          status: 84
        - message: some text
          code: 13
          status: 6
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Contest'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    AchievementFilter:
      description: ""
      example:
        productIds:
        - some text
        - some text
        tags:
        - some text
        - some text
        startDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        endDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        ids:
        - some text
        - some text
        status:
        - some text
        - some text
        sortBy:
        - queryField: some text
          order: Asc
        - queryField: some text
          order: Desc
        skip: 0
        limit: 72
        statusCode:
        - 60
        - 45
      properties:
        productIds:
          description: ""
          items:
            type: string
          type: array
        tags:
          description: ""
          items:
            type: string
          type: array
        startDate:
          $ref: '#/components/schemas/DateRange'
        endDate:
          $ref: '#/components/schemas/DateRange'
        ids:
          description: ""
          items:
            type: string
          type: array
        status:
          description: Achievement status
          items:
            type: string
          type: array
        sortBy:
          description: ""
          items:
            $ref: '#/components/schemas/QuerySortBy'
          type: array
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
        statusCode:
          $ref: '#/components/schemas/NumberRange'
        constraints:
          description: Specify the constraints that need to be applied to the filter.
          example: |-
            - hasTranslations
            - hasRewards
            - hasRules
            - optinRequired
          items:
            type: string
          type: array
      type: object
    Scheduling:
      properties:
        scheduleType:
          $ref: '#/components/schemas/ScheduleType'
        scheduleOccurrencesLimit:
          description: A value indicating how many times it will be issued
          example: 1
          format: int32
          type: integer
        every:
          items:
            description: "A value for the parameter of the scheduleType that indicates\
              \ the Daily, Weekly, Monthly repetition exampleDaily: \"Range = 1 to\
              \ 7\" exampleWeekly: \"Range = 1 to 52\" exampleMonthly: \"Range = 1\
              \ to 12\"\n"
            format: int32
            type: integer
          type: array
        startDate:
          description: The start date and time of a schedule. ISO8601 timestamp
          format: date-time
          type: string
        endDate:
          description: The end date and time of a schedule. ISO8601 timestamp
          format: date-time
          type: string
        constraints:
          description: Additional constraints
          example: '- onlyAggregateOnActiveDays'
          items:
            type: string
          type: array
      required:
      - constraints
      - every
      - scheduleOccurrencesLimit
      - scheduleType
      - startDate
      type: object
    ScheduleType:
      description: The type of schedule
      enum:
      - Once
      - Repeatedly
      - Daily
      - Weekly
      - Monthly
      type: string
    Dependancy:
      example:
        entityType: some text
        dependantOn:
          must:
          - some text
          - some text
          mustNot:
          - some text
          - some text
          should:
          - some text
          - some text
          shouldMatchAtLeast: 71
      properties:
        entityType:
          description: A model that will have dependancies implemented
          example: Members
          type: string
        dependantOn:
          $ref: '#/components/schemas/DependantOn'
      type: object
    DependantOn:
      example:
        must:
        - some text
        - some text
        mustNot:
        - some text
        - some text
        should:
        - some text
        - some text
        shouldMatchAtLeast: 10
      properties:
        must:
          description: A rule indicating that it has to be included. Players that
            are in the EU group with a MUST rule - that means only players that have
            that group can participate
          example: '- EU - DE'
          items:
            type: string
          type: array
        mustNot:
          description: A rule indicating that it will not be included. Players that
            are in the EU group with a MUST-NOT rule - that means that players that
            have that group can NOT participate
          example: '- CH'
          items:
            type: string
          type: array
        should:
          description: A rule indicating that some of them have to be included. Dependancy
            on shouldMatchAtLeast parameter. Players that are in the EU and DE groups
            with a SHOULD rule and a shouldMatchAtLeast with a value of 1 - that means
            that players that have 1 of the groups can participate
          example: '- FR - UK'
          items:
            type: string
          type: array
        shouldMatchAtLeast:
          description: Dependant on should. Triggered when 2 or more should parameters
            selected
          example: 1
          format: int32
          type: integer
      type: object
    ProductReduced:
      description: ""
      example:
        name: some text
        productRefId: some text
        tags:
        - some text
        - some text
      properties:
        name:
          description: The name of the product
          example: Hockey madness
          type: string
        productRefId:
          description: The reference to this product in your system. The reference
            identifier can not be changed after the product has been created
          example: hockey-madness
          type: string
        tags:
          description: A list of Strings used to tag products with taxonomy terms
          items:
            type: string
          type: array
      type: object
    ContestReduced:
      description: ""
      example:
        competitionId: some text
        row: 0
        name: some text
        round: 90
        groupStage: 77
        entrantsFromContest:
        - some text
        - some text
        status: NotStarted
        statusCode: 82
        scheduledStartDate: 2018-02-10T09:30Z
        scheduledEndDate: 2018-02-10T09:30Z
        actualStartDate: 2018-02-10T09:30Z
        actualEndDate: 2018-02-10T09:30Z
        tags:
        - some text
        - some text
        rewards:
        - rewardRank: some text
          name: some text
          rewardValue: 51.26
          rewardType: some text
          rewardTypeId: some text
        - rewardRank: some text
          name: some text
          rewardValue: 13.92
          rewardType: some text
          rewardTypeId: some text
      properties:
        competitionId:
          description: A unique identifier of a Competition
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        row:
          description: The row number for displaying the Contest in a table
          example: 2
          format: int32
          type: integer
        name:
          description: A name for the Contest. Can be translated
          example: Fish and Chips
          type: string
        round:
          description: To what round does the contest belong
          example: 2
          format: int32
          type: integer
        groupStage:
          description: Is used for more complex Competitions e.g. multi round competitions
            where round 1 group stage matched round 2
          example: 2
          format: int32
          type: integer
        entrantsFromContest:
          description: A list of Ziqni contest identifiers to allow contests chaining.
            When a Progression competition is active and you have a 2 round competition
            the first round has to reference the second round then this parameter
            becomes mandatory instead of Optional.
          example: '- Dc4swmQBVd51K6gPQqFx - sc3jsrfLewVdt6KugPqFx'
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/ContestStatus'
        statusCode:
          description: The code of the contest
          example: 3
          readOnly: true
          type: integer
        scheduledStartDate:
          description: ISO8601 timestamp for when a Contest should start. All records
            are stored in UTC time zone
          format: date-time
          type: string
        scheduledEndDate:
          description: ISO8601 timestamp for when a Contest should end. All records
            are stored in UTC time zone
          format: date-time
          type: string
        actualStartDate:
          description: ISO8601 timestamp for when a Contest started. All records are
            stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        actualEndDate:
          description: ISO8601 timestamp for when a Contest ended. All records are
            stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        tags:
          description: A list of id's used to tag
          example: '- Dc4swmQBVd51K6gPQqFx - Dc4swmQBVd51K6gPQqF2'
          items:
            type: string
          type: array
        rewards:
          description: ""
          items:
            $ref: '#/components/schemas/RewardReduced'
          type: array
      type: object
    RewardReduced:
      description: ""
      properties:
        rewardRank:
          description: If used in the context of contest this will associate with
            the rank of the leaderboard
          example: "1"
          type: string
        name:
          description: The name of a reward
          example: Welcome badge
          type: string
        rewardValue:
          description: Numerical value of the reward that will be issued based on
            the reward type
          example: 1
          format: double
          type: number
        rewardType:
          description: Reward Type key
          example: free-spins
          type: string
        rewardTypeId:
          description: A unique id of the Reward Type
          example: Dc4swmQBVd51K6gPQqFx
          type: string
      type: object
    ContestStatus:
      description: The status of contest
      enum:
      - Deleted
      - NotStarted
      - Active
      - Finished
      - Finalised
      - Cancelled
      readOnly: true
      type: string
    MemberType:
      description: Determines a member type
      enum:
      - Individual
      type: string
    RewardResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 59
          skip: 93
          limit: 53
          time: 2018-02-10T09:30Z
        data:
        - icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 44
          achievementLiveStatus: Live
          scheduling:
            scheduleType: Once
            scheduleOccurrencesLimit: 63
            every:
            - 2
            - 29
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 8
        - icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 62
          achievementLiveStatus: Draft
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 15
            every:
            - 36
            - 65
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 18
        errors:
        - message: some text
          code: 61
          status: 75
        - message: some text
          code: 88
          status: 70
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Reward'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    MessageResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 56
          skip: 59
          limit: 22
          time: 2018-02-10T09:30Z
        data:
        - id: ziqniId
          icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 53
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 21
            every:
            - 5
            - 21
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 30
        - id: ziqniId
          icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 56
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 81
            every:
            - 71
            - 96
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 9
        errors:
        - message: some text
          code: 39
          status: 20
        - message: some text
          code: 24
          status: 48
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Message'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    Strategy:
      description: ""
      properties:
        strategyType:
          $ref: '#/components/schemas/StrategyType'
        rankingStrategy:
          $ref: '#/components/schemas/RankingStrategy'
        scoringStrategy:
          $ref: '#/components/schemas/ScoringStrategy'
      type: object
    StrategyType:
      description: "The scoring strategy type. SUMMARY: * \"TotalCumulative\": The\
        \ basic strategy where all the points sum up and are shown in the Leaderboard.\
        \ Depending on the Rules, all the points are Cumulative. * \"SumBest\": This\
        \ strategy requires a value to indicate how many highest points will be calculated\
        \ and shown on the leaderboard * \"LimitedTo\": This strategy requires a value\
        \ to indicate how many events will be summed up and shown in the leaderboard.\
        \ * \"FirstTo\": This strategy requires a value to indicate how many points\
        \ have to be received to complete the mission.\n"
      enum:
      - TotalCumulative
      - SumBest
      - LimitedTo
      - FirstTo
      type: string
    RankingStrategy:
      description: ""
      properties:
        constraints:
          description: scoreDesc - The Ranking that can be Ascending or Descending
            based on timeDesc. timeDesc - The Ranking that can be Ascending or Descending
            based on scoreDesc. scoreFirst - The Ranking that can be score first or
            time first ignoreTime - The Ranking when time is ignored ignoreScore -
            The Ranking when score is ignored
          example: "- scoreDesc \n- timeDesc\n- scoreFirst\n- ignoreTime\n- ignoreScore"
          items:
            type: string
          type: array
      type: object
    ScoringStrategy:
      description: ""
      properties:
        limitUpdatesTo:
          description: The scoring strategies types "SumBest" value
          example: 2
          format: int32
          type: integer
        sumBestXOf:
          description: The scoring strategies types "LimitedTo" value
          example: 5
          format: int32
          type: integer
        lastUpdateTimeStamp:
          description: The scoring strategies types "FirstTo" value
          example: 1000
          format: int64
          type: integer
        recordTimeWhenSumReaches:
          description: Not supported at the moment
          example: 1
          format: double
          type: number
      type: object
    RoundType:
      description: The type of rounds in a contest
      enum:
      - TimeBound
      - TargetBased
      type: string
    Reward:
      description: ""
      example:
        entityType: FileObject
        entityId: some text
        name: some text
        description: some text
        rewardRank: some text
        rewardValue: 7.85
        rewardType:
          key: some text
        icon: some text
        issueLimit: 60
        delay: 19
        pointInTime: 2018-02-10T09:30Z
        period: 32
        constraints:
        - some text
        - some text
      properties:
        entityType:
          $ref: '#/components/schemas/EntityType'
        entityId:
          description: A unique identifier of an achievement or contest. Dependant
            on entityType
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        name:
          description: The name of a reward
          example: Welcome badge
          type: string
        description:
          description: The description of a Reward
          example: A badge to welcome a new player
          type: string
        rewardRank:
          description: If used in the context of contest this will associate with
            the rank of the leaderboard
          example: "1,2 3 ...10"
          type: string
        rewardValue:
          description: Numerical value of the reward that will be issued based on
            the reward type
          example: 1
          format: double
          type: number
        rewardType:
          $ref: '#/components/schemas/RewardTypeReduced'
        icon:
          description: An Icon id that has been pre uploaded to the system to display
            for reward
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        issueLimit:
          description: how many of thsese rewards are
          example: 2
          format: int32
          type: integer
        delay:
          description: Delay of issuing a reward in minutes
          example: 2
          format: int32
          type: integer
        pointInTime:
          description: ISO8601 timestamp for when a Reward is available until a specific
            point in time. All records are stored in UTC time zone
          format: date-time
          type: string
        period:
          description: Reward available for a period of time from issuing in minutes
          example: 2
          format: int32
          type: integer
        constraints:
          description: Additional constraints
          example: '- notifyMember - isMemberAcknowledgmentRequired'
          items:
            type: string
          type: array
      type: object
    EntityType:
      description: Entity the item is associated to.
      enum:
      - Member
      - Product
      - Achievement
      - Repository
      - FileObject
      - Language
      - MemberMessage
      - Reward
      - MemberAward
      - Award
      - Message
      - RewardType
      - ActionType
      - UnitOfMeasure
      - Competition
      - Contest
      - SqsConnection
      - KafkaConnection
      - RabbitMqConnection
      - Events
      - Webhook
      - Attachment
      - RuleSet
      type: string
    RewardTypeReduced:
      description: ""
      properties:
        key:
          description: A unique key that represents the reward type
          example: free-spin-reward
          type: string
      type: object
    RuleExpression:
      description: "A conditional expressions is an element that declares either a\
        \ rule expression, condition or routine to be evaluated or executed"
      properties:
        type:
          description: condition or expression or routine
          type: string
        mustMatchAll:
          description: All expressions in the condition must either evaluate to TRUE
            or FALSE if set to TRUE
          type: boolean
        mustEvaluateTo:
          description: All the expressions of this condition must either evaluate
            to TRUE or FALSE
          type: boolean
        scope:
          description: The scope of the operand used in the expression
          type: string
        operand:
          description: The order the rules have to be executed in.
          type: string
        operator:
          description: "[ *.* ] or [ .* ] or [ == ] or [ > ] or [ >= ] or [ <=]  or\
            \ [ < ] or [ <> ]"
          type: string
        value:
          description: The value associated with the expression
          type: string
        rules:
          description: ""
          items:
            $ref: '#/components/schemas/RuleExpression'
          type: array
        then:
          description: ""
          items:
            $ref: '#/components/schemas/RuleRoutine'
          type: array
        lineNumber:
          description: ""
          format: int32
          type: integer
      required:
      - type
      type: object
    RuleRoutine:
      description: ""
      properties:
        routine:
          description: A routine to execute if the conditional expressions in the
            matching group evaluted to true
          type: string
        arguments:
          description: The arguments of the routine.
          items:
            $ref: '#/components/schemas/RuleArgument'
          type: array
        lineNumber:
          description: ""
          format: int32
          type: integer
      type: object
    RuleArgument:
      description: ""
      properties:
        argument:
          description: ""
          type: string
          x-es-type: Keyword
        value:
          description: ""
          type: string
          x-es-type: Keyword
        type:
          description: ""
          type: string
          x-es-type: Keyword
        order:
          description: ""
          format: int32
          type: integer
      required:
      - argument
      type: object
    Rule:
      description: ""
      properties:
        entityId:
          description: The id of the context object this rule refers to
          type: string
        action:
          description: "The action this rule describes, like start.contest, or points.awarded"
          type: string
        context:
          description: "The context of this rule like achievement, competition, or\
            \ contest "
          type: string
        rules:
          $ref: '#/components/schemas/RuleExpression'
        id:
          description: Unique system identifier of a Main Rule
          example: Dc4swmQBVd51K6gPQqFx
          readOnly: true
          type: string
        entityType:
          description: ""
          type: string
      type: object
    RuleRequest:
      description: ""
      properties:
        entityIds:
          description: ""
          items:
            type: string
          type: array
      required:
      - entityIds
      type: object
    RuleResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 59
          skip: 93
          limit: 53
          time: 2018-02-10T09:30Z
        data:
        - icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 44
          achievementLiveStatus: Live
          scheduling:
            scheduleType: Once
            scheduleOccurrencesLimit: 63
            every:
            - 2
            - 29
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 8
        - icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 62
          achievementLiveStatus: Draft
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 15
            every:
            - 36
            - 65
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 18
        errors:
        - message: some text
          code: 61
          status: 75
        - message: some text
          code: 88
          status: 70
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    Proxy:
      description: ""
      example:
        name: some text
      properties:
        name:
          description: ""
          type: string
      type: object
    ProxyRequest:
      description: ""
      properties:
        id:
          description: ""
          type: string
      type: object
    ProxyResponse:
      description: '        '
      example:
        meta:
          time: 2021-10-03T19:13:41.171Z
        data:
          jsonClass: Competition
          accountId: <account-id>
          memberType: Individual
          name: my first name
          memberRefId: my-first-member-ref-id
          groups:
          - group1
          - group2
          created: 2021-09-08T15:39:53.891+0000
          id: <member-id>
        errors:
        - message: "No account found for space name - [test]"
          code: 1007
          status: 404
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Proxy'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    MemberRequest:
      description: ""
      example:
        includeFields: ALL
      properties:
        includeFields:
          description: "ALL, or else the name of the top level fields you want to\
            \ include"
          items:
            type: string
          type: array
        includeCustomFields:
          description: Only include custom fields that have these keys
          items:
            type: string
          type: array
        includeMetaDataFields:
          description: Only include metadata that have these keys
          items:
            type: string
          type: array
      required:
      - includeCustomFields
      type: object
    MemberResponse:
      description: '        '
      example:
        meta:
          time: 2021-10-03T19:13:41.171Z
        data:
          jsonClass: Player
          accountId: <account-id>
          memberType: Individual
          name: my first name
          memberRefId: my-first-member-ref-id
          groups:
          - group1
          - group2
          created: 2021-09-08T15:39:53.891+0000
          id: <member-id>
        errors:
        - message: "No account found for space name - [test]"
          code: 1007
          status: 404
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          $ref: '#/components/schemas/Member'
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    MemberSession:
      description: ""
      type: object
    MemberSessionResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 56
          skip: 59
          limit: 22
          time: 2018-02-10T09:30Z
        data:
        - id: ziqniId
          icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 53
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 21
            every:
            - 5
            - 21
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 30
        - id: ziqniId
          icon: some text
          jsonClass: some text
          name: some text
          description: some text
          termsAndConditions: some text
          constraints:
          - some text
          - some text
          maxNumberOfIssues: 56
          scheduling:
            scheduleType: Weekly
            scheduleOccurrencesLimit: 81
            every:
            - 71
            - 96
            startDate: 2018-02-10T09:30Z
            endDate: 2018-02-10T09:30Z
            constraints:
            - some text
            - some text
          dependantOn:
            entityType: some text
            dependantOn:
              must:
              - some text
              - some text
              mustNot:
              - some text
              - some text
              should:
              - some text
              - some text
              shouldMatchAtLeast: 9
        errors:
        - message: some text
          code: 39
          status: 20
        - message: some text
          code: 24
          status: 48
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/MemberSession'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    MemberSessionRequest:
      description: ""
      example:
        memberRefId: some text
      properties:
        id:
          description: ""
      type: object
    OptionalModelFields:
      description: ""
      example:
        customFields:
          k1: v1
          k2: 1
        tags:
        - tag1
        - tag2
        metadata:
          m1: v1
          m2: 1
      properties:
        customFields:
          additionalProperties: true
          type: object
        tags:
          description: A list of id's used to tag models
          items:
            type: string
          type: array
        metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    AwardFilter:
      description: ""
      example:
        productIds:
        - some text
        - some text
        tags:
        - some text
        - some text
        startDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        endDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        ids:
        - some text
        - some text
        status:
        - some text
        - some text
        sortBy:
        - queryField: some text
          order: Asc
        - queryField: some text
          order: Desc
        skip: 0
        limit: 72
        statusCode:
        - 60
        - 45
      properties:
        productIds:
          description: ""
          items:
            type: string
          type: array
        tags:
          description: ""
          items:
            type: string
          type: array
        startDate:
          $ref: '#/components/schemas/RangeQuery'
        endDate:
          $ref: '#/components/schemas/RangeQuery'
        ids:
          description: ""
          items:
            type: string
          type: array
        status:
          description: Achievement status
          items:
            type: string
          type: array
        sortBy:
          description: ""
          items:
            $ref: '#/components/schemas/QuerySortBy'
          type: array
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
        statusCode:
          description: Achievement status code
          items:
            format: int32
            type: integer
          type: array
        constraints:
          description: ""
          items:
            type: string
          type: array
      type: object
    Achievement:
      allOf:
      - $ref: '#/components/schemas/Achievement_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: ""
      example:
        id: ziqniId
        name: some text
        description: some text
        termsAndConditions: some text
        constraints:
        - some text
        - some text
        maxNumberOfIssues: 37
        scheduling:
          scheduleType: Weekly
          scheduleOccurrencesLimit: 4
          every:
          - 73
          - 79
          startDate: 2018-02-10T09:30Z
          endDate: 2018-02-10T09:30Z
          constraints:
          - some text
          - some text
        dependantOn:
          entityType: some text
          dependantOn:
            must:
            - some text
            - some text
            mustNot:
            - some text
            - some text
            should:
            - some text
            - some text
            shouldMatchAtLeast: 75
        status: some text
        statusCode: 80
      type: object
    EventRefType:
      description: Defines an even type attached to the message
      enum:
      - Competition
      - Contest
      - Achievement
      - User
      - MemberMessage
      type: string
    MessageType:
      description: The type of message of the member
      enum:
      - Achievement
      - Ticket
      - Reward
      - Text
      - Notification
      - InboxItem
      - NotificationInboxItem
      type: string
    MessageStatus:
      description: The status of the message
      enum:
      - New
      - Read
      - CollaborationRequest
      - Actioned
      - Claimed
      - Expired
      - Canceled
      - Deprecated
      type: string
    AwardResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 35
          skip: 85
          limit: 1
          objectType: some text
        data:
        - {}
        - {}
        errors:
        - message: some text
          code: 15
          status: 69
        - message: some text
          code: 61
          status: 67
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/Award'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    FileRequest:
      description: ""
      example:
        memberRefId: memberRefId
      properties:
        memberRefId:
          description: ""
          type: string
      required:
      - memberRefId
      type: object
    FileResponse:
      description: '        '
      example:
        meta:
          totalRecordsFound: 75
          skip: 51
          limit: 0
          objectType: some text
        data:
        - {}
        - {}
        errors:
        - message: some text
          code: 19
          status: 14
        - message: some text
          code: 72
          status: 71
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/File'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    File:
      allOf:
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: This is the File model
    ModelDefault:
      description: ""
      example:
        id: some text
      properties:
        id:
          description: Ziqni id of the model
          type: string
        spaceName:
          description: This is the space name which is linked to the account
          type: string
        created:
          description: ISO8601 timestamp for when a Model was created. All records
            are stored in UTC time zone
          format: date-time
          type: string
      required:
      - id
      type: object
    Award:
      allOf:
      - $ref: '#/components/schemas/Award_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      description: ""
      type: object
    Message:
      allOf:
      - $ref: '#/components/schemas/Message_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: ""
      type: object
    OptinAction:
      description: ""
      enum:
      - opt-in
      - opt-out
      type: string
    Member:
      allOf:
      - $ref: '#/components/schemas/Member_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: This is the Member model
    EntityChanged:
      description: ""
      example:
        accountId: accountId
        sequenceNumber: 6
        metadata:
          key: ""
        entityType: entityType
        displayName: displayName
        entityParentId: entityParentId
        entityId: entityId
        changedAt: 2000-01-23T04:56:07.000+00:00
        entityRefId: entityRefId
        typeOffChange: 0
      properties:
        entityId:
          description: ""
          type: string
        entityType:
          description: ""
          type: string
        changedAt:
          description: ""
          format: date-time
          type: string
        typeOffChange:
          description: ""
          format: int32
          type: integer
        displayName:
          description: ""
          type: string
        accountId:
          description: ""
          type: string
        sequenceNumber:
          description: ""
          format: int64
          type: integer
        entityRefId:
          description: ""
          type: string
        entityParentId:
          description: ""
          type: string
        metadata:
          additionalProperties: true
          type: object
      type: object
    UnsubscribeRequest:
      description: ""
      properties:
        sunscriptionId:
          description: ""
          type: string
      required:
      - sunscriptionId
      type: object
    EntityStateChanged:
      description: ""
      example:
        accountId: accountId
        sequenceNumber: 6
        metadata:
          key: ""
        entityType: entityType
        displayName: displayName
        entityParentId: entityParentId
        entityId: entityId
        changedAt: 2000-01-23T04:56:07.000+00:00
        entityRefId: entityRefId
        currentState: 5
        typeOffChange: 0
        previousState: 1
      properties:
        entityId:
          description: ""
          type: string
        entityType:
          description: ""
          type: string
        changedAt:
          description: ""
          format: date-time
          type: string
        typeOffChange:
          description: ""
          format: int32
          type: integer
        displayName:
          description: ""
          type: string
        accountId:
          description: ""
          type: string
        sequenceNumber:
          description: ""
          format: int64
          type: integer
        entityRefId:
          description: ""
          type: string
        entityParentId:
          description: ""
          type: string
        metadata:
          additionalProperties: true
          type: object
        previousState:
          description: ""
          format: int32
          type: integer
        currentState:
          description: ""
          format: int32
          type: integer
      required:
      - state
      type: object
    ManageOptinRequest:
      description: ""
      example:
        memberRefId: some text
        entityId: some text
        entityType: some text
        action: some text
      properties:
        entityId:
          description: ""
          type: string
        entityType:
          description: ""
          type: string
        action:
          description: ""
          type: string
      type: object
    EntityChangeSubscriptionRequest:
      description: ""
      example:
        entityType: entityType
        callback: callback
        action: Subscribe
        constraints:
        - constraints
        - constraints
      properties:
        entityType:
          description: "What you are subscribing to, like Competition, Contest, Member,\
            \ Award etc."
          type: string
        constraints:
          description: Constraints of this subscription.
          items:
            type: string
          type: array
        callback:
          description: The callback operation you are subscribing too. Like entityChanged
            or entityStateChanged
          type: string
        action:
          description: Either subscribe or unsubscribe from the data feed
          enum:
          - Subscribe
          - Unsubscribe
          type: string
      required:
      - action
      - callback
      - entityType
      type: object
    EntityChangeSubscription:
      description: Subscribes a client to receive out-of-band data
      properties:
        entityType:
          description: ""
          type: string
        subscriptionId:
          description: ""
          type: string
        constraints:
          description: Constraints of this subscription like gauranteedDelivery
          items:
            type: string
          type: array
        topic:
          description: /user/queue/callbacks
          type: string
      required:
      - entityType
      - entityTypes
      - subscriptionId
      type: object
    EntityChangeSubscriptionResponse:
      description: ""
      example: 2531329f-fb09-4ef7-887e-84e648214436
      properties:
        meta:
          $ref: '#/components/schemas/ResponseMeta'
        data:
          description: ""
          items:
            $ref: '#/components/schemas/EntityChangeSubscription'
          type: array
        errors:
          description: ""
          items:
            $ref: '#/components/schemas/Error'
          type: array
      required:
      - subscriptions
      type: object
    LeaderboardSubscriptionRequest:
      description: ""
      example:
        action: Subscribe
        entityId: entityId
        leaderboardFilter:
          ranksBelowToInclude: 2
          topRanksToInclude: 4
          ranksAboveToInclude: 12
      properties:
        leaderboardFilter:
          $ref: '#/components/schemas/LeaderboardFilter'
        entityId:
          description: "Either the competition, contest, tournament or match identifier"
          type: string
        action:
          description: Either subscribe or unsubscribe from the data feed
          enum:
          - Subscribe
          type: string
      required:
      - action
      - entityId
      type: object
    LeaderboardFilter:
      description: ""
      example:
        ranksBelowToInclude: 2
        topRanksToInclude: 4
        ranksAboveToInclude: 12
      properties:
        topRanksToInclude:
          description: "Include rank from one [1] to the rank specified here. The\
            \ maximum allowed is 50"
          format: int32
          maximum: 50
          minimum: 1
          type: integer
        ranksAboveToInclude:
          description: Include ranks above member position. The maximum allowed is
            20
          format: int32
          maximum: 20
          minimum: 0
          type: integer
        ranksBelowToInclude:
          description: Include ranks below member position. The maximum allowed is
            20
          format: int32
          maximum: 20
          minimum: 0
          type: integer
      required:
      - topRanksToInclude
      type: object
    DateRange:
      description: ""
      properties:
        before:
          description: ""
          format: date-time
          type: string
        after:
          description: ""
          format: date-time
          type: string
      type: object
    NumberRange:
      description: ""
      properties:
        moreThan:
          description: ""
          format: int64
          type: integer
        lessThan:
          description: ""
          format: int64
          type: integer
      type: object
    FieldType:
      description: The data type of custom field
      enum:
      - Text
      - TextArray
      - Number
      - NumberArray
      example: '"String"'
      type: string
      x-enum-varnames:
      - Text
      - TextArray
      - Number
      - NumberArray
    ContestFilter:
      description: Filter to trim results from list of Contets
      example:
        productIds:
        - some text
        - some text
        tags:
        - some text
        - some text
        startDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        endDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        sortBy:
          queryField: some text
          order: Asc
        competitionIds:
        - some text
        - some text
        skip: 55
        limit: 61
      properties:
        productIds:
          description: ""
          items:
            type: string
          type: array
        tags:
          description: ""
          items:
            type: string
          type: array
        startDate:
          $ref: '#/components/schemas/DateRange'
        endDate:
          $ref: '#/components/schemas/DateRange'
        sortBy:
          description: ""
          items:
            $ref: '#/components/schemas/QuerySortBy'
          type: array
        ids:
          description: ""
          items:
            type: string
          type: array
        competitionIds:
          description: ""
          items:
            type: string
          type: array
        status:
          description: ""
          items:
            type: string
          type: array
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
        statusCode:
          $ref: '#/components/schemas/NumberRange'
        constraints:
          description: Specify the constraints that need to be applied to the filter.
          example: |-
            - hasTranslations
            - hasRewards
            - hasRules
            - optinRequired
          items:
            type: string
          type: array
      type: object
    CompetitionFilter:
      description: ""
      example:
        tags:
        - some text
        - some text
        startDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        endDate:
          gt: some text
          lt: some text
          constraints:
          - some text
          - some text
        productIds:
        - some text
        - some text
        status:
        - Finished
        - Deleted
        competitionType:
        - Leaderboard
        - Leaderboard
        sortBy:
        - queryField: some text
          order: Asc
        - queryField: some text
          order: Desc
        ids:
        - some text
        - some text
        skip: 81
        limit: 79
      properties:
        tags:
          description: ""
          items:
            type: string
          type: array
        startDate:
          $ref: '#/components/schemas/DateRange'
        endDate:
          $ref: '#/components/schemas/DateRange'
        productIds:
          description: ""
          items:
            type: string
          type: array
        statusCode:
          $ref: '#/components/schemas/NumberRange'
        status:
          description: ""
          items:
            $ref: '#/components/schemas/CompetitionStatus'
          type: array
        sortBy:
          description: ""
          items:
            $ref: '#/components/schemas/QuerySortBy'
          type: array
        ids:
          description: ""
          items:
            type: string
          type: array
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
        constraints:
          description: Specify the constraints that need to be applied to the filter.
          example: |-
            - hasTranslations
            - hasRewards
            - hasRules
            - optinRequired
          items:
            type: string
          type: array
      type: object
    Competition:
      allOf:
      - $ref: '#/components/schemas/Competition_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: ""
      example:
        id: ziqniId
        competitionType: Leaderboard
        numberOfRounds: 70
        numberOfGroupStages: 98
        maxNumberOfEntrants: 70
        minNumberOfEntrants: 25
        jsonClass: some text
        name: some text
        description: some text
        termsAndConditions: some text
        entrantMemberType: some text
        dependantOn:
          entityType: some text
          dependantOn:
            must:
            - some text
            - some text
            mustNot:
            - some text
            - some text
            should:
            - some text
            - some text
            shouldMatchAtLeast: 8
        scheduledStartDate: 2018-02-10T09:30Z
        scheduledEndDate: 2018-02-10T09:30Z
        actualStartDate: 2018-02-10T09:30Z
        actualEndDate: 2018-02-10T09:30Z
        status: Ready
        statusCode: 22
        contests:
        - competitionId: some text
          row: 80
          name: some text
          round: 63
          groupStage: 4
          entrantsFromContest:
          - some text
          - some text
          status: Cancelled
          statusCode: 11
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          tags:
          - some text
          - some text
          rewards:
          - rewardRank: some text
            name: some text
            rewardValue: 16.29
            rewardType: some text
            rewardTypeId: some text
          - rewardRank: some text
            name: some text
            rewardValue: 63.01
            rewardType: some text
            rewardTypeId: some text
        - competitionId: some text
          row: 5
          name: some text
          round: 62
          groupStage: 35
          entrantsFromContest:
          - some text
          - some text
          status: Finished
          statusCode: 8
          scheduledStartDate: 2018-02-10T09:30Z
          scheduledEndDate: 2018-02-10T09:30Z
          actualStartDate: 2018-02-10T09:30Z
          actualEndDate: 2018-02-10T09:30Z
          tags:
          - some text
          - some text
          rewards:
          - rewardRank: some text
            name: some text
            rewardValue: 94.38
            rewardType: some text
            rewardTypeId: some text
          - rewardRank: some text
            name: some text
            rewardValue: 4.66
            rewardType: some text
            rewardTypeId: some text
        constraints:
        - some text
        - some text
        products:
        - name: some text
          productRefId: some text
          tags:
          - some text
          - some text
        - name: some text
          productRefId: some text
          tags:
          - some text
          - some text
      type: object
    Contest:
      allOf:
      - $ref: '#/components/schemas/Contest_allOf'
      - $ref: '#/components/schemas/ModelDefault'
      - $ref: '#/components/schemas/OptionalModelFields'
      description: This is a contest model
      example:
        jsonClass: some text
        name: some text
        description: some text
        termsAndConditions: some text
        competitionId: some text
        row: 6
        round: 11
        roundType: TargetBased
        groupStage: 90
        groupStageLabel: some text
        entrantsFromContest:
        - some text
        - some text
        maxNumberOfEntrants: 25
        minNumberOfEntrants: 91
        scheduledStartDate: 2018-02-10T09:30Z
        scheduledEndDate: 2018-02-10T09:30Z
        actualStartDate: 2018-02-10T09:30Z
        actualEndDate: 2018-02-10T09:30Z
        strategies:
          strategyType: SumBest
          rankingStrategy:
            constraints:
            - some text
            - some text
          scoringStrategy:
            limitUpdatesTo: 83
            sumBestXOf: 0
            lastUpdateTimeStamp: 7
            recordTimeWhenSumReaches: 9.61
        status: Finalised
        statusCode: 46
        constraints:
        - some text
        - some text
      type: object
    EntityFilter:
      description: ""
      example:
        entityType: entityType
        entityIds:
        - entityIds
        - entityIds
      properties:
        entityType:
          description: ""
          type: string
        entityIds:
          description: ""
          items:
            type: string
          type: array
      type: object
    AchievementRequest:
      description: ""
      example:
        memberRefId: some text
        achievementFilter:
          productIds:
          - some text
          - some text
          tags:
          - some text
          - some text
          startDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          endDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          ids:
          - some text
          - some text
          status:
          - some text
          - some text
          sortBy:
          - queryField: some text
            order: Desc
          - queryField: some text
            order: Desc
          skip: 11
          limit: 75
          statusCode:
          - 54
          - 63
      properties:
        achievementFilter:
          $ref: '#/components/schemas/AchievementFilter'
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
      type: object
    AwardRequest:
      description: ""
      example:
        memberRefId: some text
        awardFilter:
          productIds:
          - some text
          - some text
          tags:
          - some text
          - some text
          startDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          endDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          ids:
          - some text
          - some text
          status:
          - some text
          - some text
          sortBy:
          - queryField: some text
            order: Desc
          - queryField: some text
            order: Desc
          skip: 24
          limit: 67
          statusCode:
          - 11
          - 9
      properties:
        awardFilter:
          $ref: '#/components/schemas/AwardFilter'
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
      type: object
    ClaimAwardRequest:
      description: ""
      example:
        awardIds:
        - awardIds
        - awardIds
        languageKey: languageKey
      properties:
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
        awardIds:
          description: ""
          items:
            type: string
          type: array
      required:
      - awardId
      type: object
    CompetitionRequest:
      description: ""
      example:
        memberRefId: some text
        competitionFilter:
          tags:
          - some text
          - some text
          startDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          endDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          productIds:
          - some text
          - some text
          status:
          - Deleting
          - Finishing
          competitionType:
          - Leaderboard
          - Leaderboard
          sortBy:
          - queryField: some text
            order: Asc
          - queryField: some text
            order: Asc
          ids:
          - some text
          - some text
          skip: 9
          limit: 26
      properties:
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
        competitionFilter:
          $ref: '#/components/schemas/CompetitionFilter'
      type: object
    ContestRequest:
      description: This is a request to get Contest
      example:
        memberRefId: some text
        achievementFilter:
          productIds:
          - some text
          - some text
          tags:
          - some text
          - some text
          startDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          endDate:
            gt: some text
            lt: some text
            constraints:
            - some text
            - some text
          sortBy:
            queryField: some text
            order: Asc
          competitionIds:
          - some text
          - some text
          skip: 61
          limit: 92
      properties:
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
        contestFilter:
          $ref: '#/components/schemas/ContestFilter'
      type: object
    MessageRequest:
      description: ""
      example:
        memberRefId: some text
      properties:
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
        id:
          description: ""
          type: string
      type: object
    RewardRequest:
      description: ""
      properties:
        entityIds:
          description: ""
          items:
            type: string
          type: array
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
      required:
      - entityIds
      type: object
    EntityRequest:
      description: ""
      example:
        entityFilter:
        - entityType: entityType
          entityIds:
          - entityIds
          - entityIds
        - entityType: entityType
          entityIds:
          - entityIds
          - entityIds
        limit: 6
        sortBy:
        - queryField: competitionId
          order: null
        - queryField: competitionId
          order: null
        skip: 0
        languageKey: languageKey
      properties:
        languageKey:
          description: The language codes can be found in the settings/transalations
            section of the back office
          type: string
        entityFilter:
          description: ""
          items:
            $ref: '#/components/schemas/EntityFilter'
          type: array
        sortBy:
          description: ""
          items:
            $ref: '#/components/schemas/QuerySortBy'
          type: array
        skip:
          description: ""
          format: int32
          type: integer
        limit:
          description: ""
          format: int32
          type: integer
      type: object
    Achievement_allOf:
      properties:
        name:
          description: ""
          type: string
        description:
          description: ""
          type: string
        termsAndConditions:
          description: ""
          type: string
        constraints:
          description: "Additional constraints, if set means true"
          example: |-
            - deprecated
            - notifyMember
            - isHidden
            - optinRequiredForEntrants
            - expired
          items:
            type: string
          type: array
        maxNumberOfIssues:
          description: Maximum number of issued achievements
          format: int32
          type: integer
        scheduling:
          $ref: '#/components/schemas/Scheduling'
        dependantOn:
          $ref: '#/components/schemas/Dependancy'
        status:
          description: Achievement status
          type: string
        statusCode:
          description: ""
          format: int32
          type: integer
        memberTagsFilter:
          $ref: '#/components/schemas/DependantOn'
      type: object
    Award_allOf:
      properties:
        memberId:
          description: A unique identifier of a Member
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        rewardId:
          description: A unique identifier of a Reward
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        rewardType:
          $ref: '#/components/schemas/RewardTypeReduced'
        rewardRank:
          description: If used in the context of contest this will associate with
            the rank of the leaderboard
          example: "1"
          type: string
        rewardValue:
          description: Numerical value of the reward that will be issued based on
            the reward type
          example: 1
          format: double
          type: number
        delay:
          description: Delay of issuing a reward in minutes
          example: 2
          format: int32
          type: integer
        entityType:
          $ref: '#/components/schemas/EntityType'
        entityId:
          description: The Id of the contest or achievement related to this Award.
            Dependant on entityType
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        pointInTime:
          description: ISO8601 timestamp for when an Award is available until a specific
            point in time. All records are stored in UTC time zone. * There can only
            be one time definition used for claim period either "pointInTime" or "period"
          format: date-time
          type: string
        period:
          description: "Claimable duration in minutes, this value will set the controls\
            \ until when the award is claimable. * There can only be one time definition\
            \ used for claim period either \"pointInTime\" or \"period\""
          example: 2
          format: int32
          type: integer
        tags:
          description: A list of Strings of groups that the reward belongs to.
          items:
            type: string
          type: array
        metadata:
          additionalProperties:
            type: string
          description: The metadata associated with this award
          type: object
        constraints:
          description: "Additional constraints, if the value is present it means the"
          example: |-
            - memberAcknowledgmentRequired
            - claimed
          items:
            type: string
          type: array
        claimedTimestamp:
          description: ISO8601 timestamp for when an Award is claimed. All records
            are stored in UTC time zone. *
          format: date-time
          type: string
      type: object
    Message_allOf:
      properties:
        eventRefType:
          $ref: '#/components/schemas/EventRefType'
        eventRefId:
          description: The reference ID of the event object
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        messageType:
          $ref: '#/components/schemas/MessageType'
        subject:
          description: The title of the message
          example: Hello and welcome
          type: string
        body:
          description: The context of the message
          example: Here is a message to welcome you on board!
          type: string
        prize:
          description: Unique system identifier of an Award
          example: Dc4swmQBVd51K6gPQqFx
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/MessageStatus'
        expiry:
          description: The time that the message will disappear after. ISO8601 timestamp
          format: date-time
          type: string
        memberId:
          description: The reference ID of the event object
          example: '- Dc4swmQBVd51K6gPQqFx'
          items:
            type: string
          type: array
        id:
          description: ""
          type: string
      required:
      - id
      type: object
    Member_allOf:
      properties:
        name:
          description: The name of the member that is used on leader boards and public
            displays
          example: Player 1
          type: string
        memberRefId:
          description: The reference to this member in your system
          example: Player-1
          type: string
        memberType:
          $ref: '#/components/schemas/MemberType'
        teamMembers:
          description: A social group like Guilds
          items:
            type: string
          type: array
        constraints:
          description: Additional constraints
          items:
            type: string
          type: array
        timeZoneOffset:
          description: To what time zone teh emmber belongs to
          type: string
      type: object
    Competition_allOf:
      properties:
        competitionType:
          $ref: '#/components/schemas/CompetitionType'
        numberOfRounds:
          description: Number of rounds to be played in a competition
          format: int32
          type: integer
        numberOfGroupStages:
          description: Number of group stages
          type: integer
        maxNumberOfEntrants:
          description: Maximum number of partiipants allowed in a competition
          example: 9999
          format: int32
          type: integer
        minNumberOfEntrants:
          description: Maximum number of partiipants allowed in a competition
          example: 0
          format: int32
          type: integer
        name:
          description: ""
          type: string
        description:
          description: ""
          type: string
        termsAndConditions:
          description: ""
          type: string
        entrantMemberType:
          type: string
        scheduledStartDate:
          description: ISO8601 timestamp for when a Competition should start. All
            records are stored in UTC time zone
          format: date-time
          type: string
        scheduledEndDate:
          description: ISO8601 timestamp for when a Competition should end. All records
            are stored in UTC time zone
          format: date-time
          type: string
        actualStartDate:
          description: ISO8601 timestamp for when a Competition started. All records
            are stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        actualEndDate:
          description: ISO8601 timestamp for when a Competition ended. All records
            are stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/CompetitionStatus'
        statusCode:
          description: The code of the competition
          example: 5
          readOnly: true
          type: integer
        constraints:
          description: Additional constraints
          example: |-
            - hasTranslations
            - hasRewards
            - isPublic
            - optinRequiredForEntrants
          items:
            type: string
          type: array
          uniqueItems: true
        products:
          description: ""
          items:
            $ref: '#/components/schemas/ProductReduced'
          type: array
        memberTagsFilter:
          $ref: '#/components/schemas/DependantOn'
      type: object
    Contest_allOf:
      properties:
        name:
          description: ""
          type: string
        description:
          description: ""
          type: string
        termsAndConditions:
          description: ""
          type: string
        competitionId:
          description: A unique identifier of a Competition
          example: Dc4swmQBVd51K6gPQqFx
          type: string
        round:
          description: To what round does the contest belong
          example: 2
          format: int32
          type: integer
        roundType:
          $ref: '#/components/schemas/RoundType'
        groupStage:
          description: Is used for more complex Competitions e.g. multi round competitions
            where round 1 group stage matched round 2
          example: 2
          format: int32
          type: integer
        groupStageLabel:
          description: The name of the group stages
          example: Semi-finals
          type: string
        maxNumberOfEntrants:
          description: Maximum number of entrants for the contest
          example: 9999
          format: int32
          type: integer
        minNumberOfEntrants:
          description: Minimum number of entrants for the contest
          example: 0
          format: int32
          type: integer
        scheduledStartDate:
          description: ISO8601 timestamp for when a Contest should start. All records
            are stored in UTC time zone
          format: date-time
          type: string
        scheduledEndDate:
          description: ISO8601 timestamp for when a Contest should end. All records
            are stored in UTC time zone
          format: date-time
          type: string
        actualStartDate:
          description: ISO8601 timestamp for when a Competition started. All records
            are stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        actualEndDate:
          description: ISO8601 timestamp for when a Competition ended. All records
            are stored in UTC time zone
          format: date-time
          readOnly: true
          type: string
        strategies:
          $ref: '#/components/schemas/Strategy'
        status:
          $ref: '#/components/schemas/ContestStatus'
        statusCode:
          description: The code of the contest
          example: 3
          readOnly: true
          type: integer
        memberTagsFilter:
          $ref: '#/components/schemas/DependantOn'
        constraints:
          description: Additional constraints
          example: |-
            - hasTranslations
            - hasRewards
            - hasRules
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://iam.ziqni.io/oauth/authorize
          scopes:
            ViewContests: Grants read access
            ViewCompetitions: Grants read access
            ViewAchievements: Grants read access
            ViewRewards: Grants read access
            ViewMessages: Grants read access
            ViewAwards: Grants read access
            ViewRules: Grants read access
            ViewMembers: Grants read access
          tokenUrl: https://iam.ziqni.io/oauth/token
      type: oauth2
