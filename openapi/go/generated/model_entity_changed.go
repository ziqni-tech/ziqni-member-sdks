/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// EntityChanged 
type EntityChanged struct {
	// 
	EntityId *string `json:"entityId,omitempty"`
	// 
	EntityType *string `json:"entityType,omitempty"`
	// 
	ChangedAt *time.Time `json:"changedAt,omitempty"`
	// 
	TypeOffChange *int32 `json:"typeOffChange,omitempty"`
	// 
	DisplayName *string `json:"displayName,omitempty"`
	// 
	AccountId *string `json:"accountId,omitempty"`
	// 
	SequenceNumber *int64 `json:"sequenceNumber,omitempty"`
	// 
	EntityRefId *string `json:"entityRefId,omitempty"`
	// 
	EntityParentId *string `json:"entityParentId,omitempty"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewEntityChanged instantiates a new EntityChanged object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntityChanged() *EntityChanged {
	this := EntityChanged{}
	return &this
}

// NewEntityChangedWithDefaults instantiates a new EntityChanged object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntityChangedWithDefaults() *EntityChanged {
	this := EntityChanged{}
	return &this
}

// GetEntityId returns the EntityId field value if set, zero value otherwise.
func (o *EntityChanged) GetEntityId() string {
	if o == nil || o.EntityId == nil {
		var ret string
		return ret
	}
	return *o.EntityId
}

// GetEntityIdOk returns a tuple with the EntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetEntityIdOk() (*string, bool) {
	if o == nil || o.EntityId == nil {
		return nil, false
	}
	return o.EntityId, true
}

// HasEntityId returns a boolean if a field has been set.
func (o *EntityChanged) HasEntityId() bool {
	if o != nil && o.EntityId != nil {
		return true
	}

	return false
}

// SetEntityId gets a reference to the given string and assigns it to the EntityId field.
func (o *EntityChanged) SetEntityId(v string) {
	o.EntityId = &v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *EntityChanged) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *EntityChanged) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *EntityChanged) SetEntityType(v string) {
	o.EntityType = &v
}

// GetChangedAt returns the ChangedAt field value if set, zero value otherwise.
func (o *EntityChanged) GetChangedAt() time.Time {
	if o == nil || o.ChangedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ChangedAt
}

// GetChangedAtOk returns a tuple with the ChangedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetChangedAtOk() (*time.Time, bool) {
	if o == nil || o.ChangedAt == nil {
		return nil, false
	}
	return o.ChangedAt, true
}

// HasChangedAt returns a boolean if a field has been set.
func (o *EntityChanged) HasChangedAt() bool {
	if o != nil && o.ChangedAt != nil {
		return true
	}

	return false
}

// SetChangedAt gets a reference to the given time.Time and assigns it to the ChangedAt field.
func (o *EntityChanged) SetChangedAt(v time.Time) {
	o.ChangedAt = &v
}

// GetTypeOffChange returns the TypeOffChange field value if set, zero value otherwise.
func (o *EntityChanged) GetTypeOffChange() int32 {
	if o == nil || o.TypeOffChange == nil {
		var ret int32
		return ret
	}
	return *o.TypeOffChange
}

// GetTypeOffChangeOk returns a tuple with the TypeOffChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetTypeOffChangeOk() (*int32, bool) {
	if o == nil || o.TypeOffChange == nil {
		return nil, false
	}
	return o.TypeOffChange, true
}

// HasTypeOffChange returns a boolean if a field has been set.
func (o *EntityChanged) HasTypeOffChange() bool {
	if o != nil && o.TypeOffChange != nil {
		return true
	}

	return false
}

// SetTypeOffChange gets a reference to the given int32 and assigns it to the TypeOffChange field.
func (o *EntityChanged) SetTypeOffChange(v int32) {
	o.TypeOffChange = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EntityChanged) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EntityChanged) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EntityChanged) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *EntityChanged) GetAccountId() string {
	if o == nil || o.AccountId == nil {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetAccountIdOk() (*string, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *EntityChanged) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *EntityChanged) SetAccountId(v string) {
	o.AccountId = &v
}

// GetSequenceNumber returns the SequenceNumber field value if set, zero value otherwise.
func (o *EntityChanged) GetSequenceNumber() int64 {
	if o == nil || o.SequenceNumber == nil {
		var ret int64
		return ret
	}
	return *o.SequenceNumber
}

// GetSequenceNumberOk returns a tuple with the SequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetSequenceNumberOk() (*int64, bool) {
	if o == nil || o.SequenceNumber == nil {
		return nil, false
	}
	return o.SequenceNumber, true
}

// HasSequenceNumber returns a boolean if a field has been set.
func (o *EntityChanged) HasSequenceNumber() bool {
	if o != nil && o.SequenceNumber != nil {
		return true
	}

	return false
}

// SetSequenceNumber gets a reference to the given int64 and assigns it to the SequenceNumber field.
func (o *EntityChanged) SetSequenceNumber(v int64) {
	o.SequenceNumber = &v
}

// GetEntityRefId returns the EntityRefId field value if set, zero value otherwise.
func (o *EntityChanged) GetEntityRefId() string {
	if o == nil || o.EntityRefId == nil {
		var ret string
		return ret
	}
	return *o.EntityRefId
}

// GetEntityRefIdOk returns a tuple with the EntityRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetEntityRefIdOk() (*string, bool) {
	if o == nil || o.EntityRefId == nil {
		return nil, false
	}
	return o.EntityRefId, true
}

// HasEntityRefId returns a boolean if a field has been set.
func (o *EntityChanged) HasEntityRefId() bool {
	if o != nil && o.EntityRefId != nil {
		return true
	}

	return false
}

// SetEntityRefId gets a reference to the given string and assigns it to the EntityRefId field.
func (o *EntityChanged) SetEntityRefId(v string) {
	o.EntityRefId = &v
}

// GetEntityParentId returns the EntityParentId field value if set, zero value otherwise.
func (o *EntityChanged) GetEntityParentId() string {
	if o == nil || o.EntityParentId == nil {
		var ret string
		return ret
	}
	return *o.EntityParentId
}

// GetEntityParentIdOk returns a tuple with the EntityParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetEntityParentIdOk() (*string, bool) {
	if o == nil || o.EntityParentId == nil {
		return nil, false
	}
	return o.EntityParentId, true
}

// HasEntityParentId returns a boolean if a field has been set.
func (o *EntityChanged) HasEntityParentId() bool {
	if o != nil && o.EntityParentId != nil {
		return true
	}

	return false
}

// SetEntityParentId gets a reference to the given string and assigns it to the EntityParentId field.
func (o *EntityChanged) SetEntityParentId(v string) {
	o.EntityParentId = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EntityChanged) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntityChanged) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EntityChanged) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *EntityChanged) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o EntityChanged) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntityId != nil {
		toSerialize["entityId"] = o.EntityId
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	if o.ChangedAt != nil {
		toSerialize["changedAt"] = o.ChangedAt
	}
	if o.TypeOffChange != nil {
		toSerialize["typeOffChange"] = o.TypeOffChange
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.AccountId != nil {
		toSerialize["accountId"] = o.AccountId
	}
	if o.SequenceNumber != nil {
		toSerialize["sequenceNumber"] = o.SequenceNumber
	}
	if o.EntityRefId != nil {
		toSerialize["entityRefId"] = o.EntityRefId
	}
	if o.EntityParentId != nil {
		toSerialize["entityParentId"] = o.EntityParentId
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableEntityChanged struct {
	value *EntityChanged
	isSet bool
}

func (v NullableEntityChanged) Get() *EntityChanged {
	return v.value
}

func (v *NullableEntityChanged) Set(val *EntityChanged) {
	v.value = val
	v.isSet = true
}

func (v NullableEntityChanged) IsSet() bool {
	return v.isSet
}

func (v *NullableEntityChanged) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntityChanged(val *EntityChanged) *NullableEntityChanged {
	return &NullableEntityChanged{value: val, isSet: true}
}

func (v NullableEntityChanged) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntityChanged) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


