/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileRequest 
type FileRequest struct {
	// 
	MemberRefId string `json:"memberRefId"`
}

// NewFileRequest instantiates a new FileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileRequest(memberRefId string) *FileRequest {
	this := FileRequest{}
	this.MemberRefId = memberRefId
	return &this
}

// NewFileRequestWithDefaults instantiates a new FileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileRequestWithDefaults() *FileRequest {
	this := FileRequest{}
	return &this
}

// GetMemberRefId returns the MemberRefId field value
func (o *FileRequest) GetMemberRefId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberRefId
}

// GetMemberRefIdOk returns a tuple with the MemberRefId field value
// and a boolean to check if the value has been set.
func (o *FileRequest) GetMemberRefIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberRefId, true
}

// SetMemberRefId sets field value
func (o *FileRequest) SetMemberRefId(v string) {
	o.MemberRefId = v
}

func (o FileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["memberRefId"] = o.MemberRefId
	}
	return json.Marshal(toSerialize)
}

type NullableFileRequest struct {
	value *FileRequest
	isSet bool
}

func (v NullableFileRequest) Get() *FileRequest {
	return v.value
}

func (v *NullableFileRequest) Set(val *FileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileRequest(val *FileRequest) *NullableFileRequest {
	return &NullableFileRequest{value: val, isSet: true}
}

func (v NullableFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


