/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// QuerySortBy struct for QuerySortBy
type QuerySortBy struct {
	// The key of the parameter that is being searched
	QueryField string `json:"queryField"`
	Order SortOrder `json:"order"`
}

// NewQuerySortBy instantiates a new QuerySortBy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySortBy(queryField string, order SortOrder) *QuerySortBy {
	this := QuerySortBy{}
	this.QueryField = queryField
	this.Order = order
	return &this
}

// NewQuerySortByWithDefaults instantiates a new QuerySortBy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySortByWithDefaults() *QuerySortBy {
	this := QuerySortBy{}
	return &this
}

// GetQueryField returns the QueryField field value
func (o *QuerySortBy) GetQueryField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QueryField
}

// GetQueryFieldOk returns a tuple with the QueryField field value
// and a boolean to check if the value has been set.
func (o *QuerySortBy) GetQueryFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueryField, true
}

// SetQueryField sets field value
func (o *QuerySortBy) SetQueryField(v string) {
	o.QueryField = v
}

// GetOrder returns the Order field value
func (o *QuerySortBy) GetOrder() SortOrder {
	if o == nil {
		var ret SortOrder
		return ret
	}

	return o.Order
}

// GetOrderOk returns a tuple with the Order field value
// and a boolean to check if the value has been set.
func (o *QuerySortBy) GetOrderOk() (*SortOrder, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Order, true
}

// SetOrder sets field value
func (o *QuerySortBy) SetOrder(v SortOrder) {
	o.Order = v
}

func (o QuerySortBy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["queryField"] = o.QueryField
	}
	if true {
		toSerialize["order"] = o.Order
	}
	return json.Marshal(toSerialize)
}

type NullableQuerySortBy struct {
	value *QuerySortBy
	isSet bool
}

func (v NullableQuerySortBy) Get() *QuerySortBy {
	return v.value
}

func (v *NullableQuerySortBy) Set(val *QuerySortBy) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySortBy) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySortBy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySortBy(val *QuerySortBy) *NullableQuerySortBy {
	return &NullableQuerySortBy{value: val, isSet: true}
}

func (v NullableQuerySortBy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySortBy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


