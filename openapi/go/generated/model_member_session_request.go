/*
ZIQNI Member API

The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MemberSessionRequest 
type MemberSessionRequest struct {
	// 
	Id interface{} `json:"id,omitempty"`
}

// NewMemberSessionRequest instantiates a new MemberSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemberSessionRequest() *MemberSessionRequest {
	this := MemberSessionRequest{}
	return &this
}

// NewMemberSessionRequestWithDefaults instantiates a new MemberSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemberSessionRequestWithDefaults() *MemberSessionRequest {
	this := MemberSessionRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MemberSessionRequest) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MemberSessionRequest) GetIdOk() (*interface{}, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return &o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MemberSessionRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given interface{} and assigns it to the Id field.
func (o *MemberSessionRequest) SetId(v interface{}) {
	o.Id = v
}

func (o MemberSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableMemberSessionRequest struct {
	value *MemberSessionRequest
	isSet bool
}

func (v NullableMemberSessionRequest) Get() *MemberSessionRequest {
	return v.value
}

func (v *NullableMemberSessionRequest) Set(val *MemberSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMemberSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMemberSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemberSessionRequest(val *MemberSessionRequest) *NullableMemberSessionRequest {
	return &NullableMemberSessionRequest{value: val, isSet: true}
}

func (v NullableMemberSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemberSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


