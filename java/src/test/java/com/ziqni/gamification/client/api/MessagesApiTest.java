/*
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gamification.client.api;

import com.ziqni.gamification.client.ApiClientFactory;
import com.ziqni.gamification.client.ApiException;
import com.ziqni.gamification.client.data.LoadMessageData;
import com.ziqni.gamification.client.model.MessageRequest;
import com.ziqni.gamification.client.model.MessageResponse;
import org.junit.jupiter.api.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import java.util.concurrent.CompletableFuture;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for MessagesApi
 */

public class MessagesApiTest implements tests.utils.CompleteableFutureTestWrapper {

    private final MessagesApi api ;
    private  final LoadMessageData loadMessageData;

    public MessagesApiTest() {
        this.api = ApiClientFactory.getMessagesApi();
        this.loadMessageData=new LoadMessageData();
    }

    /**
     * Get messages by member reference id
     *
     * Returns a list of messages for the provided member ref id and applied filters.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMessagesTest() throws ApiException {
        //already created member and get the memberRefId
        var expected="Test_key-9a1f3fce-f8dc-456a-9eeb-3ee4d8116596";
        var response = $(api.getMessages(loadMessageData.getRequest(expected)));

        assertNotNull(response);
        final var data = response.getData();
        assertNotNull(data);
        final var actual = data.get(0).getMemberId();
        assertNotNull(response.getErrors());
        assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        assertEquals(expected,actual, "Should have results");

    }
    
}
