/*
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.gamification.client.api;

import com.ziqni.gamification.client.ApiClientFactory;
import com.ziqni.gamification.client.ApiException;
import com.ziqni.gamification.client.data.LoadContestsData;
import com.ziqni.gamification.client.data.LoadMemberData;
import com.ziqni.gamification.client.model.*;
import org.junit.jupiter.api.*;

import java.util.*;

import java.util.concurrent.CompletableFuture;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for MembersApi
 */
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class MembersApiTest implements tests.utils.CompleteableFutureTestWrapper{

    private final MembersApi api;
    private final LoadMemberData loadMemberData;

    public MembersApiTest(){
        this.api = ApiClientFactory.getMembersApi();
        this.loadMemberData = new LoadMemberData();
    }
    /**
     * Get member information by member reference id
     *
     * Returns member information for the provided member reference id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberTest() throws ApiException {
        //already created member and get the memberRefId
        var expected="Test_key-9a1f3fce-f8dc-456a-9eeb-3ee4d8116596";
        var response = $(api.getMember(loadMemberData.getRequest(expected)));

        assertNotNull(response);
        final var data = response.getData();
        assertNotNull(data);
        final var actual = data.getMemberRefId();
        assertNotNull(response.getErrors());
        assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        assertEquals(expected,actual, "Should have results");
    }
    
    /**
     * Get member optin information
     *
     * Returns a list of member optin information
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberOptinInfoTest() throws ApiException {
        MemberOptinRequest memberOptinRequest = null;
        CompletableFuture<MemberResponse> response = 
        api.getMemberOptinInfo(memberOptinRequest);
        
        // TODO: test validations
    }
    
    /**
     * Get member session by member reference id
     *
     * Returns member&#39;s active session information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberSessionTest() throws ApiException {
        MemberSessionRequest memberSessionRequest = null;
        CompletableFuture<MemberSessionResponse> response = 
        api.getMemberSession(memberSessionRequest);
        
        // TODO: test validations
    }
    
}
