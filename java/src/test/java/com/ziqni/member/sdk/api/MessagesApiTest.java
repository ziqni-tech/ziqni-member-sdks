///*
// * Ziqni Member Cloud API
// * This is the Member cloud for Ziqni
// *
// * The version of the OpenAPI document: 1.0.0
// *
// *
// * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
// * https://openapi-generator.tech
// * Do not edit the class manually.
// */
//
//
//package com.ziqni.member.sdk.api;
//
//import com.ziqni.admin.client.model.MemberTokenRequest;
//import com.ziqni.member.sdk.ApiClientFactoryWs;
//import com.ziqni.member.sdk.ApiException;
//import com.ziqni.member.sdk.configuration.ApiClientConfig;
//import com.ziqni.member.sdk.data.LoadCompetitionsData;
//import com.ziqni.member.sdk.data.LoadMessageData;
//import com.ziqni.member.sdk.util.ApiClientFactoryUtil;
//import com.ziqni.member.sdk.util.TestMemberTokenLoader;
//import org.junit.jupiter.api.*;
//
//import static com.ziqni.member.sdk.util.TestMemberTokenLoader.TEST_MEMBER_TOKEN;
//import static org.junit.jupiter.api.Assertions.*;
//
///**
// * API tests for MessagesApi
// */
//
//public class MessagesApiTest implements tests.utils.CompleteableFutureTestWrapper {
//
//    private final MessagesApiWs api ;
//    private  final LoadMessageData loadMessageData;
//
//    public MessagesApiTest() throws Exception {
//        TestMemberTokenLoader testMemberTokenLoader = new TestMemberTokenLoader();
//        MemberTokenRequest tokenRequest = new MemberTokenRequest()
//                .apiKey(testMemberTokenLoader.getApiKey())
//                .expires(6000)
//                .isReferenceId(true)
//                .member(TEST_MEMBER_TOKEN)
//                .resource("ziqni-gapi");
//
//        // ApiClientConfig.setIdentityAuthorization(testMemberTokenLoader.setMemberTokenRequest(tokenRequest));
//        ApiClientConfig.setIdentityAuthorization(null);
//        ApiClientFactoryUtil.initApiClientFactory();
//        this.api = ApiClientFactoryWs.getMessagesApi();
//        this.loadMessageData=new LoadMessageData();
//    }
//
//    /**
//     * Get messages by member reference id
//     *
//     * Returns a list of messages for the provided member ref id and applied filters.
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void getMessagesTest() throws ApiException {
//        //already created member and get the memberRefId
//        var expected="4QJkJoIBXDlJ4yEc0KlC";
//        var response = $(api.getMessages(loadMessageData.getRequest(expected)));
//
//        assertNotNull(response);
//        final var data = response.getData();
//        assertNotNull(data);
//        final var actual = data.get(0).getId();
//        assertNotNull(response.getErrors());
//        assertTrue(response.getErrors().isEmpty(), "Should have no errors");
//        assertEquals(expected,actual, "Should have results");
//
//    }
//
//}
