/*
 * Ziqni Member Cloud API
 * This is the Member cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.member.sdk.api;

import com.ziqni.member.sdk.ApiException;
import com.ziqni.member.sdk.configuration.ConfigurationLoader;
import com.ziqni.member.sdk.model.ProductFilter;
import com.ziqni.member.sdk.model.ProductRequest;
import com.ziqni.member.sdk.util.ApiClientFactoryUtil;
import org.junit.jupiter.api.*;

import java.util.List;

import static org.junit.jupiter.api.Assertions.assertNotNull;

/**
 * API tests for ProductsApi
 */
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class ProductsApiTest implements tests.utils.CompleteableFutureTestWrapper{

    private ProductsApiWs api;
    @BeforeAll
    public void start() throws Exception {
        ConfigurationLoader.setConfigFile("testing-application.properties");
        this.api = ApiClientFactoryUtil.initApiClientFactory().getProductsApi();

    }

    @AfterAll
    public void stop(){
        ApiClientFactoryUtil.stop();
    }

    /**
     * Get products similar to
     *
     * This operation support retrieval of products similar to given product id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getProductsSimilarToTest() throws ApiException {
        final var productRequest = new ProductRequest()
                .productFilter(new ProductFilter()
                        .entityIds(List.of("ZY1I1pQBImuEfQiP-_Kn"))
                        .addConstraintsItem("similarTo")
                        .limit(20)
                        .skip(0));

        var response = $(api.getProducts(productRequest));

        assertNotNull(response);
        assertNotNull(response.getData());
        assertNotNull(response.getErrors());
        Assertions.assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        Assertions.assertFalse(response.getData().isEmpty(), "Should have results");
    }

}
