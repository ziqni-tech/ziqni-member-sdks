/*
 * Ziqni Member Cloud API
 * This is the Member cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ziqni.member.sdk.api;

import com.ziqni.member.sdk.ApiException;
import com.ziqni.member.sdk.data.LoadRewardsData;
import com.ziqni.member.sdk.model.EntityType;
import com.ziqni.member.sdk.util.ApiClientFactoryUtil;
import org.junit.jupiter.api.*;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for RewardsApi
 */
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class RewardsApiTest implements tests.utils.CompleteableFutureTestWrapper{

    private  RewardsApiWs api;
    private  LoadRewardsData loadRewardsData;

    @BeforeAll
    public void start() throws Exception {
//        ConfigurationLoader.setConfigFile("testing-application.properties");
        this.api = ApiClientFactoryUtil.initApiClientFactory().getRewardsApi();
        this.loadRewardsData = new LoadRewardsData();

    }

    @AfterAll
    public  void stop(){
        ApiClientFactoryUtil.stop();
    }



    /**
     * Get rewards
     *
     * This operation support retrieval of rewards for one or many entitites.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRewardsTest() throws ApiException {
        var entityId = "PHk04JQB_zkdor8I8kUk";
        var entityType = EntityType.ACHIEVEMENT.getValue();
        var response = $(api.getRewards(loadRewardsData.getRequest(entityId, entityType)));

        assertNotNull(response);
        assertNotNull(response.getData());
        assertNotNull(response.getErrors());
        assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        assertFalse(response.getData().isEmpty(), "Should have results");
    }

    @Test
    public void getRewardsForInstantWinTest() throws ApiException {
        var entityId = "HQgqs5UBjPQO8Lf15eqs/row/0/col/2";
        var entityType = EntityType.INSTANTWIN.getValue();
        var response = $(api.getRewards(loadRewardsData.getRequest(entityId, entityType)));

        assertNotNull(response);
        assertNotNull(response.getData());
        assertNotNull(response.getErrors());
        assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        assertFalse(response.getData().isEmpty(), "Should have results");
    }

}
