/*
 * Ziqni Member Cloud API
 * This is the Member cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.member.sdk.api;

import com.ziqni.member.sdk.ZiqniMemberApiFactory;
import com.ziqni.member.sdk.ApiException;
import com.ziqni.member.sdk.data.LoadMemberData;
import com.ziqni.member.sdk.model.ManageOptinRequest;
import com.ziqni.member.sdk.model.MemberResponse;
import com.ziqni.member.sdk.model.MemberSessionRequest;
import com.ziqni.member.sdk.model.MemberSessionResponse;
import com.ziqni.member.sdk.util.ApiClientFactoryUtil;
import org.junit.jupiter.api.*;

import java.util.concurrent.CompletableFuture;

import static org.junit.jupiter.api.Assertions.*;

/**
 * API tests for MembersApi
 */
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
@TestInstance(TestInstance.Lifecycle.PER_CLASS)
public class MembersApiTest implements tests.utils.CompleteableFutureTestWrapper{

    private final MembersApiWs api;
    private final LoadMemberData loadMemberData;

    public MembersApiTest() throws Exception {
        this.api = ApiClientFactoryUtil.initApiClientFactory().getMembersApi();
        this.loadMemberData = new LoadMemberData();
    }
    /**
     * Get member information by member reference id
     *
     * Returns member information for the provided member reference id
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberTest() throws ApiException {
        //already created member and get the memberRefId
        var expected="Test_key-9a1f3fce-f8dc-456a-9eeb-3ee4d8116596";
        var response = $(api.getMember(loadMemberData.getRequest(expected)));

        assertNotNull(response);
        final var data = response.getData();
        assertNotNull(data);
        final var actual = data.getMemberRefId();
        assertNotNull(response.getErrors());
        Assertions.assertTrue(response.getErrors().isEmpty(), "Should have no errors");
        assertEquals(expected,actual, "Should have results");
    }
    
    /**
     * Get member optin information
     *
     * Returns a list of member optin information
     *
     * @throws ApiException
     *          if the Api call fails
     */
//    @Test
//    public void getMemberOptinInfoTest() throws ApiException {
//        ManageOptinRequest memberOptinRequest = null;
//        CompletableFuture<MemberResponse> response =
//        api.manageOptin(memberOptinRequest);
//
//        // TODO: test validations
//    }
    
}
