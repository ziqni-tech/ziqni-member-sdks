/*
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ziqni.gamification.client.api;

import com.ziqni.gamification.client.StreamingClient;
import com.ziqni.gamification.client.ApiClient;
import com.ziqni.gamification.client.ApiException;
import com.ziqni.gamification.client.ApiResponse;
import com.ziqni.gamification.client.Pair;
    import com.ziqni.gamification.client.model.MemberOptinRequest;
    import com.ziqni.gamification.client.model.MemberRequest;
    import com.ziqni.gamification.client.model.MemberResponse;
    import com.ziqni.gamification.client.model.MemberSessionRequest;
    import com.ziqni.gamification.client.model.MemberSessionResponse;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.time.Duration;
    import java.util.*;

    import java.util.concurrent.CompletableFuture;

@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
    public class MembersApi { //extends MembersApi {
    private final ApiClient apiClient;
    private final ObjectMapper memberVarObjectMapper;
    private final Duration memberVarReadTimeout;
    private final StreamingClient streamingClient;

    public MembersApi(ApiClient apiClient, StreamingClient streamingClient, Duration readTimeout) {
    this.apiClient = apiClient;
    this.memberVarObjectMapper = apiClient.getObjectMapper();
    this.streamingClient = streamingClient;
    this.memberVarReadTimeout = null;
    }

        // x-ws-exclude --> 
            /**
            * Get member information by member reference id
            * Returns member information for the provided member reference id
                * @param memberRequest  (required)
                * @return CompletableFuture&lt;MemberResponse&gt;
            * @throws ApiException if fails to make API call
            */
            public CompletableFuture<MemberResponse> getMember(MemberRequest memberRequest) {
                var request = new HashMap<String, Object>();
            
                        

            
                        
            request.put("memberRequest",memberRequest);

                CompletableFuture<MemberResponse> result = this.streamingClient.sendWithApiCallback("/aapi/getMember", request);
                return result;
            }
        // x-ws-exclude --> 
            /**
            * Get member optin information
            * Returns a list of member optin information
                * @param memberOptinRequest  (required)
                * @return CompletableFuture&lt;MemberResponse&gt;
            * @throws ApiException if fails to make API call
            */
            public CompletableFuture<MemberResponse> getMemberOptinInfo(MemberOptinRequest memberOptinRequest) {
                var request = new HashMap<String, Object>();
            
                        

            
                        
            request.put("memberOptinRequest",memberOptinRequest);

                CompletableFuture<MemberResponse> result = this.streamingClient.sendWithApiCallback("/aapi/getMemberOptinInfo", request);
                return result;
            }
        // x-ws-exclude --> 
            /**
            * Get member session by member reference id
            * Returns member&#39;s active session information.
                * @param memberSessionRequest  (required)
                * @return CompletableFuture&lt;MemberSessionResponse&gt;
            * @throws ApiException if fails to make API call
            */
            public CompletableFuture<MemberSessionResponse> getMemberSession(MemberSessionRequest memberSessionRequest) {
                var request = new HashMap<String, Object>();
            
                        

            
                        
            request.put("memberSessionRequest",memberSessionRequest);

                CompletableFuture<MemberSessionResponse> result = this.streamingClient.sendWithApiCallback("/aapi/getMemberSession", request);
                return result;
            }
        }
