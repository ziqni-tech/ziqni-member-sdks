/*
 * Ziqni Gamification Cloud API
 * This is the gamification cloud for Ziqni
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.ziqni.gamification.client.api;

import com.ziqni.gamification.client.StreamingClient;
import com.ziqni.gamification.client.ApiClient;
import com.ziqni.gamification.client.ApiException;
import com.ziqni.gamification.client.ApiResponse;
import com.ziqni.gamification.client.Pair;
import com.ziqni.gamification.client.model.AwardRequest;
import com.ziqni.gamification.client.model.AwardResponse;
import com.ziqni.gamification.client.model.ClaimAwardRequest;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.time.Duration;
import java.util.*;

import java.util.concurrent.CompletableFuture;

@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
    public class AwardsApiWs extends AwardsApi {
    private final ApiClient apiClient;
    private final ObjectMapper memberVarObjectMapper;
    private final Duration memberVarReadTimeout;
    private final StreamingClient streamingClient;

    public AwardsApiWs(ApiClient apiClient, StreamingClient streamingClient, Duration readTimeout) {
        this.apiClient = apiClient;
        this.memberVarObjectMapper = apiClient.getObjectMapper();
        this.streamingClient = streamingClient;
        this.memberVarReadTimeout = null;
    }

        /**
        * Claim awards.
        * This operation enables a member to claim awards.
            * @param claimAwardRequest  (required)
            * @return CompletableFuture&lt;AwardResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<AwardResponse> claimAwards(ClaimAwardRequest claimAwardRequest) {
        var request = new HashMap<String, Object>();
        
                

        
                
        request.put("claimAwardRequest",claimAwardRequest);

        CompletableFuture<AwardResponse> result = this.streamingClient.sendWithApiCallback("/aapi/claimAwards", request);
        return result;
        }
        /**
        * Get awards.
        * This operation supports retrieval of awards for one or many entities.
            * @param awardRequest  (required)
            * @return CompletableFuture&lt;AwardResponse&gt;
        * @throws ApiException if fails to make API call
        */
        public CompletableFuture<AwardResponse> getAwards(AwardRequest awardRequest) {
        var request = new HashMap<String, Object>();
        
                

        
                
        request.put("awardRequest",awardRequest);

        CompletableFuture<AwardResponse> result = this.streamingClient.sendWithApiCallback("/aapi/getAwards", request);
        return result;
        }
        }
