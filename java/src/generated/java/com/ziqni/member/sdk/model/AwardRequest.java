/*
 * Ziqni Member API
 * The ZIQNI Member-API is the primary resource used to build services and widgets for your members [customers, players, patients, etc]. The service is Stomp websokets with SOCK.js even though the system is decribed using OpenApi schema for convenience.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ziqni.member.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ziqni.member.sdk.model.AwardFilter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * 
 */
@ApiModel(description = "")
@JsonPropertyOrder({
  AwardRequest.JSON_PROPERTY_AWARD_FILTER
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AwardRequest {
  public static final String JSON_PROPERTY_AWARD_FILTER = "awardFilter";
  private AwardFilter awardFilter;

  public AwardRequest() { 
  }

  public AwardRequest awardFilter(AwardFilter awardFilter) {
    this.awardFilter = awardFilter;
    return this;
  }

   /**
   * Get awardFilter
   * @return awardFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AWARD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AwardFilter getAwardFilter() {
    return awardFilter;
  }


  @JsonProperty(JSON_PROPERTY_AWARD_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAwardFilter(AwardFilter awardFilter) {
    this.awardFilter = awardFilter;
  }


  /**
   * Return true if this AwardRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwardRequest awardRequest = (AwardRequest) o;
    return Objects.equals(this.awardFilter, awardRequest.awardFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awardFilter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwardRequest {\n");
    sb.append("    awardFilter: ").append(toIndentedString(awardFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

